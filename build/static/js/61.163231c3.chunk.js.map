{"version":3,"sources":["assets/images_manual/add.svg","screens/Purchase Entry/Purchase Return/create.js"],"names":["Create","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","purchaseReturnDate","setPurchaseReturnDate","currentParty","setCurrentParty","currentWarehouse","setCurrentWarehouse","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentProduct","setCurrentProduct","currentPaymentMethod","setCurrentPaymentMethod","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","purchase_return_price","setPurchaseReturnPrice","label","value","gst","setGST","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allParty","setAllParty","allWarehouses","setAllWarehouses","allPaymentMethods","setAllPaymentMethods","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","fetchInvoice","a","fetch","url","method","headers","token","response","ok","json","data","status","invoice_number","toast","error","message","e","products","inventory_list","map","item","push","product_id","name","product_name","total_qty","type","price","sale_unit_price","unit","product_unit","hsbn","product_hsbn","serial_no","product_serial_no","product_list","id","useEffect","payment_methods","party_list","amount","due_amount","warehouse_list","fetchPaymentMethods","fetchData","fetchGSTList","fetchWarehouse","parseFloat","handleChange","fetchProd","className","class","for","readOnly","options","onChange","target","checked","onClick","handleProduct","htmlFor","required","new_item_dict","discount_type","total","warehouse_id","warehouse_name","new_list_edit","index","parseInt","taxable_amount","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","length","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitPurchaseReturn","body","formData","success","header","final","paymentMethod","taxableAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/61.163231c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\nimport plus from '../../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { userContext } from '../../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\n\nexport default function Create() {\n    const { user,setLoad } = React.useContext(userContext);\n    const [invoiceNo, setInvoiceNo] = React.useState('');\n    const [purchaseReturnDate, setPurchaseReturnDate] = React.useState('');\n    const [currentParty, setCurrentParty] = React.useState('');\n    const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState('');\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [purchase_return_price, setPurchaseReturnPrice] = React.useState(0);\n    const [gst,setGST] = React.useState({\n        label: 0,\n        value: 0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list,setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allParty, setAllParty] = React.useState([]);\n    const [allWarehouses, setAllWarehouses] = React.useState([]);\n    const [allPaymentMethods, setAllPaymentMethods] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts,setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount,setDiscountAmount] = React.useState(0);\n    const [taxAmount,setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax=0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n        \n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n            setCurrentPaymentMethod({\n                label: \"cash\"\n            });\n        }\n        fetchPaymentMethods();\n\n        async function fetchData() {\n            setLoad(true);\n            const response = await fetch(url + 'partylist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllParty(data?.party_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name,\n                            amount: item.due_amount\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchData();\n        \n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n\n        async function fetchWarehouse() {\n            setLoad(true);\n            const response = await fetch(url + 'warehouselist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllWarehouses(data?.warehouse_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchWarehouse();\n        fetchInvoice();\n    }, [])\n\n    async function fetchInvoice(){\n        setLoad(true);    \n        const response = await fetch(url + `fetchInvoice`, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false);\n            if (data.status === 200) {\n                setInvoiceNo(data.invoice_number);\n            }\n            else{\n                toast.error(data.message);}\n        }        \n    }\n    \n    async function fetchProd(e) {\n        setLoad(true);    \n        const response = await fetch(url + `fetchProducts?warehouse=${e.value}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                let products=[];\n                if(data.inventory_list){\n                  data.inventory_list.map(item=>{\n                    products.push(\n                       {value : item.product_id,\n                        name :  item.product_name,\n                        label : `${item.product_name}  ${item.total_qty}`,\n                        type : \"product\",\n                        price : item.sale_unit_price,\n                        unit : item.product_unit,\n                        hsbn : item.product_hsbn,\n                        serial_no : item.product_serial_no,\n                       }\n                  )})\n                }\n                if(data.product_list){\n                    data.product_list.map(item=>{\n                      products.push(\n                         {value : item.id,\n                          name : item.name,   \n                          label : item.name,\n                          type: item.type,\n                          unit: item.unit,\n                          price: item.price,\n                          hsbn : item.hsbn,\n                          serial_no : item.serial_no\n                         }\n                    )})\n                  }  \n                setAllProducts(products);\n            } else {\n                toast.error(data.message)\n            }\n        }\n    }\n\n    const calculateTotal = () => {\n        if (purchase_return_price > 0 && qty > 0 && gst) {\n            amount_item = parseFloat(purchase_return_price) * parseFloat(qty); //amount before tax\n            tax_amount = (parseFloat(amount_item)/100) * parseFloat(gst.value);\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n    calculateFinalPrice()\n\n    const handleSubmitItem = () => {\n        if (invoiceNo && currentProduct && currentWarehouse && currentParty && purchase_return_price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                purchase_return_price: purchase_return_price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount,\n                warehouse_id : currentWarehouse.value,\n                warehouse_name : currentWarehouse.label\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem)-1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount=0;\n                let taxable_amount=0;\n                new_list_edit.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setPaidAmount(total)\n                setAllItems(new_list_edit);\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount=0;\n                new_item_list.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n                setPaidAmount(total)\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setPurchaseReturnPrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value:0,\n                label:0\n            });\n            perItemAmount = 0;\n            amount_item= 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount=0;\n            amount_after_tax=0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n    const finalSubmit = () => {\n        if (invoiceNo && currentWarehouse && currentParty && allItems.length > 0 && totalValue){\n            setLoad(true)\n            let header = {\n                invoiceNo : invoiceNo,\n                purchaseReturnDate : purchaseReturnDate,\n                currentParty : currentParty,\n                currentWarehouse : currentWarehouse,\n                discountType : discountType\n            }\n            let final = {\n                totalValue : totalValue,\n                finalAmount : finalAmount,\n                paidAmount : paidAmount,\n                remainAmount : remainAmount,\n                finalDiscountValue : finalDiscountValue,\n                finalDiscountCriteria : finalDiscountCriteria,\n                remarks : remarks,\n                paymentMethod : currentPaymentMethod.label,\n                discountAmount : discountAmount,\n                taxableAmount : taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array',JSON.stringify(final_array));\n            formData.append('allItems',JSON.stringify(allItems));\n\n            async function submitPurchaseReturn(){\n                const response = await fetch(url + 'createPurchaseReturn',{\n                    method : 'POST',\n                    headers : {\n                        'Authorization' : user.token\n                    },\n                    body : formData\n                });\n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        toast.success(data.message);\n                        setPurchaseReturnDate('');\n                        setCurrentParty('');\n                        setDiscountType('None');\n                        setDiscountAmount(0);\n                        setTaxableAmount(0);\n                        setFinalDiscountCriteria('percent');\n                        setFinalDiscountValue(0);\n                        setCurrentProduct('');\n                        setCurrentWarehouse('');\n                        setCurrentPaymentMethod({\n                            label: \"cash\"\n                        });\n                        setAllProducts([]);\n                        setTotalValue(0);\n                        setPaidAmount(0);\n                        setGST({\n                            value:0,\n                            label:0\n                        })\n                        setAllItems([]);\n                        finalAmount = 0;\n                        remainAmount = 0;\n                        discount_amount_final = 0;\n                        amount_before_discount_final = 0;\n                        amount_after_discount_final = 0;\n                        fetchInvoice();\n                    }else{\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitPurchaseReturn()\n        }else{\n            toast.error('Please fill the data with *');\n        }\n    }\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setPurchaseReturnPrice(item.purchase_return_price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    }\n    const handleChange=(e)=>{\n       setCurrentWarehouse(e);\n       fetchProd(e);\n    }\n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        setAllItems(new_item);\n    }\n    const handleProduct=(e)=>{\n        setCurrentProduct(e);\n        setPurchaseReturnPrice(e.price);\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Invoice No.</label>\n                            <input readOnly value={invoiceNo} type=\"text\" class=\"form-control\" id=\"invoice-number\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Warehouse<span className='required-label'>*</span></label>\n                            <Select options={allWarehouses} value={currentWarehouse} onChange={(e)=>handleChange(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Purchase Return Date</label>\n                            <input value={purchaseReturnDate} onChange={e => setPurchaseReturnDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Party<span className='required-label'>*</span></label>\n                            <Select options={allParty} value={currentParty} onChange={setCurrentParty} />\n                        </div>\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>    \n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={(e)=>handleProduct(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Price<span className='required-label'>*</span></label>\n                            <input value={purchase_return_price} onChange={(e) => setPurchaseReturnPrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` :null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                            <Select options={gst_list} value={gst} onChange={setGST} />\n                        </div>\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                <p className='p-0 m-0'>{item.item.name}</p>\n                                                <p>({item.warehouse_name})</p>\n                                            </td>\n                                            <td>{item.purchase_return_price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                            {currentParty ?<div>Due Amount: {currentParty.amount}</div> :null}\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                    <Select options={allPaymentMethods} value={currentPaymentMethod} onChange={setCurrentPaymentMethod}/>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}