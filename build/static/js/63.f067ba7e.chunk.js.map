{"version":3,"sources":["assets/images_manual/add.svg","screens/Purchase Entry/Purchase/Edit.js"],"names":["Edit","id","useParams","history","useHistory","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","purchaseDate","setPurchaseDate","currentParty","setCurrentParty","currentWarehouse","setCurrentWarehouse","allPaymentMethods","setAllPaymentMethods","label","currentPaymentMethod","setCurrentPaymentMethod","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentProduct","setCurrentProduct","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","purchase_price","setPurchasePrice","value","gst","setGST","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allParty","setAllParty","allWarehouses","setAllWarehouses","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","useEffect","a","fetch","url","method","headers","token","response","json","data","payment_methods","map","item","ok","status","console","log","party_list","name","toast","error","message","warehouse_list","product_list","type","unit","hsbn","serial_no","header","purchase_header","final_discount_criteria","final_discount_value","parseFloat","bill_discount_percentage","bill_discount_amount","items","purchase_items","invoice_number","purchase_date","party_id","party_name","warehouse_id","warehouse_name","discount_type","midItems","i","length","current_item","discount_value","discount_percent","obj","product_id","product_name","product_type","product_unit","product_hsbn","product_serial_no","item_id","tax_percent","total","push","current_total_fetch","taxable_amount","amount_paid","payment_type","fetchPaymentMethods","fetchDataParty","fetchGSTList","fetchWarehouse","fetchProd","fetchDetailPurchase","className","class","for","onChange","e","target","required","options","checked","onClick","htmlFor","readOnly","new_item_dict","new_list_edit","index","parseInt","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitPurchase","body","formData","success","final","paymentMethod","taxableAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/63.f067ba7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\nimport plus from '../../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url, formatDate } from 'src/helpers/helpers';\nimport { userContext } from '../../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useHistory, useParams } from 'react-router-dom'\n\nexport default function Edit() {\n    let { id } = useParams();\n    const history = useHistory();\n    const { user,setLoad } = React.useContext(userContext);\n    const [invoiceNo, setInvoiceNo] = React.useState('');\n    const [purchaseDate, setPurchaseDate] = React.useState('');\n    const [currentParty, setCurrentParty] = React.useState('');\n    const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n    const [allPaymentMethods, setAllPaymentMethods] = React.useState([]);\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState({\n        label: \"cash\"\n    });\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [purchase_price, setPurchasePrice] = React.useState(0);\n    const [gst,setGST] = React.useState({\n        value: 0,\n        label: 0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list,setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allParty, setAllParty] = React.useState([]);\n    const [allWarehouses, setAllWarehouses] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts,setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount,setDiscountAmount] = React.useState(0);\n    const [taxAmount,setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax=0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n        \n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n        }\n        fetchPaymentMethods();\n\n        async function fetchDataParty() {\n            setLoad(true);\n            const response = await fetch(url + 'partylist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    console.log(data);\n                    setAllParty(data?.party_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchDataParty();\n\n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n\n        async function fetchWarehouse() {\n            setLoad(true);\n            const response = await fetch(url + 'warehouselist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllWarehouses(data?.warehouse_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchWarehouse();\n\n        async function fetchProd() {\n            setLoad(true);\n            const response = await fetch(url + 'productlist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllProducts(data?.product_list?.map(item=>{\n                        return {\n                            value : item.id,\n                            label : item.name,\n                            type : item.type,\n                            unit : item.unit,\n                            hsbn : item.hsbn,\n                            serial_no : item.serial_no\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchProd();\n\n        async function fetchDetailPurchase() {\n            setLoad(true);\n            const response = await fetch(url + 'getPurchaseById/' + id, {\n                headers: {\n                    'Authorization': user.token\n                }\n            });\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    let header = data.purchase_header;\n                    let final_discount_criteria='';\n                    let final_discount_value = 0;\n                    if (parseFloat(header.bill_discount_percentage)>0) {\n                        final_discount_criteria = 'percent';\n                        final_discount_value = header.bill_discount_percentage;\n                    } else if (parseFloat(header.bill_discount_amount)>0) {\n                        final_discount_criteria = 'amount';\n                        final_discount_value = header.bill_discount_amount\n                    }\n                    let items = data.purchase_items;\n                    setInvoiceNo(header.invoice_number);\n                    setPurchaseDate(header.purchase_date);\n                    setCurrentParty({\n                        value: header.party_id,\n                        label: header.party_name\n                    });\n                    setCurrentWarehouse({\n                        value: header.warehouse_id,\n                        label: header.warehouse_name\n                    })\n                    setDiscountType(header.discount_type);\n                    let midItems = [];\n                    for (let i = 0; i < items.length; i++) {\n                        let current_item = items[i]; \n                        let discount_type = '';\n                        let discount_value = 0;\n                        \n                        if (current_item.discount_percent && parseFloat(current_item.discount_percent) > 0) {\n                            discount_type = 'percent'\n                            discount_value = current_item.discount_percent\n                        } else if (current_item.discount_amount) {\n                            discount_type = 'amount';\n                            discount_value = current_item.discount_amount\n                        } else {\n                            //\n                        }\n                        let obj = {\n                            item: {\n                                value: current_item.product_id,\n                                label: current_item.product_name,\n                                type: current_item.product_type,\n                                unit: current_item.product_unit,\n                                hsbn: current_item.product_hsbn,\n                                serial_no:current_item.product_serial_no\n                            },\n                            item_id: current_item.id,\n                            purchase_price: current_item.purchase_price,\n                            qty: current_item.qty,\n                            discount_type: discount_type,\n                            discountValue: discount_value,\n                            gst: {\n                                label: current_item.tax_percent,\n                                value: current_item.tax_percent\n                            },\n                            total: current_item.total,\n                            amount_item: current_item.total,\n                            amount_after_tax: current_item.amount_after_tax,\n                            amount_before_discount: current_item.amount_before_discount,\n                            tax_amount: current_item.tax_amount,\n                            discount_amount: current_item.discount_amount,\n                            amount_after_discount: current_item.amount_after_discount,\n                            warehouse_id : current_item.warehouse_id,\n                            warehouse_name : current_item.warehouse_name\n                        }\n\n                        midItems.push(obj)\n                    }\n                    setAllItems(midItems);\n                    let current_total_fetch = 0;\n                    let discount_amount = 0;\n                    let taxable_amount = 0;\n                    midItems.map(item => {\n                        current_total_fetch = parseFloat(current_total_fetch) + parseFloat(item.total)\n                        discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n                        taxable_amount = parseFloat(taxable_amount)+ parseFloat(item.tax_amount);\n                    })\n                    setTotalValue(current_total_fetch);\n                    setDiscountAmount(discount_amount);\n                    setTaxableAmount(taxable_amount);\n                    setFinalDiscountValue(final_discount_value);\n                    setFinalDiscountCriteria(final_discount_criteria);\n                    setPaidAmount(header.amount_paid);\n                    setCurrentPaymentMethod({\n                        label: header.payment_type\n                    });\n                    setRemarks(header.remarks)\n                } else {\n                    toast.error(data.message);\n                }\n            }\n        }\n        fetchDetailPurchase()\n    }, [])\n\n\n    const calculateTotal = () => {\n        if (purchase_price > 0 && qty > 0 && gst) {\n            amount_item = parseFloat(purchase_price) * parseFloat(qty); //amount before tax\n            tax_amount = (parseFloat(amount_item)/100) * parseFloat(gst.value);\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n\n    calculateFinalPrice()\n\n    const handleSubmitItem = () => {\n        if (invoiceNo && purchaseDate && currentProduct && currentWarehouse && currentParty && purchase_price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                purchase_price: purchase_price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount,\n                warehouse_id : currentWarehouse.value,\n                warehouse_name : currentWarehouse.label\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem)-1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount=0;\n                let taxable_amount=0;\n                new_list_edit.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setAllItems(new_list_edit);\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount=0;\n                new_item_list.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setPurchasePrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value: 0,\n                label: 0\n            });\n            perItemAmount = 0;\n            amount_item= 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount=0;\n            amount_after_tax=0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n\n    const finalSubmit = () => {\n        if (invoiceNo && purchaseDate && currentWarehouse && currentParty && allItems.length > 0 && totalValue){\n            setLoad(true)\n            let header = {\n                invoiceNo : invoiceNo,\n                purchaseDate : purchaseDate,\n                currentParty : currentParty,\n                currentWarehouse : currentWarehouse,\n                discountType : discountType\n            }\n            let final = {\n                totalValue : totalValue,\n                finalAmount : finalAmount,\n                paidAmount : paidAmount,\n                remainAmount : remainAmount,\n                finalDiscountValue : finalDiscountValue,\n                finalDiscountCriteria : finalDiscountCriteria,\n                remarks : remarks,\n                paymentMethod : currentPaymentMethod.label,\n                discountAmount : discountAmount,\n                taxableAmount : taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array',JSON.stringify(final_array));\n            formData.append('allItems',JSON.stringify(allItems));\n\n            async function submitPurchase(){\n                const response = await fetch(url + 'updatePurchaseEntry/' + id,{\n                    method : 'POST',\n                    headers : {\n                        'Authorization' : user.token\n                    },\n                    body : formData\n                });\n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        toast.success(data.message);\n                        history.push('/purchaseReport')\n                    }else{\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitPurchase()\n        }else{\n            toast.error('Please fill the data with *');\n        }\n    }\n\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setPurchasePrice(item.purchase_price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    }\n\n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        let total = 0;\n        let discount_amount = 0;\n        let taxable_amount = 0;\n        new_item.map(item => {\n            total = parseFloat(total) + parseFloat(item.total);\n            discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n            taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount)\n        })\n        setDiscountAmount(discount_amount);\n        setTaxableAmount(taxable_amount);\n        setTotalValue(total);\n        setAllItems(new_item);\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Invoice No.<span className='required-label'>*</span></label>\n                            <input value={invoiceNo} onChange={e => setInvoiceNo(e.target.value)} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Warehouse<span className='required-label'>*</span></label>\n                            <Select options={allWarehouses} value={currentWarehouse} onChange={setCurrentWarehouse} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Purchase Date<span className='required-label'>*</span></label>\n                            <input value={purchaseDate} onChange={e => setPurchaseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Party<span className='required-label'>*</span></label>\n                            <Select options={allParty} value={currentParty} />\n                        </div>\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Item' && true} onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Bill' && true} onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Both' && true} onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>    \n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={setCurrentProduct} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Purchase Price<span className='required-label'>*</span></label>\n                            <input value={purchase_price} onChange={(e) => setPurchasePrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` :null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                            <Select options={gst_list} value={gst} onChange={setGST} />\n                        </div>\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                <p className='p-0 m-0'>{item.item.label}</p>\n                                                <p>({item.warehouse_name})</p>\n                                            </td>\n                                            <td>{item.purchase_price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input value={paidAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                   <Select options={allPaymentMethods} value={currentPaymentMethod} />                                   \n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}