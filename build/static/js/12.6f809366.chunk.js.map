{"version":3,"sources":["components/CustomModal.js","components/InventoryAdjustModal.js","screens/Reciept/index.js"],"names":["CustomModal","props","modal","setModal","deleteEntry","className","show","onClose","closeButton","onClick","color","InventoryAdjustModal","header","Label","showModal","setShowModal","adjustAmount","setAdjustAmount","submitAdjust","htmlFor","type","value","onChange","e","target","Index","React","useContext","userContext","user","setLoad","useState","recieptList","setRecieptList","setType","id","setId","from_Date","setFromDate","to_Date","setToDate","total","setTotal","adjutAmount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","list","map","item","payment_type","formatDate","date","split","amount","condition","created_by_name","parseInt","total_records","toast","error","message","fetchData","columns","key","text","sortable","width","cell","record","style","cursor","showModalFunc","class","query","handleChange","string","page_number","page_size","filter_value","sort_order","sort","JSON","stringify","deleteData","formData","FormData","body","respone","append","editData","onSubmit","preventDefault","submit","catch","err","handleSubmit","for","config","length_menu","button","excel","print","extra","records","total_record","dynamic"],"mappings":"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","file":"static/js/12.6f809366.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\nexport default function CustomModal(props) {\n    const { modal, setModal, deleteEntry } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={modal}\n                onClose={setModal}\n            >\n                <CModalHeader closeButton>\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <p> Are you sure you want to delete this record ?</p>\n                    <div className='btn-div-modal-group delete_modal_Btns'>\n                        <button onClick={() => deleteEntry()} className='delete_modal_yes_Btn'>Yes, Approve</button>\n                        <button className='btn btn-primary delete_modal_cancel_Btn' color=\"secondary\" onClick={() => setModal(false)}>Cancel</button>\n                    </div>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\n\nexport default function InventoryAdjustModal(props) {\n    const { header, Label, showModal, setShowModal, adjustAmount,setAdjustAmount,submitAdjust } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={showModal}\n                onClose={setShowModal}\n            >\n                <CModalHeader closeButton>\n                    {header}\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <div className=\"row\">\n\n                        <div className=\"col-12\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">{Label}</label>\n                                <input type=\"text\" value={adjustAmount} onChange={e => setAdjustAmount(e.target.value)} className='form-control' />\n                            </div>\n                        </div>\n                        \n                    </div>\n                    <button type='submit' onClick={()=>submitAdjust()} className='col-12 btn btn-secondary mb-5'>Submit</button>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import React,{Fragment} from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { formatDate } from 'src/helpers/helpers';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport CustomModal from '../../components/CustomModal';\nimport InventoryAdjustModal from '../../components/InventoryAdjustModal';\n\nexport default function Index() {\n    const { user, setLoad } = React.useContext(userContext);\n    const [recieptList, setRecieptList] = React.useState([]);\n    const [showModal, setShowModal] = React.useState(false);\n    const [modal, setModal] = React.useState(false);\n    const [type,setType] = React.useState('');\n    const [id, setId] = React.useState('');\n    const [from_Date, setFromDate] = React.useState('');\n    const [to_Date, setToDate] = React.useState('');\n    const [total,setTotal] = React.useState(0);\n    const [adjutAmount, setAdjustAmount] = React.useState('');\n\n    const deleteEntry = () => {\n        setLoad(true)\n        async function deleteData() {\n            const response = await fetch(url + 'deleteReciept/' + id, {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            if (data.status === 200) {\n                setModal(false);\n                setId('');\n                async function fetchData() {\n                    const response = await fetch(url + 'fetchRecieptList', {\n                        method: 'GET',\n                        headers: {\n                            'Authorization': user?.token\n                        }\n                    })\n                    if (response.ok === true) {\n                        const data = await response.json();\n                        setLoad(false)\n                        if (data.status === 200) {\n                            setRecieptList(data.list.map((item)=>{\n                                return{\n                                   'id': item.id,\n                                   'payment_type': item.payment_type,\n                                   'date': formatDate(item.date.split(' ')[0]),\n                                   'type': item.type,\n                                   'amount': item.amount,\n                                   'condition': item.condition,\n                                   'created_by_name': item.created_by_name\n                                }\n                            }));\n                            setTotal(parseInt(data.total_records));\n                        } else {\n                            toast.error(data.message);\n                        }\n                    }\n                }\n                fetchData();\n            } else {\n                setModal(false);\n                setId('');\n                setLoad(false);\n                toast.error(data.message);\n            }\n        }\n        deleteData();\n    }\n    const submitAdjust = () => {\n        setLoad(true)\n            setLoad(true)\n            const formData = new FormData();\n            formData.append('new_amount', adjutAmount);\n            async function editData() {\n                const respone = await fetch(url + 'updateReciept/' + id, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': user.token,\n                    },\n                    body: formData\n                })\n\n                if (respone.ok === true) {\n                    const data = await respone.json();\n                    setLoad(false)\n                    if (data.status === 200) {\n                        setId('');\n                        setAdjustAmount('');\n                        setShowModal(false);\n                        async function fetchData() {\n                            const response = await fetch(url + 'fetchRecieptList', {\n                                method: 'GET',\n                                headers: {\n                                    'Authorization': user?.token\n                                }\n                            })\n\n                            if (response.ok === true) {\n                                const data = await response.json();\n\n                                if (data.status === 200) {\n                                    setRecieptList(data.list.map((item)=>{\n                                        return{\n                                           'id': item.id,\n                                           'payment_type': item.payment_type,\n                                           'date': formatDate(item.date.split(' ')[0]),\n                                           'type': item.type,\n                                           'amount': item.amount,\n                                           'condition': item.condition,\n                                           'created_by_name': item.created_by_name\n                                        }\n                                    }));\n                                    setTotal(parseInt(data.total_records));\n                                } else {\n                                    toast.error(data.message);\n                                }\n                            }\n                        }\n                        fetchData();\n                    } else {\n                        toast.error(data.message)\n                    }\n                }\n            }\n            editData();\n        }\n    React.useEffect(() => {\n        setLoad(true)\n        async function fetchData() {\n            const response = await fetch(url + 'fetchRecieptList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setRecieptList(data.list.map((item)=>{\n                        return{\n                           'id': item.id,\n                           'payment_type': item.payment_type,\n                           'date': formatDate(item.date.split(' ')[0]),\n                           'type': item.type,\n                           'amount': item.amount,\n                           'condition': item.condition,\n                           'created_by_name': item.created_by_name\n                        }\n                    }));\n                    setTotal(parseInt(data.total_records));\n                } else {\n                    toast.error(data.message);\n                }\n            }\n        }\n        fetchData();\n    }, [])\n\n    function handleSubmit(e){\n        e.preventDefault();\n        let string=\"\";\n        if(to_Date && from_Date && type){\n           string=`to=${to_Date}&from=${from_Date}&type=${type}`;   \n        }\n        else if(to_Date && from_Date){\n            string=`to=${to_Date}&from=${from_Date}`;\n        }\n        else if(type){\n            string=`type=${type}`\n        }\n            setLoad(true)\n            async function submit(){\n                const response = await fetch(url + `fetchRecieptList?${string}`,{\n                    method : 'GET',\n                    headers : {\n                        'Authorization' : user?.token\n                    }\n                });\n                 \n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        setRecieptList(data.list.map((item)=>{\n                            return{\n                               'id': item.id,\n                               'payment_type': item.payment_type,\n                               'date': formatDate(item.date.split(' ')[0]),\n                               'type': item.type,\n                               'amount': item.amount,\n                               'condition': item.condition,\n                               'created_by_name': item.created_by_name\n                            }\n                        }));\n                        setTotal(parseInt(data.total_records));\n                    }else{\n                        toast.error(data.message)\n                    }\n                }else{\n                    toast.error('Oops something went wrong!')\n                }\n            }\n            submit().catch(err=>toast.error('Internal server error!. Please try again later'))\n    }\n    \n    const columns = [\n        {\n            key: \"id\",\n            text: \"Reciept Id\",\n            className: \"id\",\n            sortable: true,\n        },\n        {\n            key: \"type\",\n            text: \"Type\",\n            className: \"type\",\n            sortable: true\n        },\n        {\n            key: \"amount\",\n            text: \"Amount\",\n            className: \"amount\",\n            sortable: true\n        },\n        {\n            key: \"date\",\n            text: \"Date\",\n            className: \"date\",\n            sortable: true\n        },\n        {\n            key: \"condition\",\n            text: \"Condition\",\n            className: \"condition\",\n            sortable: true\n        },\n        {\n            key: \"payment_type\",\n            text: \"Payment Type\",\n            className: \"payment_type\",\n            sortable: true\n        },\n        {\n            key: \"created_by_name\",\n            text: \"Created By\",\n            className: \"created_by_name\",\n            sortable: true\n        },\n        {\n            key: \"action\",\n            text: \"Action\",\n            className: \"action\",\n            width: 100,\n            sortable: false,\n            cell: record => { \n                return (\n                    <Fragment>\n                        <i style={{ cursor: 'pointer' }} \n                           onClick={() => showModalFunc(record.id)} \n                           class=\"fa fa-pencil\" \n                           aria-hidden=\"true\">    \n                        </i>\n                        {/* <i \n                        style={{ cursor: \"pointer\" }} \n                        onClick={() => showModalDel(record.id)} \n                        class=\"fa fa-trash\" \n                        aria-hidden=\"true\">   \n                        </i> */}\n                    </Fragment>\n                );\n            }\n        }\n    ];\n    const config = {\n        page_size: 10,\n        length_menu: [ 10, 20, 50 ],\n        button: {\n            excel: false,\n            print: false,\n            extra: false,\n        }\n    }\n    const showModalFunc = (id) => {\n        setId(id);\n        setShowModal(true);\n    }\n    const showModalDel = (id) => {\n        setId(id);\n        setModal(true);\n    }\n    async function fetchData(query) {\n        setLoad(true);\n        const response = await fetch(url + query, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                setRecieptList(data.list.map((item)=>{\n                    return{\n                       'id': item.id,\n                       'payment_type': item.payment_type,\n                       'date': formatDate(item.date.split(' ')[0]),\n                       'type': item.type,\n                       'amount': item.amount,\n                       'condition': item.condition,\n                       'created_by_name': item.created_by_name\n                    }\n                }));\n                setTotal(parseInt(data.total_records));\n            } else {\n                toast.error(data.message);\n            }\n        }\n    }\n    const handleChange=(e)=>{\n        let string=\"\";\n        if(to_Date && from_Date && type){\n           string=`&to=${to_Date}&from=${from_Date}&type=${type}`;   \n        }\n        else if(to_Date && from_Date){\n            string=`&to=${to_Date}&from=${from_Date}`;\n        }\n        else if(type){\n            string=`&type=${type}`\n        }\n        let query=`fetchRecieptList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}${string}`;\n        if(e.sort_order){\n            let sort = JSON.stringify(e.sort_order);\n            query=`fetchRecieptList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}&sort_order=${sort}${string}`;\n        }\n        fetchData(query);\n    }\n\n    return (\n        <section>\n            <ToastContainer />\n            <CustomModal modal={modal} setModal={setModal} deleteEntry={deleteEntry} />\n            <InventoryAdjustModal header=\"Adjust Reciept\" Label=\"Add/Subtract Amount\" showModal={showModal} setShowModal={setShowModal} adjutAmount={adjutAmount} setAdjustAmount={setAdjustAmount} submitAdjust={submitAdjust}/>\n            <form onSubmit={(e)=>handleSubmit(e)}>\n            <div class=\"form-row create-purchase-header\">\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">From</label>\n            <input value={from_Date} onChange={e => setFromDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" />\n            </div>\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">To</label>\n            <input value={to_Date} onChange={e => setToDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" />\n            </div>\n            <div class=\"form-group col-md-3\">\n            <label for=\"input-type\" class=\"col-md-4 col-form-label\">Type</label>\n            <select value={type} onChange={e => setType(e.target.value)} id=\"input-type\" class=\"form-control\" >\n            <option value=\"\">All</option>\n            <option value=\"purchase\">Purchase</option>\n            <option value=\"sales\">Sales</option>\n            <option value=\"expense\">Expenses</option>\n            <option value=\"customer\">Customer</option>\n            <option value=\"party\">Party</option>\n            <option value=\"purchase_return\">Purchase Return</option>\n            <option value=\"sales_retrn\">Sales Return</option>\n            </select>\n            </div>\n            <div class=\"form-group col-md-3\">\n            <button type=\"Submit\" class=\"font-weight-bold my-4 py-2 px-4 btn btn-success\">Filter</button>\n            </div>\n            </div>\n            </form>\n            <ReactDatatable\n                    config={config}\n                    records={recieptList}\n                    columns={columns}\n                    total_record={total}\n                    onChange={(e)=>handleChange(e)}\n                    dynamic={true}\n                />\n        </section>\n    )\n}"],"sourceRoot":""}