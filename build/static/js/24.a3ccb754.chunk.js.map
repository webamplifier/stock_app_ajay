{"version":3,"sources":["components/CustomModal.js","screens/Bank/index.js"],"names":["CustomModal","props","modal","setModal","deleteEntry","className","show","onClose","closeButton","onClick","color","Index","React","useState","id","setId","useContext","userContext","user","setLoad","bankList","setBankList","total","setTotal","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","list","map","item","index","name","branch","accno","total_amount","ifsc","parseInt","total_records","fetchData","columns","key","text","sortable","width","cell","record","to","style","marginRight","cursor","showModal","class","value","query","toast","error","message","handleChange","e","page_number","page_size","filter_value","sort_order","sort","JSON","stringify","deleteData","config","length_menu","button","excel","print","extra","records","total_record","onChange","dynamic"],"mappings":"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","file":"static/js/24.a3ccb754.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\nexport default function CustomModal(props) {\n    const { modal, setModal, deleteEntry } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={modal}\n                onClose={setModal}\n            >\n                <CModalHeader closeButton>\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <p> Are you sure you want to delete this record ?</p>\n                    <div className='btn-div-modal-group delete_modal_Btns'>\n                        <button onClick={() => deleteEntry()} className='delete_modal_yes_Btn'>Yes, Approve</button>\n                        <button className='btn btn-primary delete_modal_cancel_Btn' color=\"secondary\" onClick={() => setModal(false)}>Cancel</button>\n                    </div>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import React,{Fragment} from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { Link } from 'react-router-dom';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport CustomModal from 'src/components/CustomModal';\n\nexport default function Index() {\n  const [id, setId] = React.useState(null);\n  const [modal, setModal] = React.useState(false);\n  const { user,setLoad } = React.useContext(userContext);\n  const [bankList, setBankList] = React.useState([]);\n  const [total,setTotal] = React.useState(0); \n\n  React.useEffect(() => {\n    setLoad(true)\n    async function fetchData() {\n      const response = await fetch(url + 'fetchBankList', {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n      if(response.ok === true) {\n        const data = await response.json();\n        setLoad(false);\n        if (data.status === 200) {\n          setBankList(data.list.map((item, index) => {\n            return {\n              '#': index + 1,\n              'id': item.id,\n              'name': item.name,\n              'branch': item.branch,\n              'accno': item.accno,\n              'total_amount': item.total_amount,\n              'ifsc':item.ifsc\n            }\n          }));\n          setTotal(parseInt(data.total_records));\n        }\n      }\n    }\n    fetchData();\n  }, [])\n\n  const deleteEntry = () => {\n    setLoad(true)\n    async function deleteData() {\n      const response = await fetch(url + 'deletebank/' + id, {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n\n      const data = await response.json();\n      setLoad(false)\n      if (data.status === 200) {\n        setModal(false);\n        setId('');\n        async function fetchData() {\n          const response = await fetch(url + 'fetchBankList', {\n            method: 'GET',\n            headers: {\n              'Authorization': user?.token\n            }\n          })\n    \n          if (response.ok === true) {\n            const data = await response.json();\n            if (data.status === 200) {\n                setBankList(data.list.map((item, index) => {\n                    return {\n                      '#': index + 1,\n                      'id': item.id,\n                      'name': item.name,\n                      'accno': item.accno,\n                      'branch': item.branch,\n                      'total_amount': item.total_amount,\n                      'ifsc':item.ifsc\n                    }\n                  }));\n                  setTotal(parseInt(data.total_records));\n            }\n          }\n        }\n        fetchData();\n\n      } else {\n        toast.error(data.message)\n      }\n    }\n    deleteData();\n  }\n  \n  const columns = [\n    {\n        key: \"#\",\n        text: \"#\",\n        className: \"#\",\n        sortable: false,\n    },\n    {\n        key: \"accno\",\n        text: \"Bank No\",\n        className: \"accno\",\n        sortable: true\n    },\n    {\n        key: \"name\",\n        text: \"Bank Name\",\n        className: \"name\",\n        sortable: true\n    },\n    {\n        key: \"branch\",\n        text: \"Branch\",\n        className: \"branch\",\n        sortable: true\n    },\n    {\n        key: \"ifsc\",\n        text: \"IFSC\",\n        className: \"ifsc\",\n        sortable: true\n    },\n    {\n      key: \"total_amount\",\n      text: \"Total Amount\",\n      className: \"total_amount\",\n      sortable: true\n    },\n    {\n        key: \"action\",\n        text: \"Action\",\n        className: \"action\",\n        width: 100,\n        sortable: false,\n        cell: record => { \n            return (\n                <Fragment>\n                    <Link\n                        to={`/edit/bank/${record.id}`} \n                        style={{marginRight: '3px'}}>    \n                        <i className=\"fa fa-pencil mr-1\"></i>\n                    </Link>\n                    <i \n                    style={{ cursor: \"pointer\" }} \n                    onClick={() => showModal(record.id)} \n                    class=\"fa fa-trash mr-2\" \n                    aria-hidden=\"true\">   \n                    </i>\n                    <Link\n                        to={`/DetailTransactionReport/${record.id}`} \n                        style={{cursor : \"pointer\"}}>    \n                        <i className=\"fa fa-list-alt\"></i>\n                    </Link>\n                </Fragment>\n            );\n        }\n    }\n];\n\nconst config = {\n    page_size: 10,\n    length_menu: [ 10, 20, 50 ],\n    button: {\n        excel: false,\n        print: false,\n        extra: false,\n    }\n}\n  const showModal = value => {\n    setId(value);\n    setModal(true)\n  }\n  async function fetchData(query) {\n    setLoad(true);\n    const response = await fetch(url + query, {\n        method: 'GET',\n        headers: {\n            'Authorization': user?.token\n        }\n    })\n    if (response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n            setBankList(data.list.map((item, index) => {\n                return {\n                  '#': index + 1,\n                  'id': item.id,\n                  'name': item.name,\n                  'accno': item.accno,\n                  'branch': item.branch,\n                  'total_amount': item.total_amount,\n                  'ifsc':item.ifsc\n                }\n              }));\n              setTotal(parseInt(data.total_records));\n        } else {\n            toast.error(data.message);\n        }\n    }\n}\nconst handleChange=(e)=>{\n  let query=`fetchBankList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}`;\n  if(e.sort_order){\n      let sort = JSON.stringify(e.sort_order);\n      query=`fetchBankList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}&sort_order=${sort}`;\n  }\n  fetchData(query);\n}\n\n  return (\n    <section>\n      <ToastContainer />\n      <CustomModal modal={modal} setModal={setModal} deleteEntry={deleteEntry} />\n      <Link className='btn btn-primary float-right' to='/create/bank'>Create Bank</Link>\n      <ReactDatatable\n          config={config}\n          records={bankList}\n          columns={columns}\n          total_record={total}\n          onChange={(e)=>handleChange(e)}\n          dynamic={true}\n        />\n    </section>\n  )\n}"],"sourceRoot":""}