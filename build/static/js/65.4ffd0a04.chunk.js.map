{"version":3,"sources":["assets/images_manual/add.svg","screens/Quotation/create.js"],"names":["Create","React","useContext","userContext","user","setLoad","useState","quotationNo","setQuotationNo","quotationDate","setQuotationDate","default_gst","setDefaultGST","currentCustomer","setCurrentCustomer","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentProduct","setCurrentProduct","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","price","setPrice","value","label","gst","setGST","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allCustomers","setAllCustomers","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","paymentMethod","setPaymentMethod","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","fetchProd","a","fetch","url","method","headers","token","response","ok","json","data","status","quotation_number","product_list","map","item","type","id","name","unit","hsbn","serial_no","parseFloat","sales_unit","toFixed","toast","error","message","useEffect","client_list","amount","due_amount","fetchData","fetchGSTList","className","class","for","readOnly","required","onChange","e","target","options","checked","onClick","def_gst","fetchQuotationNo","handleChange","htmlFor","new_item_dict","discount_type","total","new_list_edit","index","parseInt","push","taxable_amount","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","length","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitQuotation","body","formData","success","header","final","taxableAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/65.4ffd0a04.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\nimport plus from '../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { userContext } from '../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\n\nexport default function Create() {\n    const { user,setLoad } = React.useContext(userContext);\n    const [quotationNo, setQuotationNo] = React.useState('');\n    const [quotationDate, setQuotationDate] = React.useState('');\n    const [default_gst, setDefaultGST] = React.useState(false);\n    const [currentCustomer, setCurrentCustomer] = React.useState('');\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [price, setPrice] = React.useState(0);\n    const [gst,setGST] = React.useState({\n        value:0,\n        label:0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list,setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allCustomers, setAllCustomers] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts,setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount,setDiscountAmount] = React.useState(0);\n    const [taxAmount,setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax=0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n        \n        async function fetchData() {\n            setLoad(true);\n            const response = await fetch(url + 'clientlist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllCustomers(data?.client_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name,\n                            amount: item.due_amount\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchData();\n        \n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n        fetchProd();\n    }, [])\n\n    async function fetchProd() {\n            \n        const response = await fetch(url + `fetchQuotationProducts`, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                setQuotationNo(data.quotation_number);\n                setDefaultGST(data.default_gst);\n                setAllProducts(data.product_list.map((item)=>{\n                    if(item.type===\"product\"){\n                    return{\n                           value: item.id,\n                           label: item.name,\n                           type: item.type,\n                           unit: item.unit,\n                           hsbn: item.hsbn,\n                           serial_no: item.serial_no,\n                           price: parseFloat(parseFloat(item.price) / parseFloat(item.sales_unit)).toFixed(2)\n                    }\n                   }else{\n                    return{\n                        value: item.id,\n                        label: item.name,\n                        type: item.type,\n                        unit: item.unit,\n                        hsbn: item.hsbn,\n                        serial_no: item.serial_no,\n                        price: item.price\n                     }  \n                   }\n                }));\n            } else {\n                toast.error(data.message)\n            }\n        }\n    }\n\n    const calculateTotal = () => {\n        if (price > 0 && qty > 0) {\n            amount_item = parseFloat(price) * parseFloat(qty); //amount before tax\n            tax_amount=0;\n            if(default_gst && gst){\n            tax_amount = (parseFloat(amount_item)/100) * parseFloat(gst.value);\n            }\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n    calculateFinalPrice()\n    const handleSubmitItem = () => {\n        if (quotationNo && currentProduct && currentCustomer && price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                price: price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem)-1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount=0;\n                let taxable_amount=0;\n                new_list_edit.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setAllItems(new_list_edit);\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount=0;\n                new_item_list.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setPrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value: 0,\n                label: 0\n            });\n            perItemAmount = 0;\n            amount_item= 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount=0;\n            amount_after_tax=0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n    const finalSubmit = () => {\n        if (quotationNo && currentCustomer && allItems.length > 0 && totalValue){\n            setLoad(true)\n            let header = {\n                quotationNo : quotationNo,\n                quotationDate : quotationDate,\n                default_gst: default_gst,\n                currentCustomer : currentCustomer,\n                discountType : discountType\n            }\n            let final = {\n                totalValue : totalValue,\n                finalAmount : finalAmount,\n                paidAmount : paidAmount,\n                remainAmount : remainAmount,\n                finalDiscountValue : finalDiscountValue,\n                finalDiscountCriteria : finalDiscountCriteria,\n                remarks : remarks,\n                paymentMethod : paymentMethod,\n                discountAmount : discountAmount,\n                taxableAmount : taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array',JSON.stringify(final_array));\n            formData.append('allItems',JSON.stringify(allItems));\n\n            async function submitQuotation(){\n                const response = await fetch(url + 'createQuotation',{\n                    method : 'POST',\n                    headers : {\n                        'Authorization' : user.token\n                    },\n                    body : formData\n                });\n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        toast.success(data.message);\n                        setQuotationDate('');\n                        setCurrentCustomer('');\n                        setDiscountType('None');\n                        setDiscountAmount(0);\n                        setDefaultGST(false);\n                        setTaxableAmount(0);\n                        setFinalDiscountCriteria('percent');\n                        setFinalDiscountValue(0);\n                        setCurrentProduct('');\n                        setTotalValue(0);\n                        setPaidAmount(0);\n                        setAllItems('');\n                        setPaymentMethod('cash');\n                        finalAmount = 0;\n                        remainAmount = 0;\n                        discount_amount_final = 0;\n                        amount_before_discount_final = 0;\n                        amount_after_discount_final = 0;\n                        fetchProd();\n                    }else{\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitQuotation()\n        }else{\n            toast.error('Please fill the data with *');\n        }\n    }\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setPrice(item.price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    } \n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        setAllItems(new_item);\n    }\n\n    const handleChange = ()=>{\n        \n        const def_gst = !default_gst;\n        setDefaultGST(!default_gst);\n        async function fetchQuotationNo(){\n            setLoad(true);\n            const response = await fetch(url + `fetchQuotationNo?default_gst=${def_gst}`,{\n                headers : {\n                    'Authorization' : user.token\n                },\n            })\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false);\n                if (data.status == 200) {  \n                    setQuotationNo(data.quotation_number);\n                }\n                else toast.error(data.message);\n            }        \n        }\n        fetchQuotationNo();\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Quotation No.<span className='required-label'>*</span></label>\n                            <input readOnly value={quotationNo} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Quotation Date</label>\n                            <input value={quotationDate} onChange={e => setQuotationDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Customer<span className='required-label'>*</span></label>\n                            <Select options={allCustomers} value={currentCustomer} onChange={setCurrentCustomer} />\n                        </div>\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\"/>\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">GST:</label>\n                        <div class=\"d-flex b-0 col-sm-1\">\n                        <input checked={default_gst} type=\"checkbox\" onChange={e => handleChange()} />\n                        </div>\n                        </div>\n                    </div>    \n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={setCurrentProduct} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Price<span className='required-label'>*</span></label>\n                            <input value={price} onChange={(e) => setPrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" required/>\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` :null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" required/>\n                        </div>\n                        {default_gst &&\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                            <Select options={gst_list} value={gst} onChange={setGST} />\n                        </div>\n                        }\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                {item.item.label}\n                                            </td>\n                                            <td>{item.price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                            {currentCustomer ?<div>Due Amount: {currentCustomer.amount}</div> :null}\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                    <select value={paymentMethod} onChange={e => setPaymentMethod(e.target.value)} id=\"input-party\" class=\"form-control\" required>\n                                        <option value=\"\">Select payment mode</option>\n                                        <option value=\"cash\">Cash</option>\n                                        <option value=\"bank\">Bank</option>\n                                    </select>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}