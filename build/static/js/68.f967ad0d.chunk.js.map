{"version":3,"sources":["assets/images_manual/add.svg","screens/Sales/Sales Entry/Edit.js"],"names":["Edit","id","useParams","history","useHistory","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","saleDate","setSaleDate","default_gst","setDefaultGST","currentCustomer","setCurrentCustomer","currentWarehouse","setCurrentWarehouse","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentProduct","setCurrentProduct","label","currentPaymentMethod","setCurrentPaymentMethod","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","sale_price","setSalePrice","value","gst","setGST","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allCustomers","setAllCustomers","allPaymentMethods","setAllPaymentMethods","allWarehouses","setAllWarehouses","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","fetchProd","e","a","fetch","url","method","headers","token","response","ok","json","data","status","products","inventory_list","map","item","push","product_id","product_name","type","price","sale_unit_price","unit","product_unit","hsbn","product_hsbn","serial_no","product_serial_no","product_list","name","toast","error","message","useEffect","payment_methods","client_list","amount","due_amount","warehouse_list","header","sale_header","final_discount_criteria","final_discount_value","parseFloat","bill_discount_percentage","bill_discount_amount","items","sale_items","invoice_number","sale_date","customer_id","customer_name","warehouse_id","warehouse_name","discount_type","midItems","i","length","current_item","discount_value","discount_percent","obj","product_type","item_id","tax_percent","total","current_total_fetch","taxable_amount","amount_paid","payment_type","fetchPaymentMethods","fetchDataParty","fetchGSTList","fetchWarehouse","fetchDetailSales","className","class","for","readOnly","options","onChange","target","required","checked","onClick","handleProduct","htmlFor","new_item_dict","new_list_edit","index","parseInt","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitSales","body","formData","success","final","paymentMethod","taxableAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/68.f967ad0d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\nimport plus from '../../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url, formatDate } from 'src/helpers/helpers';\nimport { userContext } from '../../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useHistory, useParams } from 'react-router-dom'\n\nexport default function Edit() {\n    let { id } = useParams();\n    const history = useHistory();\n    const { user, setLoad } = React.useContext(userContext);\n    const [invoiceNo, setInvoiceNo] = React.useState('');\n    const [saleDate, setSaleDate] = React.useState('');\n    const [default_gst, setDefaultGST] = React.useState(false);\n    const [currentCustomer, setCurrentCustomer] = React.useState('');\n    const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState({\n        label: \"cash\"\n    })\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [sale_price, setSalePrice] = React.useState(0);\n    const [gst, setGST] = React.useState({\n        value: 0,\n        label: 0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list, setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allCustomers, setAllCustomers] = React.useState([]);\n    const [allPaymentMethods, setAllPaymentMethods] = React.useState([]);\n    const [allWarehouses, setAllWarehouses] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts, setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount, setDiscountAmount] = React.useState(0);\n    const [taxAmount, setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax = 0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n\n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n        }\n        fetchPaymentMethods();\n\n        async function fetchDataParty() {\n            setLoad(true);\n            const response = await fetch(url + 'clientlist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllCustomers(data?.client_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name,\n                            amount: item.due_amount,\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchDataParty();\n\n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n\n        async function fetchWarehouse() {\n            setLoad(true);\n            const response = await fetch(url + 'warehouselist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllWarehouses(data?.warehouse_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchWarehouse();\n\n        async function fetchDetailSales() {\n            setLoad(true);\n            const response = await fetch(url + 'getSaleById/' + id, {\n                headers: {\n                    'Authorization': user.token\n                }\n            });\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    let header = data.sale_header;\n                    let final_discount_criteria = '';\n                    let final_discount_value = 0;\n                    if (parseFloat(header.bill_discount_percentage) > 0) {\n                        final_discount_criteria = 'percent';\n                        final_discount_value = header.bill_discount_percentage;\n                    } else if (parseFloat(header.bill_discount_amount) > 0) {\n                        final_discount_criteria = 'amount';\n                        final_discount_value = header.bill_discount_amount\n                    }\n                    let items = data.sale_items;\n                    setInvoiceNo(header.invoice_number);\n                    setSaleDate(header.sale_date);\n                    setCurrentCustomer({\n                        value: header.customer_id,\n                        label: header.customer_name\n                    });\n                    setCurrentWarehouse({\n                        value: header.warehouse_id,\n                        label: header.warehouse_name\n                    })\n                    fetchProd(header.warehouse_id);\n                    setDiscountType(header.discount_type);\n                    let midItems = [];\n                    for (let i = 0; i < items.length; i++) {\n                        let current_item = items[i];\n                        let discount_type = '';\n                        let discount_value = 0;\n\n                        if (current_item.discount_percent && parseFloat(current_item.discount_percent) > 0) {\n                            discount_type = 'percent'\n                            discount_value = current_item.discount_percent\n                        } else if (current_item.discount_amount) {\n                            discount_type = 'amount';\n                            discount_value = current_item.discount_amount\n                        } else {\n                            //\n                        }\n                        let obj = {};\n                        if (header.default_gst === \"true\") {\n                            setDefaultGST(true);\n                            obj = {\n                                item: {\n                                    value: current_item.product_id,\n                                    label: current_item.product_name,\n                                    type: current_item.product_type,\n                                    unit: current_item.product_unit,\n                                    price: current_item.sale_price,\n                                    hsbn: current_item.product_hsbn,\n                                    serial_no: current_item.product_serial_no\n                                },\n                                item_id: current_item.id,\n                                sale_price: current_item.sale_price,\n                                qty: current_item.qty,\n                                discount_type: discount_type,\n                                discountValue: discount_value,\n                                warehouse_id : current_item.warehouse_id,\n                                warehouse_name : current_item.warehouse_name,\n                                gst: {\n                                    label: current_item.tax_percent,\n                                    value: current_item.tax_percent\n                                },\n                                total: current_item.total,\n                                amount_item: current_item.total,\n                                amount_after_tax: current_item.amount_after_tax,\n                                amount_before_discount: current_item.amount_before_discount,\n                                tax_amount: current_item.tax_amount,\n                                discount_amount: current_item.discount_amount,\n                                amount_after_discount: current_item.amount_after_discount,\n                            }\n                        }\n                        else {\n                            setDefaultGST(false);\n                            obj = {\n                                item: {\n                                    value: current_item.product_id,\n                                    label: current_item.product_name,\n                                    type: current_item.product_type,\n                                    unit: current_item.product_unit,\n                                    price: current_item.sale_price,\n                                    hsbn: current_item.product_hsbn,\n                                    serial_no: current_item.product_serial_no\n                                },\n                                item_id: current_item.id,\n                                sale_price: current_item.sale_price,\n                                qty: current_item.qty,\n                                discount_type: discount_type,\n                                discountValue: discount_value,\n                                total: current_item.total,\n                                warehouse_id : current_item.warehouse_id,\n                                warehouse_name : current_item.warehouse_name,\n                                gst: {\n                                    value: 0,\n                                    label: 0\n                                },\n                                amount_item: current_item.total,\n                                amount_after_tax: current_item.amount_after_tax,\n                                amount_before_discount: current_item.amount_before_discount,\n                                tax_amount: current_item.tax_amount,\n                                discount_amount: current_item.discount_amount,\n                                amount_after_discount: current_item.amount_after_discount,\n                            }\n                        }\n                        midItems.push(obj)\n                    }\n                    setAllItems(midItems);\n                    let current_total_fetch = 0;\n                    let discount_amount = 0;\n                    let taxable_amount = 0;\n                    midItems.map(item => {\n                        current_total_fetch = parseFloat(current_total_fetch) + parseFloat(item.total)\n                        discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n                        taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                    })\n                    setTotalValue(current_total_fetch);\n                    setDiscountAmount(discount_amount);\n                    setTaxableAmount(taxable_amount);\n                    setFinalDiscountValue(final_discount_value);\n                    setFinalDiscountCriteria(final_discount_criteria);\n                    setPaidAmount(header.amount_paid);\n                    setCurrentPaymentMethod({\n                        label: header.payment_type\n                    });\n                    setRemarks(header.remarks);\n                } else {\n                    toast.error(data.message);\n                }\n            }\n        }\n        fetchDetailSales()\n    }, [])\n\n    async function fetchProd(e) {\n        setLoad(true);\n        const response = await fetch(url + `fetchProducts?warehouse=${e}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                let products = [];\n                if (data.inventory_list) {\n                    data.inventory_list.map(item => {\n                        products.push(\n                            {\n                                value: item.product_id,\n                                label: item.product_name,\n                                type: \"product\",\n                                price: item.sale_unit_price,\n                                unit: item.product_unit,\n                                hsbn: item.product_hsbn,\n                                serial_no: item.product_serial_no,\n                            }\n                        )\n                    })\n                }\n                if (data.product_list) {\n                    data.product_list.map(item => {\n                        products.push(\n                            {\n                                value: item.id,\n                                label: item.name,\n                                type: item.type,\n                                unit: item.unit,\n                                price: item.price,\n                                hsbn: item.hsbn,\n                                serial_no: item.serial_no\n                            }\n                        )\n                    })\n                }\n                setAllProducts(products);\n            } else {\n                toast.error(data.message)\n            }\n        }\n    }\n\n    const calculateTotal = () => {\n        if (sale_price > 0 && qty > 0) {\n            amount_item = parseFloat(sale_price) * parseFloat(qty); //amount before tax\n            tax_amount = 0;\n            if (default_gst && gst) {\n                tax_amount = (parseFloat(amount_item) / 100) * parseFloat(gst.value);\n            }\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n\n    calculateFinalPrice()\n\n    const handleSubmitItem = () => {\n        if (invoiceNo && saleDate && currentProduct && currentWarehouse && currentCustomer && sale_price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                sale_price: sale_price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount,\n                warehouse_id : currentWarehouse?.value,\n                warehouse_name : currentWarehouse?.label\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem) - 1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount = 0;\n                let taxable_amount = 0;\n                new_list_edit.map(item => {\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setAllItems(new_list_edit);\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount = 0;\n                new_item_list.map(item => {\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setSalePrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value: 0,\n                label: 0\n            });\n            perItemAmount = 0;\n            amount_item = 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount = 0;\n            amount_after_tax = 0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n\n    const finalSubmit = () => {\n        if (invoiceNo && saleDate && currentWarehouse && currentCustomer && allItems.length > 0 && totalValue) {\n            setLoad(true)\n            let header = {\n                invoiceNo: invoiceNo,\n                saleDate: saleDate,\n                currentCustomer: currentCustomer,\n                currentWarehouse: currentWarehouse,\n                discountType: discountType,\n                default_gst: default_gst\n            }\n            let final = {\n                totalValue: totalValue,\n                finalAmount: finalAmount,\n                paidAmount: paidAmount,\n                remainAmount: remainAmount,\n                finalDiscountValue: finalDiscountValue,\n                finalDiscountCriteria: finalDiscountCriteria,\n                remarks: remarks,\n                paymentMethod: currentPaymentMethod.label,\n                discountAmount: discountAmount,\n                taxableAmount: taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array', JSON.stringify(final_array));\n            formData.append('allItems', JSON.stringify(allItems));\n\n            async function submitSales() {\n                const response = await fetch(url + 'updateSaleEntry/' + id, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': user.token\n                    },\n                    body: formData\n                });\n                if (response.ok === true) {\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200) {\n                        toast.success(data.message);\n                        history.push('/salesReport')\n                    } else {\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitSales()\n        } else {\n            toast.error('Please fill the data with *');\n        }\n    }\n\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setSalePrice(item.sale_price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    }\n\n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        let total = 0;\n        let discount_amount = 0;\n        let taxable_amount = 0;\n        new_item.map(item => {\n            total = parseFloat(total) + parseFloat(item.total);\n            discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n            taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount)\n        })\n        setDiscountAmount(discount_amount);\n        setTaxableAmount(taxable_amount);\n        setTotalValue(total);\n        setAllItems(new_item);\n    }\n    const handleProduct = (e) => {\n        setCurrentProduct(e);\n        setSalePrice(e.price);\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Invoice No.<span className='required-label'>*</span></label>\n                            <input readOnly value={invoiceNo} type=\"text\" class=\"form-control\" id=\"invoice-number\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Warehouse<span className='required-label'>*</span></label>\n                            <Select readOnly options={allWarehouses} value={currentWarehouse} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Sale Date</label>\n                            <input value={saleDate} onChange={e => setSaleDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Customer<span className='required-label'>*</span></label>\n                            <Select options={allCustomers} value={currentCustomer} />\n                        </div>\n\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Item' && true} onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Bill' && true} onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Both' && true} onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">GST:</label>\n                            <div class=\"d-flex b-0 col-sm-1\">\n                                <input readOnly checked={default_gst} type=\"checkbox\" id=\"inputPassword\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={(e) => handleProduct(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Price<span className='required-label'>*</span></label>\n                            <input value={sale_price} onChange={(e) => setSalePrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` : null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        {default_gst &&\n                            <div class=\"form-group col-md-4\">\n                                <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                                <Select options={gst_list} value={gst} onChange={setGST} />\n                            </div>\n                        }\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                <p className='p-0 m-0'>{item.item.label}</p>\n                                                <p>({item.warehouse_name})</p>\n                                            </td>\n                                            <td>{item.sale_price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index + 1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={paidAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                    <Select readOnly options={allPaymentMethods} value={currentPaymentMethod} />\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={() => finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}