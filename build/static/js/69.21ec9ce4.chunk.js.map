{"version":3,"sources":["assets/images_manual/add.svg","screens/Sales/Sales Return/create.js"],"names":["Create","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","saleReturnDate","setSaleReturnDate","default_gst","setDefaultGST","currentCustomer","setCurrentCustomer","currentWarehouse","setCurrentWarehouse","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentProduct","setCurrentProduct","currentPaymentMethod","setCurrentPaymentMethod","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","sale_return_price","setSaleReturnPrice","value","label","gst","setGST","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allCustomers","setAllCustomers","allWarehouses","setAllWarehouses","allPaymentMethods","setAllPaymentMethods","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","fetchDefaultGST","a","fetch","url","headers","token","response","ok","json","data","status","invoice_number","toast","error","message","e","method","products","inventory_list","map","item","push","product_id","name","product_name","total_qty","type","unit","product_unit","price","sale_unit_price","hsbn","product_hsbn","serial_no","product_serial_no","product_list","id","useEffect","payment_methods","client_list","amount","due_amount","warehouse_list","fetchPaymentMethods","fetchData","fetchGSTList","fetchWarehouse","parseFloat","handleProducts","fetchProd","className","class","for","readOnly","required","options","onChange","target","checked","onClick","def_gst","console","log","fetchInvoiceNo","handleChange","handleProduct","htmlFor","new_item_dict","discount_type","total","warehouse_id","warehouse_name","new_list_edit","index","parseInt","taxable_amount","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","length","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitSales","body","formData","success","header","final","paymentMethod","taxableAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/69.21ec9ce4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\nimport plus from '../../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { userContext } from '../../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\n\nexport default function Create() {\n    const { user,setLoad } = React.useContext(userContext);\n    const [invoiceNo, setInvoiceNo] = React.useState('');\n    const [saleReturnDate, setSaleReturnDate] = React.useState('');\n    const [default_gst, setDefaultGST] = React.useState(false);\n    const [currentCustomer, setCurrentCustomer] = React.useState('');\n    const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState('');\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [sale_return_price, setSaleReturnPrice] = React.useState(0);\n    const [gst,setGST] = React.useState({\n        value:0,\n        label:0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list,setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allCustomers, setAllCustomers] = React.useState([]);\n    const [allWarehouses, setAllWarehouses] = React.useState([]);\n    const [allPaymentMethods, setAllPaymentMethods] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts,setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount,setDiscountAmount] = React.useState(0);\n    const [taxAmount,setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax=0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n        \n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n            setCurrentPaymentMethod({\n                label: \"cash\"\n            });\n        }\n        fetchPaymentMethods();\n\n        async function fetchData() {\n            setLoad(true);\n            const response = await fetch(url + 'clientlist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllCustomers(data?.client_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name,\n                            amount: item.due_amount\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchData();\n        \n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n\n        async function fetchWarehouse() {\n            setLoad(true);\n            const response = await fetch(url + 'warehouselist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllWarehouses(data?.warehouse_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchWarehouse();\n        fetchDefaultGST();\n    }, [])\n    \n    async function fetchDefaultGST(){\n        setLoad(true);\n        const response = await fetch(url + `fetchDefaultGST`,{\n            headers : {\n                'Authorization' : user.token\n            },\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false);\n            if (data.status == 200) { \n                if (data.default_gst == \"false\"){\n                    setDefaultGST(false)\n                }else{\n                    setDefaultGST(true);\n                } \n                setInvoiceNo(data.invoice_number);\n                setGST({\n                    value: 0,\n                    label: 0\n                 });\n            }else{\n                toast.error(data.message);\n            }\n        }        \n    }\n\n    async function fetchProd(e) {\n        setLoad(true);            \n        const response = await fetch(url + `fetchProducts?warehouse=${e.value}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                let products=[];\n                if(data.inventory_list){\n                  data.inventory_list.map(item=>{\n                    products.push(\n                       {value : item.product_id,\n                        name : item.product_name,\n                        label : `${item.product_name} ${item.total_qty}`,\n                        type : \"product\",\n                        unit : item.product_unit,\n                        price: item.sale_unit_price,\n                        hsbn: item.product_hsbn,\n                        serial_no: item.product_serial_no\n                       }\n                  )})\n                }\n                if(data.product_list){\n                    data.product_list.map(item=>{\n                      products.push(\n                         {value : item.id,\n                          name: item.name,  \n                          label : item.name,\n                          price: item.price,\n                          type: item.type,\n                          unit: item.unit,\n                          hsbn: item.hsbn,\n                          serial_no: item.serial_no\n                         }\n                    )})\n                  }  \n                setAllProducts(products);\n            } else {\n                toast.error(data.message)\n            }\n        }\n    }\n\n    const calculateTotal = () => {\n        if (sale_return_price > 0 && qty > 0) {\n            amount_item = parseFloat(sale_return_price) * parseFloat(qty); //amount before tax\n            tax_amount=0;\n            if(gst && default_gst){\n            tax_amount = (parseFloat(amount_item)/100) * parseFloat(gst.value);\n            }\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n    calculateFinalPrice()\n\n    const handleSubmitItem = () => {\n        if (invoiceNo && currentProduct && currentWarehouse && currentCustomer && sale_return_price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                sale_return_price: sale_return_price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount,\n                warehouse_id : currentWarehouse.value,\n                warehouse_name : currentWarehouse.label\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem)-1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount=0;\n                let taxable_amount=0;\n                new_list_edit.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setAllItems(new_list_edit);\n                setPaidAmount(total)\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount=0;\n                new_item_list.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n                setPaidAmount(total)\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setSaleReturnPrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value:0,\n                label:0\n            });\n            perItemAmount = 0;\n            amount_item= 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount=0;\n            amount_after_tax=0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n    const finalSubmit = () => {\n        if (invoiceNo && currentWarehouse && currentCustomer && allItems.length > 0 && totalValue){\n            setLoad(true)\n            let header = {\n                invoiceNo : invoiceNo,\n                saleReturnDate : saleReturnDate,\n                default_gst: default_gst,\n                currentCustomer : currentCustomer,\n                currentWarehouse : currentWarehouse,\n                discountType : discountType\n            }\n            let final = {\n                totalValue : totalValue,\n                finalAmount : finalAmount,\n                paidAmount : paidAmount,\n                remainAmount : remainAmount,\n                finalDiscountValue : finalDiscountValue,\n                finalDiscountCriteria : finalDiscountCriteria,\n                remarks : remarks,\n                paymentMethod : currentPaymentMethod.label,\n                discountAmount : discountAmount,\n                taxableAmount : taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array',JSON.stringify(final_array));\n            formData.append('allItems',JSON.stringify(allItems));\n\n            async function submitSales(){\n                const response = await fetch(url + 'createSalesReturn',{\n                    method : 'POST',\n                    headers : {\n                        'Authorization' : user.token\n                    },\n                    body : formData\n                });\n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        toast.success(data.message);\n                        setSaleReturnDate('');\n                        setCurrentCustomer('');\n                        setDiscountType('None');\n                        setDiscountAmount(0);\n                        setDefaultGST(false);\n                        setTaxableAmount(0);\n                        setFinalDiscountCriteria('percent');\n                        setFinalDiscountValue(0);\n                        setCurrentProduct('');\n                        setCurrentWarehouse('');\n                        setTotalValue(0);\n                        setPaidAmount(0);\n                        setAllItems([]);\n                        setAllProducts([]);\n                        setCurrentPaymentMethod({\n                            label: \"cash\"\n                        })\n                        finalAmount = 0;\n                        remainAmount = 0;\n                        discount_amount_final = 0;\n                        amount_before_discount_final = 0;\n                        amount_after_discount_final = 0;\n                        fetchDefaultGST();\n                    }else{\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitSales()\n        }else{\n            toast.error('Please fill the data with *');\n        }\n    }\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setSaleReturnPrice(item.sale_return_price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    } \n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        setAllItems(new_item);\n    }\n    const handleChange = ()=>{\n        const def_gst = !default_gst;\n        setDefaultGST(!default_gst);\n        async function fetchInvoiceNo(){\n            setLoad(true);\n            const response = await fetch(url + `fetchInvoiceNumber?default_gst=${def_gst}`,{\n                headers : {\n                    'Authorization' : user.token\n                },\n            })\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false);\n                console.log(data);\n                if (data.status == 200) {  \n                    setInvoiceNo(data.invoice_number);\n                }\n            }        \n        }\n        fetchInvoiceNo();\n    }\n    const handleProducts = (e)=>{\n        setCurrentWarehouse(e);\n        fetchProd(e); \n    }\n    const handleProduct =(e)=>{\n        setCurrentProduct(e);\n        setSaleReturnPrice(e.price);\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Invoice No.<span className='required-label'>*</span></label>\n                            <input readOnly value={invoiceNo} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Warehouse<span className='required-label'>*</span></label>\n                            <Select options={allWarehouses} value={currentWarehouse} onChange={(e)=>handleProducts(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Sale Return Date</label>\n                            <input value={saleReturnDate} onChange={e => setSaleReturnDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\"/>\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Customer<span className='required-label'>*</span></label>\n                            <Select options={allCustomers} value={currentCustomer} onChange={setCurrentCustomer} />\n                        </div>\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">GST:</label>\n                        <div class=\"d-flex b-0 col-sm-1\">\n                        <input checked={default_gst} type=\"checkbox\" onChange={e => handleChange()} id=\"inputPassword\" />\n                        </div>\n                        </div>\n                    </div>    \n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={(e)=>handleProduct(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Price<span className='required-label'>*</span></label>\n                            <input value={sale_return_price} onChange={(e) => setSaleReturnPrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` :null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        {default_gst &&\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                            <Select options={gst_list} value={gst} onChange={setGST} />\n                        </div>\n                         }\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                <p className='p-0 m-0'>{item.item.name}</p>\n                                                <p>({item.warehouse_name})</p>\n                                            </td>\n                                            <td>{item.sale_return_price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                            {currentCustomer ?<div>Due Amount: {currentCustomer.amount}</div> :null}\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                    <Select options={allPaymentMethods} value={currentPaymentMethod} onChange={setCurrentPaymentMethod} />\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}