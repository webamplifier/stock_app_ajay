{"version":3,"sources":["screens/Expense/Edit.js"],"names":["Edit","id","useParams","React","useContext","userContext","user","setLoad","useState","expense_date","setExpenseDate","name","setName","allemployees","setAllEmployees","currentEmployee","setCurrentEmployee","allPaymentMethods","setAllPaymentMethods","currentPaymentMethod","setCurrentPaymentMethod","item","setItem","paid_amount","setPaidAmount","remarks","setRemarks","condition","setCondition","useEffect","a","fetch","url","method","headers","token","response","json","data","payment_methods","map","label","ok","status","employee_list","value","toast","error","message","expense_detail","employee_id","payment_method","item_name","fetchPaymentMethods","fetchEmployees","fetchExpenseData","className","onSubmit","e","formData","FormData","append","body","window","location","origin","preventDefault","submitData","handleSubmit","class","for","onChange","target","type","handleChange","required","options","rows","onClick","reload"],"mappings":"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","file":"static/js/84.06a9e0a7.chunk.js","sourcesContent":["import React from 'react'\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport {userContext} from '../../context/UserContext'\nimport { toast,ToastContainer } from 'react-toastify';\nimport {useParams} from 'react-router-dom';\n\nexport default function Edit() {\n    const {id} = useParams();\n    const {user,setLoad} = React.useContext(userContext);    \n    const [expense_date, setExpenseDate] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [allemployees, setAllEmployees] = React.useState('');\n    const [currentEmployee, setCurrentEmployee] = React.useState('');\n    const [allPaymentMethods, setAllPaymentMethods] = React.useState([]);\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState('');\n    const [item,setItem] = React.useState('');\n    const [paid_amount,setPaidAmount] = React.useState(0);\n    const [remarks,setRemarks] = React.useState('');\n    const [condition, setCondition] = React.useState('');\n    \n    React.useEffect(()=>{\n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n        }\n        fetchPaymentMethods();\n        \n        async function fetchEmployees(){\n            setLoad(true);\n            const response = await fetch(url + 'employeelist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n    \n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllEmployees(data?.employee_list.map(item => {\n                        return {\n                           value: item.id, \n                           label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n           fetchEmployees();\n        \n        async function fetchExpenseData(){\n            setLoad(true);\n            const response = await fetch(url + 'expenseById/' + id,{\n                method : 'GET',\n                headers : {\n                    'Authorization' : user?.token\n                }\n            })\n            if (response.ok === true){\n                const data = await response.json();\n                setLoad(false);\n                if (data.status === 200){\n                    let expense_detail = data.expense_detail;\n                    if(expense_detail.condition==='salary'){\n                        setCondition(expense_detail.condition);\n                        setCurrentEmployee({\n                            value: expense_detail.employee_id,\n                            label: expense_detail.name\n                        });\n                        setCurrentPaymentMethod({\n                            label: expense_detail.payment_method\n                        })\n                        setPaidAmount(expense_detail.paid_amount);\n                        setItem(expense_detail.item_name);\n                        setExpenseDate(expense_detail.expense_date);\n                        setRemarks(expense_detail.remarks);\n                    }\n                    else{\n                        setCondition(expense_detail.condition);\n                        setName(expense_detail.name)\n                        setPaidAmount(expense_detail.paid_amount);\n                        setCurrentPaymentMethod({\n                            label: expense_detail.payment_method\n                        })\n                        setItem(expense_detail.item_name);\n                        setExpenseDate(expense_detail.expense_date);\n                        setRemarks(expense_detail.remarks);\n                    }\n                }else{\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchExpenseData();\n    },[])\n    \n    const handleChange = e =>{\n        setCondition(e.target.value);\n        if(e.target.value === \"salary\"){\n            setItem(\"salary\");\n        }\n    }\n    \n    const handleSubmit = e => {\n        setLoad(true)\n        e.preventDefault();\n        \n        async function submitData(){\n            if( paid_amount && item && condition)\n           {  \n            const formData = new FormData();\n            if(condition==='salary'){\n                formData.append('expense_date', expense_date);\n                formData.append('condition', condition);\n                formData.append('name', currentEmployee.label);\n                formData.append('employee_id', currentEmployee.value);\n                formData.append('paid_amount', paid_amount);\n                formData.append('payment_method', currentPaymentMethod.label);\n                formData.append('item', item);\n                formData.append('remarks', remarks);\n                }\n                else{\n                formData.append('expense_date', expense_date);\n                formData.append('condition', condition);\n                formData.append('name', name);\n                formData.append('payment_method', currentPaymentMethod.label);\n                formData.append('paid_amount', paid_amount);\n                formData.append('item', item);\n                formData.append('remarks', remarks);\n                }\n            const response = await fetch(url + 'updateexpense/' + id,{\n                method : 'POST',\n                headers : {\n                    'Authorization' : user?.token\n                },\n                body : formData\n            })\n\n            if (response.ok === true){\n                const data = await response.json();\n                setLoad(false);\n                if (data.status === 200){\n                    return window.location = window.location.origin + '/#/expenseReport';\n                }else{\n                    toast.error(data.message)\n                }\n            }\n        }\n        else{\n            toast.error('Please fill the data with *');\n         }\n        } \n        submitData();\n    }\n\n    return (\n        <div className=\"container create-page-main-section\">\n            <ToastContainer />\n            <form onSubmit={e=>handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div class=\"form-group row\">\n                        <label for=\"inputDate\" class=\"col-sm-2 col-form-label\">Expense Date</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input value={expense_date} onChange={e=>setExpenseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"inputDate\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputname\" class=\"col-sm-2 col-form-label\">Condition<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                        <select value={condition} onChange={e => handleChange(e)} class=\"form-control\" required>\n                                    <option value=\"\">Select Condition</option>\n                                    <option value='expense'>Expense</option>\n                                    <option value='salary'>Salary</option>\n                        </select>\n                        </div>\n                    </div>\n                    {condition ==='expense'?\n                     <div class=\"form-group row\">\n                     <label for=\"inputname\" class=\"col-sm-2 col-form-label\">To:<span className='required-label'>*</span></label>\n                     <div class=\"d-flex align-items-sm-center col-sm-10\">\n                         <input required value={name} onChange={e=>setName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputname\" />\n                     </div>\n                 </div> : null}\n                    {condition ==='salary'?\n                     <div class=\"form-group row\">\n                     <label for=\"inputname\" class=\"col-sm-2 col-form-label\">To:<span className='required-label'>*</span></label>\n                     <div class=\"col-sm-10\">\n                        <Select options={allemployees} value={currentEmployee} onChange={setCurrentEmployee} />\n                    </div>\n                 </div> : null}\n                    <div class=\"form-group row\">\n                        <label for=\"inputItem\" class=\"col-sm-2 col-form-label\">Item<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={item} onChange={e=>setItem(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputItem\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputItem\" class=\"col-sm-2 col-form-label\">Payment Method<span className='required-label'>*</span></label>\n                        <div class=\"col-sm-10\">\n                        {currentPaymentMethod.label === \"cash\" ? <Select options={allPaymentMethods} value={currentPaymentMethod} onChange={setCurrentPaymentMethod}/>\n                                                              : <Select options={allPaymentMethods} value={currentPaymentMethod} />}  \n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPrice\" class=\"col-sm-2 col-form-label\">Paid Amount<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={paid_amount} onChange={e=>setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPrice\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-2 col-form-label\" for=\"exampleFormControlTextarea1\">Remarks:</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"reset\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\" onClick={() => window.location.reload()} >Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}"],"sourceRoot":""}