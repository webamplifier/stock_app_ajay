{"version":3,"sources":["components/CustomModal.js","screens/Companies/index.js"],"names":["CustomModal","props","modal","setModal","deleteEntry","className","show","onClose","closeButton","onClick","color","Index","React","useState","id","setId","useContext","userContext","user","setLoad","companyList","setCompanyList","total","setTotal","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","list","map","item","index","name","email","mobile","gst","default_gst","formatDate","expiry_date","split","print_preference_purchase","print_preference_sales","one_time_amount","renew_amount","parseInt","total_records","fetchData","columns","key","text","sortable","width","cell","record","to","style","marginRight","cursor","showModal","class","value","query","toast","error","message","handleChange","e","page_number","page_size","filter_value","sort_order","sort","JSON","stringify","deleteData","config","length_menu","button","excel","print","extra","records","total_record","onChange","dynamic"],"mappings":"6KAAA,8DAGe,SAASA,EAAYC,GAChC,IAAQC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,YAEzB,OACI,qBAAKC,UAAU,mBAAf,SACI,eAAC,KAAD,CACIC,KAAMJ,EACNK,QAASJ,EAFb,UAII,cAAC,KAAD,CAAcK,aAAW,IAEzB,eAAC,KAAD,CAAYH,UAAU,oBAAtB,UACI,+EACA,sBAAKA,UAAU,wCAAf,UACI,wBAAQI,QAAS,kBAAML,KAAeC,UAAU,uBAAhD,0BACA,wBAAQA,UAAU,0CAA0CK,MAAM,YAAYD,QAAS,kBAAMN,GAAS,IAAtG,iC,+MCTT,SAASQ,IACtB,MAAoBC,IAAMC,SAAS,MAAnC,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA0BH,IAAMC,UAAS,GAAzC,mBAAOX,EAAP,KAAcC,EAAd,KACA,EAAyBS,IAAMI,WAAWC,KAAlCC,EAAR,EAAQA,KAAKC,EAAb,EAAaA,QACb,EAAsCP,IAAMC,SAAS,IAArD,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAyBT,IAAMC,SAAS,GAAxC,mBAAOS,EAAP,KAAaC,EAAb,KAEAX,IAAMY,WAAU,WAAM,4CAEpB,8BAAAC,EAAA,sEACyBC,MAAMC,IAAM,mBAAoB,CACrDC,OAAQ,MACRC,QAAS,CACP,qBAAiBX,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMY,SAJ7B,WAOqB,KANbC,EADR,QAOcC,GAPd,gCAQuBD,EAASE,OARhC,OAQUC,EARV,OASIf,GAAQ,GACY,MAAhBe,EAAKC,SACPd,EAAea,EAAKE,KAAKC,KAAI,SAACC,EAAMC,GAClC,MAAO,CACL,IAAKA,EAAQ,EACb,GAAMD,EAAKxB,GACX,KAAQwB,EAAKE,KACb,MAASF,EAAKG,MACd,OAAUH,EAAKI,OACf,IAAOJ,EAAKK,IACZ,YAAkC,SAAnBL,EAAKM,YAAqB,MAAQ,UACjD,YAAeC,YAAWP,EAAKQ,YAAYC,MAAM,KAAK,IACtD,0BAA6BT,EAAKU,0BAClC,uBAA0BV,EAAKW,uBAC/B,gBAAmBX,EAAKY,gBACxB,aAAgBZ,EAAKa,aACrB,OAAwB,IAAdb,EAAKH,OAAW,SAAW,gBAGzCZ,EAAS6B,SAASlB,EAAKmB,iBA5B7B,4CAFoB,sBACpBlC,GAAQ,GADY,mCAkCpBmC,KACC,IAEH,IAuDMC,EAAU,CACd,CACIC,IAAK,IACLC,KAAM,IACNpD,UAAW,IACXqD,UAAU,GAEd,CACIF,IAAK,OACLC,KAAM,eACNpD,UAAW,OACXqD,UAAU,GAEd,CACIF,IAAK,QACLC,KAAM,QACNpD,UAAW,QACXqD,UAAU,GAEd,CACIF,IAAK,SACLC,KAAM,SACNpD,UAAW,SACXqD,UAAU,GAEd,CACEF,IAAK,cACLC,KAAM,oBACNpD,UAAW,cACXqD,UAAU,GAEZ,CACIF,IAAK,MACLC,KAAM,UACNpD,UAAW,MACXqD,UAAU,GAEd,CACEF,IAAK,4BACLC,KAAM,sBACNpD,UAAW,4BACXqD,UAAU,GAEZ,CACIF,IAAK,yBACLC,KAAM,mBACNpD,UAAW,yBACXqD,UAAU,GAEd,CACIF,IAAK,kBACLC,KAAM,eACNpD,UAAW,kBACXqD,UAAU,GAEd,CACIF,IAAK,eACLC,KAAM,eACNpD,UAAW,eACXqD,UAAU,GAEd,CACIF,IAAK,SACLC,KAAM,SACNpD,UAAW,SACXqD,UAAU,GAEd,CACIF,IAAK,SACLC,KAAM,SACNpD,UAAW,SACXsD,MAAO,IACPD,UAAU,EACVE,KAAM,SAAAC,GACF,OACI,eAAC,WAAD,WACI,cAAC,IAAD,CACIC,GAAE,wBAAmBD,EAAO/C,IAC5BiD,MAAO,CAACC,YAAa,OAFzB,SAGI,mBAAG3D,UAAU,wBAEjB,mBACA0D,MAAO,CAAEE,OAAQ,WACjBxD,QAAS,kBAAMyD,EAAUL,EAAO/C,KAChCqD,MAAM,cACN,cAAY,eAiBxBD,EAAY,SAAAE,GAChBrD,EAAMqD,GACNjE,GAAS,IA3MmB,4CA6M9B,WAAyBkE,GAAzB,iBAAA5C,EAAA,6DACEN,GAAQ,GADV,SAEyBO,MAAMC,IAAM0C,EAAO,CACtCzC,OAAQ,MACRC,QAAS,CACL,qBAAiBX,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMY,SALjC,WAQsB,KANdC,EAFR,QAQeC,GARf,iCASyBD,EAASE,OATlC,OASYC,EATZ,OAUMf,GAAQ,GACY,MAAhBe,EAAKC,QACLd,EAAea,EAAKE,KAAKC,KAAI,SAACC,EAAMC,GAChC,MAAO,CACL,IAAKA,EAAQ,EACb,GAAMD,EAAKxB,GACX,KAAQwB,EAAKE,KACb,MAASF,EAAKG,MACd,OAAUH,EAAKI,OACf,IAAOJ,EAAKK,IACZ,YAAkC,SAAnBL,EAAKM,YAAqB,MAAQ,UACjD,YAAeC,YAAWP,EAAKQ,YAAYC,MAAM,KAAK,IACtD,gBAAmBT,EAAKY,gBACxB,aAAgBZ,EAAKa,aACrB,0BAA6Bb,EAAKU,0BAClC,uBAA0BV,EAAKW,uBAC/B,OAAwB,IAAdX,EAAKH,OAAW,SAAW,gBAG7CZ,EAAS6B,SAASlB,EAAKmB,iBAErBiB,IAAMC,MAAMrC,EAAKsC,SA/B3B,6CA7M8B,sBAgPhC,IAAMC,EAAa,SAACC,GAClB,IAAIL,EAAM,gCAAD,OAAiCK,EAAEC,YAAnC,sBAA4DD,EAAEE,UAA9D,yBAAwFF,EAAEG,cACnG,GAAGH,EAAEI,WAAW,CACZ,IAAIC,EAAOC,KAAKC,UAAUP,EAAEI,YAC5BT,EAAM,gCAAD,OAAiCK,EAAEC,YAAnC,sBAA4DD,EAAEE,UAA9D,yBAAwFF,EAAEG,aAA1F,uBAAqHE,IApPhG,oCAsP9BzB,CAAUe,IAGV,OACE,oCACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAanE,MAAOA,EAAOC,SAAUA,EAAUC,YAhN/B,WAAM,4CAExB,gCAAAqB,EAAA,sEACyBC,MAAMC,IAAM,iBAAmBb,EAAI,CACxDc,OAAQ,MACRC,QAAS,CACP,qBAAiBX,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMY,SAJ7B,cACQC,EADR,gBAOqBA,EAASE,OAP9B,OAOQC,EAPR,OAQEf,GAAQ,GACY,MAAhBe,EAAKC,QAGQmB,EAHQ,uCAGvB,8BAAA7B,EAAA,sEACyBC,MAAMC,IAAM,mBAAoB,CACrDC,OAAQ,MACRC,QAAS,CACP,qBAAiBX,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMY,SAJ7B,WAQsB,KAPdC,EADR,QAQeC,GARf,gCASuBD,EAASE,OAThC,OASUC,EATV,OAUIf,GAAQ,GACY,MAAhBe,EAAKC,SACLd,EAAea,EAAKE,KAAKC,KAAI,SAACC,EAAMC,GAChC,MAAO,CACL,IAAKA,EAAQ,EACb,GAAMD,EAAKxB,GACX,KAAQwB,EAAKE,KACb,MAASF,EAAKG,MACd,OAAUH,EAAKI,OACf,IAAOJ,EAAKK,IACZ,YAAkC,SAAnBL,EAAKM,YAAuB,MAAQ,UACnD,YAAeC,YAAWP,EAAKQ,YAAYC,MAAM,KAAK,IACtD,gBAAmBT,EAAKY,gBACxB,aAAgBZ,EAAKa,aACrB,0BAA6Bb,EAAKU,0BAClC,uBAA0BV,EAAKW,uBAC/B,OAAwB,IAAdX,EAAKH,OAAW,SAAW,gBAG7CZ,EAAS6B,SAASlB,EAAKmB,iBA7B7B,2CAHuB,qDACvBlD,GAAS,GACTY,EAAM,IAkCNuC,KAEAgB,IAAMC,MAAMrC,EAAKsC,SA/CrB,2CAFwB,wBACxBrD,GAAQ,GADgB,mCAoDxB+D,MA6JE,cAAC,IAAD,CAAM7E,UAAU,8BAA8ByD,GAAG,kBAAjD,4BACA,cAAC,IAAD,CACIqB,OA/DK,CACXP,UAAW,GACXQ,YAAa,CAAE,GAAI,GAAI,IACvBC,OAAQ,CACJC,OAAO,EACPC,OAAO,EACPC,OAAO,IA0DLC,QAASrE,EACTmC,QAASA,EACTmC,aAAcpE,EACdqE,SAAU,SAACjB,GAAD,OAAKD,EAAaC,IAC5BkB,SAAS","file":"static/js/26.697458d9.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\nexport default function CustomModal(props) {\n    const { modal, setModal, deleteEntry } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={modal}\n                onClose={setModal}\n            >\n                <CModalHeader closeButton>\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <p> Are you sure you want to delete this record ?</p>\n                    <div className='btn-div-modal-group delete_modal_Btns'>\n                        <button onClick={() => deleteEntry()} className='delete_modal_yes_Btn'>Yes, Approve</button>\n                        <button className='btn btn-primary delete_modal_cancel_Btn' color=\"secondary\" onClick={() => setModal(false)}>Cancel</button>\n                    </div>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import React,{Fragment} from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { Link } from 'react-router-dom';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { userContext } from '../../context/UserContext';\nimport CustomModal from 'src/components/CustomModal';\nimport { formatDate } from 'src/helpers/helpers';\n\nexport default function Index() {\n  const [id, setId] = React.useState(null);\n  const [modal, setModal] = React.useState(false)\n  const { user,setLoad } = React.useContext(userContext);\n  const [companyList, setCompanyList] = React.useState([]);\n  const [total,setTotal] = React.useState(0); \n  \n  React.useEffect(() => {\n    setLoad(true)\n    async function fetchData() {\n      const response = await fetch(url + 'fetchCompanyList', {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n      if(response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n          setCompanyList(data.list.map((item, index) => {\n            return {\n              '#': index + 1,\n              'id': item.id,\n              'name': item.name,\n              'email': item.email,\n              'mobile': item.mobile,\n              'gst': item.gst,\n              'default_gst': item.default_gst===\"true\"?\"GST\" : \"NON-GST\",\n              'expiry_date': formatDate(item.expiry_date.split(' ')[0]),\n              'print_preference_purchase': item.print_preference_purchase,\n              'print_preference_sales': item.print_preference_sales,\n              'one_time_amount': item.one_time_amount,\n              'renew_amount': item.renew_amount,\n              'status': item.status===1?\"Active\" : \"Inactive\"\n            }\n          }));\n          setTotal(parseInt(data.total_records));\n        }\n      }\n    }\n    fetchData();\n  }, [])\n\n  const deleteEntry = () => {\n    setLoad(true)\n    async function deleteData() {\n      const response = await fetch(url + 'deletecompany/' + id, {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n      const data = await response.json();\n      setLoad(false)\n      if (data.status === 200) {\n        setModal(false);\n        setId('');\n        async function fetchData() {\n          const response = await fetch(url + 'fetchCompanyList', {\n            method: 'GET',\n            headers: {\n              'Authorization': user?.token\n            }\n          })\n    \n          if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                setCompanyList(data.list.map((item, index) => {\n                    return {\n                      '#': index + 1,\n                      'id': item.id,\n                      'name': item.name,\n                      'email': item.email,\n                      'mobile': item.mobile,\n                      'gst': item.gst,\n                      'default_gst': item.default_gst===\"true\" ? \"GST\" : \"NON-GST\",\n                      'expiry_date': formatDate(item.expiry_date.split(' ')[0]),\n                      'one_time_amount': item.one_time_amount,\n                      'renew_amount': item.renew_amount,\n                      'print_preference_purchase': item.print_preference_purchase,\n                      'print_preference_sales': item.print_preference_sales,\n                      'status': item.status===1?\"Active\" : \"Inactive\"\n                    }\n                  }));\n              setTotal(parseInt(data.total_records));\n            }\n          }\n        }\n        fetchData();\n      } else {\n        toast.error(data.message)\n      }\n    }\n    deleteData();\n  }\n  \n  const columns = [\n    {\n        key: \"#\",\n        text: \"#\",\n        className: \"#\",\n        sortable: false,\n    },\n    {\n        key: \"name\",\n        text: \"Company Name\",\n        className: \"name\",\n        sortable: true\n    },\n    {\n        key: \"email\",\n        text: \"Email\",\n        className: \"email\",\n        sortable: true\n    },\n    {\n        key: \"mobile\",\n        text: \"Mobile\",\n        className: \"mobile\",\n        sortable: true\n    },\n    {\n      key: \"default_gst\",\n      text: \"Company Type(GST)\",\n      className: \"default_gst\",\n      sortable: true\n    },\n    {\n        key: \"gst\",\n        text: \"GST No.\",\n        className: \"gst\",\n        sortable: true\n    },\n    {\n      key: \"print_preference_purchase\",\n      text: \"Purchase Preference\",\n      className: \"print_preference_purchase\",\n      sortable: true\n    },\n    {\n        key: \"print_preference_sales\",\n        text: \"Sales Preference\",\n        className: \"print_preference_sales\",\n        sortable: true\n    },\n    {\n        key: \"one_time_amount\",\n        text: \"First Amount\",\n        className: \"one_time_amount\",\n        sortable: true\n    },\n    {\n        key: \"renew_amount\",\n        text: \"Renew amount\",\n        className: \"renew_amount\",\n        sortable: true\n    },\n    {\n        key: \"status\",\n        text: \"Status\",\n        className: \"status\",\n        sortable: true\n    },\n    {\n        key: \"action\",\n        text: \"Action\",\n        className: \"action\",\n        width: 100,\n        sortable: false,\n        cell: record => { \n            return (\n                <Fragment>      \n                    <Link\n                        to={`/edit/company/${record.id}`} \n                        style={{marginRight: '5px'}}>    \n                        <i className=\"fa fa-pencil mr-1\"></i>\n                    </Link>\n                    <i \n                    style={{ cursor: \"pointer\" }} \n                    onClick={() => showModal(record.id)} \n                    class=\"fa fa-trash\" \n                    aria-hidden=\"true\">   \n                    </i>\n                </Fragment>\n            );\n        }\n    }\n];\n\nconst config = {\n    page_size: 10,\n    length_menu: [ 10, 20, 50 ],\n    button: {\n        excel: false,\n        print: false,\n        extra: false,\n    }\n}\n  const showModal = value => {\n    setId(value);\n    setModal(true)\n  }\n  async function fetchData(query) {\n    setLoad(true);\n    const response = await fetch(url + query, {\n        method: 'GET',\n        headers: {\n            'Authorization': user?.token\n        }\n    })\n    if (response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n            setCompanyList(data.list.map((item, index) => {\n                return {\n                  '#': index + 1,\n                  'id': item.id,\n                  'name': item.name,\n                  'email': item.email,\n                  'mobile': item.mobile,\n                  'gst': item.gst,\n                  'default_gst': item.default_gst===\"true\"?\"GST\" : \"NON-GST\",\n                  'expiry_date': formatDate(item.expiry_date.split(' ')[0]),\n                  'one_time_amount': item.one_time_amount,\n                  'renew_amount': item.renew_amount,\n                  'print_preference_purchase': item.print_preference_purchase,\n                  'print_preference_sales': item.print_preference_sales,\n                  'status': item.status===1?\"Active\" : \"Inactive\"\n                }\n              }));\n          setTotal(parseInt(data.total_records));\n        } else {\n            toast.error(data.message);\n        }\n    }\n}\nconst handleChange=(e)=>{\n  let query=`fetchCompanyList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}`;\n  if(e.sort_order){\n      let sort = JSON.stringify(e.sort_order);\n      query=`fetchCompanyList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}&sort_order=${sort}`;\n  }\n  fetchData(query);\n}\n\n  return (\n    <section>\n      <ToastContainer />\n      <CustomModal modal={modal} setModal={setModal} deleteEntry={deleteEntry} />\n      <Link className='btn btn-primary float-right' to='/create/company'>Create Company</Link>\n      <ReactDatatable\n          config={config}\n          records={companyList}\n          columns={columns}\n          total_record={total}\n          onChange={(e)=>handleChange(e)}\n          dynamic={true}\n        />\n    </section>\n  )\n}"],"sourceRoot":""}