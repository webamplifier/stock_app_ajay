{"version":3,"sources":["screens/Bank/edit.js"],"names":["Edit","id","useParams","React","useContext","userContext","user","setLoad","useState","name","setName","ifsc","setIFSC","branch","setBranch","accno","setAccNo","total_amount","setTotalAmount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","bank_detail","fetchData","className","onSubmit","e","formData","FormData","append","body","status","window","location","origin","toast","error","message","preventDefault","submitData","handleSubmit","class","for","required","value","onChange","target","type","onClick","reload"],"mappings":"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","file":"static/js/75.54890625.chunk.js","sourcesContent":["import React from 'react'\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport { url } from 'src/helpers/helpers';\nimport { useParams } from 'react-router-dom'\n\nexport default function Edit() {\n    const { id } = useParams();\n    const { user,setLoad } = React.useContext(userContext);\n    const [name, setName] = React.useState('');\n    const [ifsc,setIFSC] = React.useState('');\n    const [branch,setBranch] = React.useState('');\n    const [accno, setAccNo] = React.useState('');\n    const [total_amount, setTotalAmount] = React.useState(0);\n\n    const handleSubmit = e => {\n        setLoad(true)\n        e.preventDefault();\n        async function submitData() {\n            const formData = new FormData();\n            formData.append('name', name);\n            formData.append('accno', accno);\n            formData.append('ifsc', ifsc);\n            formData.append('branch',branch);\n            formData.append('total_amount', total_amount);\n\n            const response = await fetch(url + 'updatebank/' + id, {\n                method: 'POST',\n                headers: {\n                    'Authorization': user?.token\n                },\n                body: formData\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    return window.location = window.location.origin + '/#/bankList'\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        submitData();\n    }\n\n    React.useEffect(() => {\n        setLoad(true)\n        async function fetchData() {\n            const response = await fetch(url + 'bankById/' + id, {\n                method: 'GET',\n                headers: {\n                    'Authorization': user.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                const bank_detail = data.bank_detail;\n                setName(bank_detail.name);\n                setAccNo(bank_detail.accno);\n                setBranch(bank_detail.branch);\n                setIFSC(bank_detail.ifsc);\n                setTotalAmount(bank_detail.total_amount);\n            }\n        }\n        fetchData();\n    }, [id])\n\n    return (\n        <div className=\"container create-page-main-section\">\n            <ToastContainer />\n            <form onSubmit={e => handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Bank No<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={accno} onChange={e => setAccNo(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Name<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={name} onChange={e => setName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">IFSC</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input value={ifsc} onChange={e => setIFSC(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Branch</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input value={branch} onChange={e => setBranch(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Total Amount</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input value={total_amount} onChange={e => setTotalAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button onClick={() => window.location.reload()} type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}