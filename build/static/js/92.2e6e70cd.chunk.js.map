{"version":3,"sources":["screens/Reports/HistoryReport.js"],"names":["Index","React","useContext","userContext","user","setLoad","useState","historyList","setHistoryList","from_Date","setFromDate","to_Date","setToDate","total","setTotal","purpose","setPurpose","action","setAction","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","list","map","item","index","id","date","user_name","parseInt","total_records","toast","error","message","fetchData","query","handleChange","e","string","page_number","page_size","filter_value","sort_order","sort","JSON","stringify","onSubmit","preventDefault","submit","handleSubmit","class","for","value","onChange","target","type","config","length_menu","button","excel","print","extra","records","columns","key","text","className","sortable","total_record","dynamic"],"mappings":"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","file":"static/js/92.2e6e70cd.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\n\nexport default function Index() {\n    const { user, setLoad } = React.useContext(userContext);\n    const [historyList, setHistoryList] = React.useState([]);\n    const [from_Date, setFromDate] = React.useState('');\n    const [to_Date, setToDate] = React.useState('');\n    const [total,setTotal] = React.useState(0);\n    const [purpose,setPurpose] = React.useState('');\n    const [action, setAction] = React.useState('');\n\n    React.useEffect(() => {\n        setLoad(true)\n        async function fetchData() {\n            const response = await fetch(url + 'fetchHistoryList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setHistoryList(data.list.map((item,index)=>{\n                        return{\n                           '#' : index+1,\n                           'id': item.id,\n                           'action': item.action,\n                           'date': item.date,\n                           'purpose': item.purpose,\n                           'user_name': item.user_name\n                        }\n                    }));\n                    setTotal(parseInt(data.total_records));\n                } else {\n                    toast.error(data.message);\n                }\n            }\n        }\n        fetchData();\n    }, [])\n\n    function handleSubmit(e){\n        e.preventDefault();\n            setLoad(true)\n            async function submit(){\n                const response = await fetch(url + `fetchHistoryList?to=${to_Date}&from=${from_Date}&purpose=${purpose}&action=${action}`,{\n                    method : 'GET',\n                    headers : {\n                        'Authorization' : user?.token\n                    }\n                });\n                 \n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        setHistoryList(data.list.map((item,index)=>{\n                            return{\n                               '#' : index+1,\n                               'id': item.id,\n                               'action': item.action,\n                               'date': item.date,\n                               'purpose': item.purpose,\n                               'user_name': item.user_name\n                            }\n                        }));\n                        setTotal(parseInt(data.total_records));\n                    }else{\n                        toast.error(data.message)\n                    }\n                }else{\n                    toast.error('Oops something went wrong!')\n                }\n            }\n            submit();\n    }\n    \n    const columns = [\n        {\n            key: \"#\",\n            text: \"#\",\n            className: \"#\",\n            sortable: true,\n        },\n        {\n            key: \"action\",\n            text: \"Action\",\n            className: \"action\",\n            sortable: true,\n        },\n        {\n            key: \"date\",\n            text: \"Date\",\n            className: \"date\",\n            sortable: true\n        },\n        {\n            key: \"purpose\",\n            text: \"Purpose\",\n            className: \"purpose\",\n            sortable: true\n        },\n        {\n            key: \"user_name\",\n            text: \"Created By\",\n            className: \"user_name\",\n            sortable: true\n        },\n    ];\n    const config = {\n        page_size: 10,\n        length_menu: [ 10, 20, 50 ],\n        button: {\n            excel: false,\n            print: false,\n            extra: false,\n        }\n    }\n    async function fetchData(query) {\n        setLoad(true);\n        const response = await fetch(url + query, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                setHistoryList(data.list.map((item,index)=>{\n                    return{\n                       '#' : index+1,\n                       'id': item.id,\n                       'action': item.action,\n                       'date': item.date,\n                       'purpose': item.purpose,\n                       'user_name': item.user_name\n                    }\n                }));\n                setTotal(parseInt(data.total_records));\n            } else {\n                toast.error(data.message);\n            }\n        }\n    }\n    const handleChange=(e)=>{\n        let string=\"\";\n        if(to_Date && from_Date && action && purpose){\n           string=`&to=${to_Date}&from=${from_Date}&purpose=${purpose}&action=${action}`;\n        }\n        else if(to_Date && from_Date){\n            if(purpose){\n            string=`&to=${to_Date}&from=${from_Date}&purpose=${purpose}`;\n            }\n            else if(action){\n                string=`&to=${to_Date}&from=${from_Date}&action=${action}`;\n            }\n            else{\n                string=`&to=${to_Date}&from=${from_Date}`;\n            }\n        }\n        else if(purpose){\n            if(action){\n                string=`&purpose=${purpose}&action=${action}`;\n            }\n            else string=`&purpose=${purpose}`;\n        }\n        else string=`&action=${action}`;\n        \n        let query=`fetchHistoryList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}${string}`;\n        if(e.sort_order){\n            let sort = JSON.stringify(e.sort_order);\n            query=`fetchHistoryList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}&sort_order=${sort}${string}`;\n        }\n        fetchData(query);\n    }\n\n    return (\n        <section>\n            <ToastContainer />\n            <form onSubmit={(e)=>handleSubmit(e)}>\n            <div class=\"form-row create-purchase-header\">\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">From</label>\n            <input value={from_Date} onChange={e => setFromDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\"/>\n            </div>\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">To</label>\n            <input value={to_Date} onChange={e => setToDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\"/>\n            </div>\n            <div class=\"form-group col-md-3\">\n            <label for=\"input-type\" class=\"col-md-4 col-form-label\">Action</label>\n            <select value={action} onChange={e => setAction(e.target.value)} id=\"input-type\" class=\"form-control\">\n            <option value=\"\">Select Action</option>\n            <option value=\"Create\">Create</option>\n            <option value=\"Update\">Update</option>\n            <option value=\"Delete\">Delete</option>\n            </select>\n            </div>\n            <div class=\"form-group col-md-3\">\n            <label for=\"input-type\" class=\"col-md-4 col-form-label\">Purpose</label>\n            <select value={purpose} onChange={e => setPurpose(e.target.value)} id=\"input-type\" class=\"form-control\">\n            <option value=\"\">Select Purpose</option>\n            <option value=\"Categories\">Category</option>\n            <option value=\"Customers\">Customer</option>\n            <option value=\"Employees\">Employee</option>\n            <option value=\"Expenses\">Expense</option>\n            <option value=\"Inventories\">Inventory</option>\n            <option value=\"Parties\">Party</option>\n            <option value=\"Purchase_Start\">Purchase</option>\n            <option value=\"Purchase_Return\">Purchase Return</option>\n            <option value=\"Sale_Start\">Sales</option>\n            <option value=\"Sale_Return\">Sales Return</option>\n            <option value=\"Quotation\">Quotation</option>\n            <option value=\"Reciepts\">Reciept</option>\n            </select>\n            </div>\n            <div class=\"form-group col-md-3\">\n            <button type=\"submit\" class=\"font-weight-bold my-4 py-2 px-4 btn btn-success\">Filter</button>\n            </div>\n            </div>\n            </form>\n            <ReactDatatable\n                    config={config}\n                    records={historyList}\n                    columns={columns}\n                    total_record={total}\n                    onChange={(e)=>handleChange(e)}\n                    dynamic={true}\n                />\n        </section>\n    )\n}"],"sourceRoot":""}