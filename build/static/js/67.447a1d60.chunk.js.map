{"version":3,"sources":["assets/images_manual/add.svg","components/CreateCustomerModal.js","screens/Sales/Sales Entry/Create.js"],"names":["CustomerModal","props","React","useContext","userContext","user","setLoad","customermodal","setCustomerModal","allCustomers","setAllCustomers","setCurrentCustomer","useState","name","setName","gst","setGST","due_amount","setDueAmount","mobile","setMobile","address","setAddress","email","setEmail","className","show","onClose","closeButton","htmlFor","type","value","onChange","e","target","onClick","a","formData","FormData","append","fetch","url","method","headers","token","body","response","ok","json","data","status","customers","customer","push","console","log","message","preventDefault","submitData","handleSubmit","Create","invoiceNo","setInvoiceNo","saleDate","setSaleDate","default_gst","setDefaultGST","currentCustomer","currentWarehouse","setCurrentWarehouse","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentPaymentMethod","setCurrentPaymentMethod","currentProduct","setCurrentProduct","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","sale_price","setSalePrice","label","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allWarehouses","setAllWarehouses","allPaymentMethods","setAllPaymentMethods","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","fetchDefaultGST","invoice_number","toast","error","products","inventory_list","map","item","product_id","product_name","total_qty","unit","product_unit","price","sale_unit_price","hsbn","product_hsbn","serial_no","product_serial_no","product_list","id","useEffect","payment_methods","client_list","amount","warehouse_list","fetchPaymentMethods","fetchData","fetchGSTList","fetchWarehouse","parseFloat","handleProducts","fetchProd","class","for","readOnly","required","options","style","cursor","src","plus","alt","checked","def_gst","fetchInvoiceNo","handleChange","handleProduct","new_item_dict","discount_type","total","warehouse_id","warehouse_name","new_list_edit","index","parseInt","taxable_amount","new_item_list","handleSubmitItem","length","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitSales","success","header","final","paymentMethod","taxableAmount","final_array","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/67.447a1d60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import { CModal, CModalBody, CModalHeader } from '@coreui/react'\nimport React from 'react';\nimport { url } from 'src/helpers/helpers';\nimport { userContext } from '../context/UserContext'\n\nexport default function CustomerModal(props) {\n    const { user, setLoad } = React.useContext(userContext);\n    const { customermodal, setCustomerModal, allCustomers, setAllCustomers, setCurrentCustomer } = props;\n    const [name, setName] = React.useState('');\n    const [gst,setGST] = React.useState('');\n    const [due_amount, setDueAmount] = React.useState(0);\n    const [mobile,setMobile] = React.useState('');\n    const [address, setAddress] = React.useState(''); \n    const [email, setEmail] = React.useState('');\n    \n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        setLoad(true);\n        async function submitData() {\n            const formData = new FormData();\n            formData.append('name', name);\n            formData.append('email', email);\n            formData.append('mobile', mobile);\n            formData.append('address', address);\n            formData.append('gst', gst);\n            formData.append('due_amount',due_amount);\n    \n            const response = await fetch(url + 'createcustomer', {\n                method: 'POST',\n                headers: {\n                    'Authorization': user?.token\n                },\n                body: formData\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false);\n                if (data.status === 200) {\n                    let customers=[];\n                    if(data.customer){\n                    customers.push(...allCustomers,data.customer);\n                    setAllCustomers(customers);\n                    setCurrentCustomer(data.customer);\n                    }\n                    setName('');\n                    setEmail('');\n                    setMobile('');\n                    setAddress('');\n                    setGST('');\n                    setDueAmount(0);\n                } else {\n                    console.log(data.message);\n                }\n            }\n        }\n        submitData();\n        setCustomerModal(false);\n    }\n\n    return (\n        <div className='container full-size-create-page-main-section'>\n            <CModal\n                show={customermodal}\n                onClose={setCustomerModal}\n            >\n                <CModalHeader closeButton>\n                    Create Customer\n                </CModalHeader>\n                <CModalBody className=\"delete-modal-box\">\n                        <div className=\"container\">\n                            <div className=\"form-group row\">\n                                <div className=\"col-3\">\n                                <label htmlFor=\"\" className=\"text-center\">Name<span className='required-label'>*</span></label>\n                                </div>\n                                <div className=\"col-6\">\n                                <input type=\"text\" value={name} onChange={e => setName(e.target.value)} className='form-control' />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-3\">\n                                <label htmlFor=\"\">Email</label>\n                                </div>\n                                <div className=\"col-6\">\n                                <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} className='form-control' />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-3\">\n                                <label htmlFor=\"\">Mobile<span className='required-label'>*</span></label>\n                                </div>\n                                <div className=\"col-6\">\n                                <input type=\"text\" value={mobile} onChange={e => setMobile(e.target.value)} className='form-control' />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-3\">\n                                <label htmlFor=\"\">Due_Amount</label>\n                                </div>\n                                <div className=\"col-6\">\n                                <input type=\"text\" value={due_amount} onChange={e => setDueAmount(e.target.value)} className='form-control' />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-3\">\n                                <label htmlFor=\"\">GST</label>\n                                </div>\n                                <div className=\"col-6\">\n                                <input type=\"text\" value={gst} onChange={e => setGST(e.target.value)} className='form-control' />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-3\">\n                                <label htmlFor=\"\">Address</label>\n                                </div>\n                                <div className=\"col-6\">\n                                <input type=\"text\" value={address} onChange={e => setAddress(e.target.value)} className='form-control' />\n                                </div>\n                            </div>\n                    </div>\n                    <button type='submit' onClick={(e) => handleSubmit(e)} className='col-12 btn btn-secondary'>Submit</button>\n                </CModalBody>\n            </CModal>\n        </div>\n\n    )\n}\n","import React from 'react'\nimport plus from '../../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { userContext } from '../../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\nimport CustomerModal from '../../../components/CreateCustomerModal';\n\nexport default function Create() {\n    const { user,setLoad } = React.useContext(userContext);\n    const [invoiceNo, setInvoiceNo] = React.useState('');\n    const [saleDate, setSaleDate] = React.useState('');\n    const [default_gst, setDefaultGST] = React.useState(false);\n    const [currentCustomer, setCurrentCustomer] = React.useState('');\n    const [customermodal, setCustomerModal] = React.useState(false);\n    const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState('');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [sale_price, setSalePrice] = React.useState(0);\n    const [gst,setGST] = React.useState({\n        value: 0,\n        label: 0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list,setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allCustomers, setAllCustomers] = React.useState([]);\n    const [allWarehouses, setAllWarehouses] = React.useState([]);\n    const [allPaymentMethods,setAllPaymentMethods] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts,setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount,setDiscountAmount] = React.useState(0);\n    const [taxAmount,setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax=0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n        \n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n            setCurrentPaymentMethod({\n                label: \"cash\"\n            });\n        }\n        fetchPaymentMethods();\n        \n        async function fetchData() {\n            setLoad(true);\n            const response = await fetch(url + 'clientlist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllCustomers(data?.client_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name,\n                            amount: item.due_amount\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchData();\n        \n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n\n        async function fetchWarehouse() {\n            setLoad(true);\n            const response = await fetch(url + 'warehouselist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllWarehouses(data?.warehouse_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchWarehouse();\n        fetchDefaultGST();\n    }, [])\n    \n    async function fetchDefaultGST(){\n        setLoad(true);\n        const response = await fetch(url + `fetchGST`,{\n            headers : {\n                'Authorization' : user.token\n            },\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false);\n            if (data.status == 200) {  \n                if (data.default_gst == \"false\"){\n                    setDefaultGST(false)\n                }else{\n                    setDefaultGST(true);\n                }\n                setInvoiceNo(data.invoice_number);\n                setGST({\n                   value: 0,\n                   label: 0\n                });\n            }else{\n                toast.error(data.message);\n            }\n        }        \n    }\n    \n    async function fetchProd(e) {\n        setLoad(true);            \n        const response = await fetch(url + `fetchProducts?warehouse=${e.value}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                let products=[];\n                if(data.inventory_list){\n                  data.inventory_list.map(item=>{\n                    products.push(\n                       {value : item.product_id,\n                        name : item.product_name,\n                        label : `${item.product_name} ${item.total_qty}`,\n                        type : \"product\",\n                        unit : item.product_unit,\n                        price: item.sale_unit_price,\n                        hsbn: item.product_hsbn,\n                        serial_no: item.product_serial_no\n                       }\n                  )})\n                }\n                if(data.product_list){\n                    data.product_list.map(item=>{\n                      products.push(\n                         {value : item.id,\n                          name: item.name,  \n                          label : item.name,\n                          type: item.type,\n                          price: item.price,\n                          unit: item.unit,\n                          hsbn: item.hsbn,\n                          serial_no: item.serial_no\n                         }\n                    )})\n                  }  \n                setAllProducts(products);\n            } else {\n                toast.error(data.message)\n            }\n        }\n    }\n    const showModal = () => {\n        setCustomerModal(true)\n    }\n    const calculateTotal = () => {\n        if (sale_price > 0 && qty > 0) {\n            amount_item = parseFloat(sale_price) * parseFloat(qty); //amount before tax\n            tax_amount=0;\n            if(default_gst && gst){\n            tax_amount = (parseFloat(amount_item)/100) * parseFloat(gst.value);\n            }\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n    calculateFinalPrice()\n\n    const handleSubmitItem = () => {\n        if (invoiceNo && currentProduct && currentWarehouse && currentCustomer && sale_price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                sale_price: sale_price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount,\n                warehouse_id : currentWarehouse?.value,\n                warehouse_name : currentWarehouse?.label\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem)-1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount=0;\n                let taxable_amount=0;\n                new_list_edit.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setAllItems(new_list_edit);\n                setPaidAmount(total)\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount=0;\n                new_item_list.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n                setPaidAmount(total)\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setSalePrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value: 0,\n                label: 0\n            });\n            perItemAmount = 0;\n            amount_item= 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount=0;\n            amount_after_tax=0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n    const finalSubmit = () => {\n        if (invoiceNo && currentWarehouse && currentCustomer && allItems.length > 0 && totalValue){\n            setLoad(true)\n            let header = {\n                invoiceNo : invoiceNo,\n                saleDate : saleDate,\n                default_gst: default_gst,\n                currentCustomer : currentCustomer,\n                currentWarehouse : currentWarehouse,\n                discountType : discountType\n            }\n            let final = {\n                totalValue : totalValue,\n                finalAmount : finalAmount,\n                paidAmount : paidAmount,\n                remainAmount : remainAmount,\n                finalDiscountValue : finalDiscountValue,\n                finalDiscountCriteria : finalDiscountCriteria,\n                remarks : remarks,\n                paymentMethod : currentPaymentMethod?.label,\n                discountAmount : discountAmount,\n                taxableAmount : taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array',JSON.stringify(final_array));\n            formData.append('allItems',JSON.stringify(allItems));\n\n            console.log(allItems)\n\n            async function submitSales(){\n                const response = await fetch(url + 'createSales',{\n                    method : 'POST',\n                    headers : {\n                        'Authorization' : user.token\n                    },\n                    body : formData\n                });\n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        toast.success(data.message);\n                        setSaleDate('');\n                        setCurrentCustomer('');\n                        setDiscountType('None');\n                        setDiscountAmount(0);\n                        setDefaultGST(false);\n                        setTaxableAmount(0);\n                        setFinalDiscountCriteria('percent');\n                        setFinalDiscountValue(0);\n                        setCurrentProduct('');\n                        setCurrentWarehouse('');\n                        setTotalValue(0);\n                        setPaidAmount(0);\n                        setAllItems([]);\n                        setAllProducts([]);\n                        setCurrentPaymentMethod({\n                            label:\"cash\"\n                        });\n                        finalAmount = 0;\n                        remainAmount = 0;\n                        discount_amount_final = 0;\n                        amount_before_discount_final = 0;\n                        amount_after_discount_final = 0;\n                        fetchDefaultGST();\n                    }else{\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitSales()\n        }else{\n            toast.error('Please fill the data with *');\n        }\n    }\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setSalePrice(item.sale_price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    } \n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        setAllItems(new_item);\n    }\n    const handleChange = ()=>{\n        const def_gst = !default_gst;\n        setDefaultGST(!default_gst);\n        async function fetchInvoiceNo(){\n            setLoad(true);\n            const response = await fetch(url + `fetchInvoiceNo?default_gst=${def_gst}`,{\n                headers : {\n                    'Authorization' : user.token\n                },\n            })\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false);\n                if (data.status == 200) {  \n                    setInvoiceNo(data.invoice_number);\n                }\n            }        \n        }\n        fetchInvoiceNo();\n    }\n    const handleProducts = (e)=>{\n        setCurrentWarehouse(e);\n        fetchProd(e); \n    }\n\n    const handleProduct = (e)=>{\n        setCurrentProduct(e);\n        setSalePrice(e.price);\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <CustomerModal customermodal={customermodal} setCustomerModal={setCustomerModal} allCustomers={allCustomers} setAllCustomers={setAllCustomers} setCurrentCustomer={setCurrentCustomer} /> \n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Invoice No.<span className='required-label'>*</span></label>\n                            <input readOnly value={invoiceNo} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Warehouse<span className='required-label'>*</span></label>\n                            <Select options={allWarehouses} value={currentWarehouse} onChange={(e)=>handleProducts(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Sale Date</label>\n                            <input value={saleDate} onChange={e => setSaleDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\"/>\n                        </div>\n                        <div class=\"form-group col-md-5\">\n                            <div class=\"form-row\">\n                                <div class=\"form-group col-md-10\">\n                                <label for=\"input-party\">Customer<span className='required-label'>*</span></label>\n                                <Select options={allCustomers} value={currentCustomer} onChange={setCurrentCustomer} />\n                                </div>\n                                <div class=\"form-group col-md-2 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => showModal()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                                </div>\n                            </div> \n                        </div>\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">GST:</label>\n                        <div class=\"d-flex b-0 col-sm-1\">\n                        <input checked={default_gst} type=\"checkbox\" onChange={e => handleChange()} id=\"inputPassword\" />\n                        </div>\n                        </div>\n                    </div>    \n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={(e)=>handleProduct(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Price<span className='required-label'>*</span></label>\n                            <input value={sale_price} onChange={(e) => setSalePrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` :null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        {default_gst &&\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                            <Select options={gst_list} value={gst} onChange={setGST} />\n                        </div>\n                         }\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                <p className='p-0 m-0'>{item.item.name}</p>\n                                                <p>({item.warehouse_name})</p>\n                                            </td>\n                                            <td>{item.sale_price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                            {currentCustomer ?<div>Due Amount: {currentCustomer.amount}</div> :null}\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                    <Select options={allPaymentMethods} value={currentPaymentMethod} onChange={setCurrentPaymentMethod} />\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}