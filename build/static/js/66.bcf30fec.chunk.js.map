{"version":3,"sources":["assets/images_manual/add.svg","screens/Quotation/edit.js"],"names":["Edit","id","useParams","history","useHistory","React","useContext","userContext","user","setLoad","useState","quotationNo","setQuotationNo","quotationDate","setQuotationDate","default_gst","setDefaultGST","currentCustomer","setCurrentCustomer","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentProduct","setCurrentProduct","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","price","setPrice","value","label","gst","setGST","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allCustomers","setAllCustomers","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","paymentMethod","setPaymentMethod","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","client_list","map","item","name","amount","due_amount","toast","error","message","product_list","type","unit","hsbn","serial_no","parseFloat","sales_unit","toFixed","header","quotation_header","final_discount_criteria","final_discount_value","bill_discount_percentage","bill_discount_amount","items","quotation_items","quotation_number","quotation_date","customer_id","customer_name","discount_type","midItems","i","length","current_item","discount_value","discount_percent","obj","product_id","product_name","product_type","product_unit","product_hsbn","product_serial_no","item_id","tax_percent","total","push","current_total_fetch","taxable_amount","amount_paid","payment_type","fetchDataParty","fetchGSTList","fetchProd","fetchDetailSales","className","class","for","readOnly","required","onChange","e","target","options","checked","onClick","htmlFor","new_item_dict","new_list_edit","index","parseInt","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitSales","body","formData","success","final","taxableAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/66.bcf30fec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\nimport plus from '../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url, formatDate } from 'src/helpers/helpers';\nimport { userContext } from '../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useHistory, useParams } from 'react-router-dom'\n\nexport default function Edit() {\n    let { id } = useParams();\n    const history = useHistory();\n    const { user,setLoad } = React.useContext(userContext);\n    const [quotationNo, setQuotationNo] = React.useState('');\n    const [quotationDate, setQuotationDate] = React.useState('');\n    const [default_gst, setDefaultGST]  = React.useState(false);\n    const [currentCustomer, setCurrentCustomer] = React.useState('');\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [price, setPrice] = React.useState(0);\n    const [gst,setGST] = React.useState({\n        value: 0,\n        label: 0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list,setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allCustomers, setAllCustomers] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts,setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount,setDiscountAmount] = React.useState(0);\n    const [taxAmount,setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax=0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n        setLoad(true)\n        \n        async function fetchDataParty() {\n            const response = await fetch(url + 'clientlist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllCustomers(data?.client_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name,\n                            amount: item.due_amount,\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchDataParty();\n\n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n\n        async function fetchProd() {\n            \n            const response = await fetch(url + `fetchQuotationProducts`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200){\n                    setAllProducts(data.product_list.map((item)=>{\n                        if(item.type===\"product\"){\n                        return{\n                               value: item.id,\n                               label: item.name,\n                               type: item.type,\n                               unit: item.unit,\n                               hsbn: item.hsbn,\n                               serial_no: item.serial_no,\n                               price: parseFloat(parseFloat(item.price) / parseFloat(item.sales_unit)).toFixed(2)\n                        }\n                       }else{\n                        return{\n                            value: item.id,\n                            label: item.name,\n                            type: item.type,\n                            unit: item.unit,\n                            hsbn: item.hsbn,\n                            serial_no: item.serial_no,\n                            price: item.price\n                         }  \n                       }\n                    }));\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchProd();\n\n        async function fetchDetailSales() {\n            const response = await fetch(url + 'getQuotationById/' + id, {\n                headers: {\n                    'Authorization': user.token\n                }\n            });\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    let header = data.quotation_header;\n                    let final_discount_criteria='';\n                    let final_discount_value = 0;\n                    if (parseFloat(header.bill_discount_percentage)>0) {\n                        final_discount_criteria = 'percent';\n                        final_discount_value = header.bill_discount_percentage;\n                    } else if (parseFloat(header.bill_discount_amount)>0) {\n                        final_discount_criteria = 'amount';\n                        final_discount_value = header.bill_discount_amount\n                    }\n                    let items = data.quotation_items;\n                    setQuotationNo(header.quotation_number);\n                    setQuotationDate(header.quotation_date);\n                    setCurrentCustomer({\n                        value: header.customer_id,\n                        label: header.customer_name\n                    });\n                    setDiscountType(header.discount_type);\n                    let midItems = [];\n                    for (let i = 0; i < items.length; i++) {\n                        let current_item = items[i]; \n                        let discount_type = '';\n                        let discount_value = 0;\n                        \n                        if (current_item.discount_percent && parseFloat(current_item.discount_percent) > 0) {\n                            discount_type = 'percent'\n                            discount_value = current_item.discount_percent\n                        } else if (current_item.discount_amount) {\n                            discount_type = 'amount';\n                            discount_value = current_item.discount_amount\n                        } else {\n                            //\n                        }\n                        let obj ={};\n                        if(header.default_gst===\"true\"){    \n                            setDefaultGST(true);\n                            obj = {\n                            item: {\n                                value: current_item.product_id,\n                                label: current_item.product_name,\n                                type: current_item.product_type,\n                                price: current_item.price,\n                                unit: current_item.product_unit,\n                                hsbn: current_item.product_hsbn,\n                                serial_no: current_item.product_serial_no\n                            },\n                            item_id: current_item.id,\n                            price: current_item.price,\n                            qty: current_item.qty,\n                            discount_type: discount_type,\n                            discountValue: discount_value,\n                            gst: {\n                                label: current_item.tax_percent,\n                                value: current_item.tax_percent\n                            },\n                            total: current_item.total,\n                            amount_item: current_item.total,\n                            amount_after_tax: current_item.amount_after_tax,\n                            amount_before_discount: current_item.amount_before_discount,\n                            tax_amount: current_item.tax_amount,\n                            discount_amount: current_item.discount_amount,\n                            amount_after_discount: current_item.amount_after_discount,\n                        }\n                        }\n                        else{\n                            setDefaultGST(false)\n                            obj = {\n                                item: {\n                                    value: current_item.product_id,\n                                    label: current_item.product_name,\n                                    type: current_item.product_type,\n                                    price: current_item.price,\n                                    unit: current_item.product_unit,\n                                    hsbn: current_item.product_hsbn,\n                                    serial_no: current_item.product_serial_no\n                                },\n                                item_id: current_item.id,\n                                price: current_item.price,\n                                qty: current_item.qty,\n                                discount_type: discount_type,\n                                discountValue: discount_value,\n                                total: current_item.total,\n                                gst: {\n                                    value:0,\n                                    label:0\n                                },\n                                amount_item: current_item.total,\n                                amount_after_tax: current_item.amount_after_tax,\n                                amount_before_discount: current_item.amount_before_discount,\n                                tax_amount: current_item.tax_amount,\n                                discount_amount: current_item.discount_amount,\n                                amount_after_discount: current_item.amount_after_discount,\n                            }\n                        }\n                        midItems.push(obj)\n                    }\n                    setAllItems(midItems);\n                    let current_total_fetch = 0;\n                    let discount_amount = 0;\n                    let taxable_amount = 0;\n                    midItems.map(item => {\n                        current_total_fetch = parseFloat(current_total_fetch) + parseFloat(item.total)\n                        discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n                        taxable_amount = parseFloat(taxable_amount)+ parseFloat(item.tax_amount);\n                    })\n                    setTotalValue(current_total_fetch);\n                    setDiscountAmount(discount_amount);\n                    setTaxableAmount(taxable_amount);\n                    setFinalDiscountValue(final_discount_value);\n                    setFinalDiscountCriteria(final_discount_criteria);\n                    setPaidAmount(header.amount_paid);\n                    setPaymentMethod(header.payment_type);\n                    setRemarks(header.remarks);\n                } else {\n                    toast.error(data.message);\n                }\n            }\n        }\n        fetchDetailSales()\n    }, [])\n\n\n    const calculateTotal = () => {\n        if (price > 0 && qty > 0) {\n            amount_item = parseFloat(price) * parseFloat(qty); //amount before tax\n            tax_amount=0;\n            if(default_gst && gst){\n            tax_amount = (parseFloat(amount_item)/100) * parseFloat(gst.value);\n            }\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n\n    calculateFinalPrice()\n\n    const handleSubmitItem = () => {\n        if (quotationNo && currentProduct && currentCustomer && price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                price: price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem)-1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount=0;\n                let taxable_amount=0;\n                new_list_edit.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setAllItems(new_list_edit);\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount=0;\n                new_item_list.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setPrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value: 0,\n                label: 0\n            });\n            perItemAmount = 0;\n            amount_item= 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount=0;\n            amount_after_tax=0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n\n    const finalSubmit = () => {\n        if (quotationNo && quotationDate && currentCustomer && allItems.length > 0 && totalValue){\n            setLoad(true)\n            let header = {\n                quotationNo : quotationNo,\n                quotationDate : quotationDate,\n                currentCustomer : currentCustomer,\n                discountType : discountType,\n                default_gst: default_gst\n            }\n            let final = {\n                totalValue : totalValue,\n                finalAmount : finalAmount,\n                paidAmount : paidAmount,\n                remainAmount : remainAmount,\n                finalDiscountValue : finalDiscountValue,\n                finalDiscountCriteria : finalDiscountCriteria,\n                remarks : remarks,\n                paymentMethod : paymentMethod,\n                discountAmount : discountAmount,\n                taxableAmount : taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array',JSON.stringify(final_array));\n            formData.append('allItems',JSON.stringify(allItems));\n\n            async function submitSales(){\n                const response = await fetch(url + 'updateQuotation/' + id,{\n                    method : 'POST',\n                    headers : {\n                        'Authorization' : user.token\n                    },\n                    body : formData\n                });\n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        toast.success(data.message);\n                        history.push('/quotationReport')\n                    }else{\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitSales()\n        }else{\n            toast.error('Please fill the data with *');\n        }\n    }\n\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setPrice(item.price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    }\n\n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        let total = 0;\n        let discount_amount = 0;\n        let taxable_amount = 0;\n        new_item.map(item => {\n            total = parseFloat(total) + parseFloat(item.total);\n            discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n            taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount)\n        })\n        setDiscountAmount(discount_amount);\n        setTaxableAmount(taxable_amount);\n        setTotalValue(total);\n        setAllItems(new_item);\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Quotation No.<span className='required-label'>*</span></label>\n                            <input readOnly value={quotationNo} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Quotation Date<span className='required-label'>*</span></label>\n                            <input value={quotationDate} onChange={e => setQuotationDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\"/>\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Customer<span className='required-label'>*</span></label>\n                            <Select options={allCustomers} value={currentCustomer} onChange={setCurrentCustomer} />\n                        </div>\n\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Item' && true} onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Bill' && true} onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Both' && true} onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">GST:</label>\n                        <div class=\"d-flex b-0 col-sm-1\">\n                        <input readOnly checked={default_gst} type=\"checkbox\" id=\"inputPassword\" />\n                        </div>\n                        </div>\n                    </div>    \n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={setCurrentProduct} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Price<span className='required-label'>*</span></label>\n                            <input value={price} onChange={(e) => setPrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` :null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        {default_gst &&\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                            <Select options={gst_list} value={gst} onChange={setGST} />\n                        </div>}\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                {item.item.label}\n                                            </td>\n                                            <td>{item.price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                    <select value={paymentMethod} onChange={e => setPaymentMethod(e.target.value)} id=\"input-party\" class=\"form-control\" required>\n                                        <option value=\"\">Select payment mode</option>\n                                        <option value=\"cash\">Cash</option>\n                                        <option value=\"bank\">Bank</option>\n                                    </select>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}