{"version":3,"sources":["components/InventoryAdjustModal.js","screens/Reports/InventoryReport.js"],"names":["InventoryAdjustModal","props","header","Label","showModal","setShowModal","adjustAmount","setAdjustAmount","submitAdjust","className","show","onClose","closeButton","htmlFor","type","value","onChange","e","target","onClick","Index","React","useState","id","setId","useContext","userContext","user","setLoad","inventoryList","setInventoryList","total","setTotal","allWarehouses","setAllWarehouses","currentWarehouse","setCurrentWarehouse","allProducts","setAllProducts","currentProduct","setCurrentProduct","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","warehouse_list","map","item","label","name","toast","error","message","product_list","product_id","product_name","list","index","warehouse_name","sale_unit_price","total_qty","parseInt","total_records","fetchWarehouse","fetchProd","fetchData","columns","key","text","sortable","width","cell","record","style","cursor","showModalFunc","class","query","handleChange","string","page_number","page_size","filter_value","sort_order","sort","JSON","stringify","adjutAmount","formData","FormData","body","respone","append","editData","onSubmit","preventDefault","submit","catch","err","handleSubmit","for","options","config","length_menu","button","excel","print","extra","records","total_record","dynamic"],"mappings":"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","file":"static/js/33.5ac6e2e2.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\n\nexport default function InventoryAdjustModal(props) {\n    const { header, Label, showModal, setShowModal, adjustAmount,setAdjustAmount,submitAdjust } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={showModal}\n                onClose={setShowModal}\n            >\n                <CModalHeader closeButton>\n                    {header}\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <div className=\"row\">\n\n                        <div className=\"col-12\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">{Label}</label>\n                                <input type=\"text\" value={adjustAmount} onChange={e => setAdjustAmount(e.target.value)} className='form-control' />\n                            </div>\n                        </div>\n                        \n                    </div>\n                    <button type='submit' onClick={()=>submitAdjust()} className='col-12 btn btn-secondary mb-5'>Submit</button>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import React,{Fragment} from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport InventoryAdjustModal from 'src/components/InventoryAdjustModal';\n\nexport default function Index() {\n  const [id, setId] = React.useState(null);\n  const [showModal, setShowModal] = React.useState(false)\n  const { user,setLoad } = React.useContext(userContext);\n  const [inventoryList, setInventoryList] = React.useState([]);\n  const [adjustAmount,setAdjustAmount] = React.useState(0);\n  const [total,setTotal] = React.useState(0); \n  const [allWarehouses, setAllWarehouses] = React.useState([]);\n  const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n  const [allProducts,setAllProducts] = React.useState([]);\n  const [currentProduct, setCurrentProduct] = React.useState('');\n\nconst showModalFunc = (id) => {\n    setId(id);\n    setShowModal(true);\n}\n\nconst submitAdjust = () => {\n    setLoad(true)\n    const formData = new FormData();\n    formData.append('new_qty',adjustAmount);\n    async function editData(){\n        \n        const respone = await fetch(url + 'updateInventory/' + id,{\n            method : 'POST',\n            headers : {\n                'Authorization' : user.token,\n            },\n            body : formData\n        })\n\n        if (respone.ok === true){\n            const data = await respone.json();\n            setLoad(false)\n            if (data.status === 200){\n                setId('');\n                setAdjustAmount('');\n                setShowModal(false);\n                async function fetchData() {\n                    const response = await fetch(url + 'fetchInventoryReport', {\n                        method: 'GET',\n                        headers: {\n                            'Authorization': user?.token\n                        }\n                    })\n        \n                    if (response.ok === true) {\n                        const data = await response.json();\n        \n                        if (data.status === 200) {\n                            setInventoryList(data.list.map((item, index) => {\n                                return {\n                                  '#': index + 1,\n                                  'id': item.id,\n                                  'product_name': item.product_name,\n                                  'warehouse_name': item.warehouse_name,\n                                  'sale_unit_price': item.sale_unit_price,\n                                  'total_qty': item.total_qty,\n                                }\n                              }));\n                              setTotal(parseInt(data.total_records));\n                        } else {\n                            toast.error(data.message);\n                        }\n                    }\n                }\n                fetchData();\n            }else{\n                toast.error(data.message)\n            }\n        }\n    }\n    editData();\n}\n\nfunction handleSubmit(e){\n   e.preventDefault(); \n   let string=\"\";\n    if(currentWarehouse && currentProduct){\n       string=`product=${currentProduct.label}&warehouse=${currentWarehouse.label}`;\n    }\n    else if(currentWarehouse){\n       string=`warehouse=${currentWarehouse.label}`; \n    }\n    else if(currentProduct){\n        string=`product=${currentProduct.label}`;\n    }    \n      setLoad(true);\n      async function submit(){\n          const response = await fetch(url + `fetchInventoryReport?${string}`,{\n              method : 'GET',\n              headers : {\n                  'Authorization' : user?.token\n              }\n          });\n           \n          if (response.ok === true){\n              const data = await response.json();\n              setLoad(false);\n              if (data.status === 200){\n                setInventoryList(data.list.map((item, index) => {\n                  return {\n                    '#': index + 1,\n                    'id': item.id,\n                    'product_name': item.product_name,\n                    'warehouse_name': item.warehouse_name,\n                    'sale_unit_price': item.sale_unit_price,\n                    'total_qty': item.total_qty,\n                  }\n                }));\n                setTotal(parseInt(data.total_records));\n              }else{\n                  toast.error(data.message)\n              }\n          }else{\n              toast.error('Oops something went wrong!')\n          }\n      }\n      submit().catch(err=>toast.error('Internal server error!. Please try again later'))\n }\n\n  React.useEffect(() => {\n    setLoad(true)\n\n    async function fetchWarehouse() {\n      setLoad(true);\n      const response = await fetch(url + 'warehouselist', {\n          method: 'GET',\n          headers: {\n              'Authorization': user?.token\n          }\n      })\n\n      if (response.ok === true) {\n          const data = await response.json();\n          setLoad(false)\n          if (data.status === 200) {\n              setAllWarehouses(data?.warehouse_list.map(item => {\n                  return {\n                      value: item.id,\n                      label: item.name\n                  }\n              }))\n          } else {\n              toast.error(data.message)\n          }\n        }\n      }\n    fetchWarehouse();\n\n    async function fetchProd() {\n      setLoad(true);\n      const response = await fetch(url + 'fetchInventoryProducts', {\n          method: 'GET',\n          headers: {\n              'Authorization': user?.token\n          }\n      })\n\n      if (response.ok === true) {\n          const data = await response.json();\n          setLoad(false)\n          if (data.status === 200) {\n              setAllProducts(data?.product_list?.map(item=>{\n                  return {\n                      value : item.product_id,\n                      label : item.product_name,\n                  }\n              }))\n          } else {\n              toast.error(data.message)\n          }\n        }\n      }\n      fetchProd();\n\n    async function fetchData() {\n      const response = await fetch(url + 'fetchInventoryReport', {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n      if(response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n            setInventoryList(data.list.map((item, index) => {\n                return {\n                  '#': index + 1,\n                  'id': item.id,\n                  'product_name': item.product_name,\n                  'warehouse_name': item.warehouse_name,\n                  'sale_unit_price': item.sale_unit_price,\n                  'total_qty': item.total_qty,\n                }\n              }));\n              setTotal(parseInt(data.total_records));\n        }\n      }\n    }\n    fetchData();\n  }, [])\n  \n  const columns = [\n    {\n        key: \"#\",\n        text: \"#\",\n        className: \"#\",\n        sortable: false,\n    },\n    {\n        key: \"product_name\",\n        text: \"Product\",\n        className: \"product_name\",\n        sortable: true\n    },\n    {\n        key: \"warehouse_name\",\n        text: \"Warehouse\",\n        className: \"warehouse_name\",\n        sortable: true\n    },\n    {\n        key: \"sale_unit_price\",\n        text: \"Price\",\n        className: \"sale_unit_price\",\n        sortable: true\n    },\n    {\n        key: \"total_qty\",\n        text: \"Available Qty\",\n        className: \"total_qty\",\n        sortable: true\n    },\n    {\n        key: \"action\",\n        text: \"Action\",\n        className: \"action\",\n        width: 100,\n        sortable: false,\n        cell: record => { \n            return (\n                <Fragment>     \n                    <i style={{cursor:'pointer'}} \n                       onClick={()=>showModalFunc(record.id)} \n                       class=\"fa fa-pencil mr-1\" aria-hidden=\"true\">\n                    </i>\n                </Fragment>\n            );\n        }\n    }\n];\n\nconst config = {\n    page_size: 10,\n    length_menu: [ 10, 20, 50 ],\n    button: {\n        excel: false,\n        print: false,\n        extra: false,\n    }\n}\n  async function fetchData(query) {\n    setLoad(true);\n    const response = await fetch(url + query, {\n        method: 'GET',\n        headers: {\n            'Authorization': user?.token\n        }\n    })\n    if (response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n          setInventoryList(data.list.map((item, index) => {\n            return {\n              '#': index + 1,\n              'id': item.id,\n              'product_name': item.product_name,\n              'warehouse_name': item.warehouse_name,\n              'sale_unit_price': item.sale_unit_price,\n              'total_qty': item.total_qty,\n            }\n          }));\n          setTotal(parseInt(data.total_records));\n        } else {\n            toast.error(data.message);\n        }\n    }\n}\nconst handleChange=(e)=>{\n    let string=\"\";\n    \n    if(currentWarehouse && currentProduct){\n       string=`&product=${currentProduct.label}&warehouse=${currentWarehouse.label}`;\n    }\n    else if(currentWarehouse){\n       string=`&warehouse=${currentWarehouse.label}`; \n    }\n    else if(currentProduct){\n        string=`&product=${currentProduct.label}`;\n    }\n\n  let query=`fetchInventoryReport?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}${string}`;\n  if(e.sort_order){\n      let sort = JSON.stringify(e.sort_order);\n      query=`fetchInventoryReport?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}&sort_order=${sort}${string}`;\n  }\n  fetchData(query);\n}\n\n  return (\n    <section>\n      <ToastContainer />\n      <InventoryAdjustModal header=\"Adjust Inventory\" Label = \"New Quantity\" showModal={showModal} setShowModal={setShowModal} adjutAmount={adjustAmount} setAdjustAmount={setAdjustAmount} submitAdjust={submitAdjust} />\n            <form onSubmit={(e)=>handleSubmit(e)}>\n            <div class=\"form-row create-purchase-header\">\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">Warehouse</label>\n            <Select options={allWarehouses} value={currentWarehouse} onChange={setCurrentWarehouse} />\n            </div>\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">Product</label>\n            <Select options={allProducts} value={currentProduct} onChange={setCurrentProduct} />\n            </div>\n            <div class=\"form-group col-md-3\">\n            <button type=\"Submit\" class=\"font-weight-bold my-4 py-2 px-4 btn btn-success\">Filter</button>\n            </div>\n            </div>\n            </form>\n      <ReactDatatable\n          config={config}\n          records={inventoryList}\n          columns={columns}\n          total_record={total}\n          onChange={(e)=>handleChange(e)}\n          dynamic={true}\n        />\n    </section>\n  )\n}"],"sourceRoot":""}