{"version":3,"sources":["screens/Warehouse/create.js"],"names":["Create","React","useContext","userContext","user","setLoad","useState","name","setName","address","setAddress","className","onSubmit","e","a","formData","FormData","append","fetch","url","method","headers","token","body","response","ok","json","data","status","toast","success","message","error","preventDefault","submitData","handleSubmit","class","for","required","value","onChange","target","type","id","rows","onClick","window","location","reload"],"mappings":"uTAKe,SAASA,IACpB,MAAyBC,IAAMC,WAAWC,KAAlCC,EAAR,EAAQA,KAAKC,EAAb,EAAaA,QACb,EAAwBJ,IAAMK,SAAS,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BP,IAAMK,SAAS,IAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KAkCA,OACI,sBAAKC,UAAU,qCAAf,UACI,cAAC,IAAD,IACA,uBAAMC,SAAU,SAAAC,GAAC,OAnCJ,SAAAA,GAAK,4CAItB,gCAAAC,EAAA,6DACUC,EAAW,IAAIC,UACZC,OAAO,OAAQV,GACxBQ,EAASE,OAAO,UAAWR,GAH/B,SAK2BS,MAAMC,IAAM,kBAAmB,CAClDC,OAAQ,OACRC,QAAS,CACL,qBAAiBjB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMkB,OAE3BC,KAAMR,IAVd,WAawB,KARdS,EALV,QAaiBC,GAbjB,iCAc2BD,EAASE,OAdpC,OAccC,EAdd,OAeQtB,GAAQ,GACY,MAAhBsB,EAAKC,QACLC,IAAMC,QAAQH,EAAKI,SACnBvB,EAAQ,IACRE,EAAW,KAEXmB,IAAMG,MAAML,EAAKI,SArB7B,6CAJsB,sBACtB1B,GAAQ,GACRQ,EAAEoB,iBAFoB,mCA6BtBC,GAMyBC,CAAatB,IAAlC,UACI,sBAAKF,UAAU,2BAAf,UACI,sBAAKyB,MAAM,iBAAX,UACI,wBAAOC,IAAI,gBAAgBD,MAAM,0BAAjC,kBAAgE,sBAAMzB,UAAU,iBAAhB,kBAChE,qBAAKyB,MAAM,yCAAX,SACI,uBAAOE,UAAQ,EAACC,MAAOhC,EAAMiC,SAAU,SAAA3B,GAAC,OAAIL,EAAQK,EAAE4B,OAAOF,QAAQG,KAAK,OAAON,MAAM,eAAeO,GAAG,uBAGjH,sBAAKP,MAAM,iBAAX,UACI,uBAAOA,MAAM,0BAA0BC,IAAI,8BAA3C,sBACA,qBAAKD,MAAM,yCAAX,SACI,0BAAUG,MAAO9B,EAAS+B,SAAU,SAAA3B,GAAC,OAAIH,EAAWG,EAAE4B,OAAOF,QAAQH,MAAM,eAAeO,GAAG,8BAA8BC,KAAK,cAI5I,sBAAKR,MAAM,qDAAX,UACI,yBAAQS,QAAS,kBAAMC,OAAOC,SAASC,UAAUN,KAAK,SAASN,MAAM,gDAArE,mBAA2H,mBACvHA,MAAM,mBAAmB,cAAY,YACzC,yBAAQM,KAAK,SAASN,MAAM,iDAA5B,iBAAiF,mBAC7EA,MAAM,sBAAsB,cAAY","file":"static/js/93.dbd0a7f0.chunk.js","sourcesContent":["import React from 'react'\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport { url } from 'src/helpers/helpers';\n\nexport default function Create() {\n    const { user,setLoad } = React.useContext(userContext);\n    const [name, setName] = React.useState('');\n    const [address, setAddress] = React.useState('');\n    \n    const handleSubmit = e => {\n        setLoad(true)\n        e.preventDefault();\n\n        async function submitData() {\n            const formData = new FormData();\n            formData.append('name', name);\n            formData.append('address', address);\n    \n            const response = await fetch(url + 'createwarehouse', {\n                method: 'POST',\n                headers: {\n                    'Authorization': user?.token\n                },\n                body: formData\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    toast.success(data.message);\n                    setName('');\n                    setAddress('');\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        submitData();\n    }\n\n    return (\n        <div className=\"container create-page-main-section\">\n            <ToastContainer />\n            <form onSubmit={e => handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Name:<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={name} onChange={e => setName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-2 col-form-label\" for=\"exampleFormControlTextarea1\">Address:</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <textarea value={address} onChange={e => setAddress(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button onClick={() => window.location.reload()} type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}