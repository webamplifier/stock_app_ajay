{"version":3,"sources":["components/CustomModal.js","screens/Warehouse/index.js"],"names":["CustomModal","props","modal","setModal","deleteEntry","className","show","onClose","closeButton","onClick","color","Index","React","useState","id","setId","useContext","userContext","user","setLoad","warehouseList","setWarehouseList","total","setTotal","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","list","map","item","index","name","address","parseInt","total_records","fetchData","columns","key","text","sortable","width","cell","record","to","style","marginRight","cursor","showModal","class","value","query","toast","error","message","handleChange","e","page_number","page_size","filter_value","sort_order","sort","JSON","stringify","deleteData","config","length_menu","button","excel","print","extra","records","total_record","onChange","dynamic"],"mappings":"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","file":"static/js/32.5a90deac.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\nexport default function CustomModal(props) {\n    const { modal, setModal, deleteEntry } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={modal}\n                onClose={setModal}\n            >\n                <CModalHeader closeButton>\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <p> Are you sure you want to delete this record ?</p>\n                    <div className='btn-div-modal-group delete_modal_Btns'>\n                        <button onClick={() => deleteEntry()} className='delete_modal_yes_Btn'>Yes, Approve</button>\n                        <button className='btn btn-primary delete_modal_cancel_Btn' color=\"secondary\" onClick={() => setModal(false)}>Cancel</button>\n                    </div>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import React,{Fragment} from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport { Link } from 'react-router-dom';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport CustomModal from 'src/components/CustomModal';\n\nexport default function Index() {\n  const [id, setId] = React.useState(null);\n  const [modal, setModal] = React.useState(false)\n  const { user,setLoad } = React.useContext(userContext);\n  const [warehouseList, setWarehouseList] = React.useState([]);\n  const [total,setTotal] = React.useState(0); \n\n  \n  React.useEffect(() => {\n    setLoad(true)\n    async function fetchData() {\n      const response = await fetch(url + 'fetchWarehouseList', {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n      if(response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n          setWarehouseList(data.list.map((item, index) => {\n            return {\n              '#': index + 1,\n              'id': item.id,\n              'name': item.name,\n              'address': item.address,\n            }\n          }));\n          setTotal(parseInt(data.total_records));\n        }\n      }\n    }\n    fetchData();\n  }, [])\n\n  const deleteEntry = () => {\n    setLoad(true)\n    async function deleteData() {\n      const response = await fetch(url + 'deletewarehouse/' + id, {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n\n      const data = await response.json();\n      setLoad(false)\n      if (data.status === 200) {\n        setModal(false);\n        setId('');\n        async function fetchData() {\n          const response = await fetch(url + 'fetchWarehouseList', {\n            method: 'GET',\n            headers: {\n              'Authorization': user?.token\n            }\n          })\n    \n          if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                setWarehouseList(data.list.map((item, index) => {\n                    return {\n                      '#': index + 1,\n                      'id': item.id,\n                      'name': item.name,\n                      'address': item.address,\n                    }\n                  }));\n                  setTotal(parseInt(data.total_records));\n            }\n          }\n        }\n        fetchData();\n\n      } else {\n        toast.error(data.message)\n      }\n    }\n    deleteData();\n  }\n  \n  const columns = [\n    {\n        key: \"#\",\n        text: \"#\",\n        className: \"#\",\n        sortable: false,\n    },\n    {\n        key: \"name\",\n        text: \"Warehouse Name\",\n        className: \"name\",\n        sortable: true\n    },\n    {\n        key: \"address\",\n        text: \"Address\",\n        className: \"address\",\n        sortable: true\n    },\n    {\n        key: \"action\",\n        text: \"Action\",\n        className: \"action\",\n        width: 100,\n        sortable: false,\n        cell: record => { \n            return (\n                <Fragment>\n                    <Link\n                        to={`/edit/warehouse/${record.id}`} \n                        style={{marginRight: '5px'}}>    \n                        <i className=\"fa fa-pencil mr-1\"></i>\n                    </Link>\n                    <i \n                    style={{ cursor: \"pointer\" }} \n                    onClick={() => showModal(record.id)} \n                    class=\"fa fa-trash\" \n                    aria-hidden=\"true\">   \n                    </i>\n                </Fragment>\n            );\n        }\n    }\n];\n\nconst config = {\n    page_size: 10,\n    length_menu: [ 10, 20, 50 ],\n    button: {\n        excel: false,\n        print: false,\n        extra: false,\n    }\n}\n  const showModal = value => {\n    setId(value);\n    setModal(true)\n  }\n  async function fetchData(query) {\n    setLoad(true);\n    const response = await fetch(url + query, {\n        method: 'GET',\n        headers: {\n            'Authorization': user?.token\n        }\n    })\n    if (response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n            setWarehouseList(data.list.map((item, index) => {\n                return {\n                  '#': index + 1,\n                  'id': item.id,\n                  'name': item.name,\n                  'address': item.address,\n                }\n              }));\n              setTotal(parseInt(data.total_records));\n        } else {\n            toast.error(data.message);\n        }\n    }\n}\nconst handleChange=(e)=>{\n  let query=`fetchWarehouseList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}`;\n  if(e.sort_order){\n      let sort = JSON.stringify(e.sort_order);\n      query=`fetchWarehouseList?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}&sort_order=${sort}`;\n  }\n  fetchData(query);\n}\n\n  return (\n    <section>\n      <ToastContainer />\n      <CustomModal modal={modal} setModal={setModal} deleteEntry={deleteEntry} />\n      <Link className='btn btn-primary float-right' to='/create/warehouse'>Create Warehouse</Link>\n      <ReactDatatable\n          config={config}\n          records={warehouseList}\n          columns={columns}\n          total_record={total}\n          onChange={(e)=>handleChange(e)}\n          dynamic={true}\n        />\n    </section>\n  )\n}"],"sourceRoot":""}