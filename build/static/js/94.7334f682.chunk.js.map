{"version":3,"sources":["screens/Warehouse/edit.js"],"names":["Edit","id","useParams","React","useContext","userContext","user","setLoad","useState","name","setName","address","setAddress","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","warehouse_detail","fetchData","className","onSubmit","e","formData","FormData","append","body","status","window","location","origin","toast","error","message","preventDefault","submitData","handleSubmit","class","for","required","value","onChange","target","type","rows","onClick","reload"],"mappings":"+TAMe,SAASA,IACpB,IAAQC,EAAOC,cAAPD,GACR,EAAyBE,IAAMC,WAAWC,KAAlCC,EAAR,EAAQA,KAAKC,EAAb,EAAaA,QACb,EAAwBJ,IAAMK,SAAS,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BP,IAAMK,SAAS,IAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KAsDA,OArBAT,IAAMU,WAAU,WAAM,4CAElB,gCAAAC,EAAA,sEAC2BC,MAAMC,IAAM,iBAAmBf,EAAI,CACtDgB,OAAQ,MACRC,QAAS,CACL,cAAiBZ,EAAKa,SAJlC,WAQwB,KAPdC,EADV,QAQiBC,GARjB,iCAS2BD,EAASE,OATpC,OAScC,EATd,OAUQhB,GAAQ,GACFiB,EAAmBD,EAAKC,iBAC9Bd,EAAQc,EAAiBf,MACzBG,EAAWY,EAAiBb,SAbpC,6CAFkB,sBAClBJ,GAAQ,GADU,mCAkBlBkB,KACD,CAACxB,IAGA,sBAAKyB,UAAU,qCAAf,UACI,cAAC,IAAD,IACA,uBAAMC,SAAU,SAAAC,GAAC,OAvDJ,SAAAA,GAAK,4CAGtB,gCAAAd,EAAA,6DACUe,EAAW,IAAIC,UACZC,OAAO,OAAQtB,GACxBoB,EAASE,OAAO,UAAWpB,GAH/B,SAK2BI,MAAMC,IAAM,mBAAqBf,EAAI,CACxDgB,OAAQ,OACRC,QAAS,CACL,qBAAiBZ,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMa,OAE3Ba,KAAMH,IAVd,WAawB,KARdT,EALV,QAaiBC,GAbjB,iCAc2BD,EAASE,OAdpC,UAccC,EAdd,OAeQhB,GAAQ,GACY,MAAhBgB,EAAKU,OAhBjB,0CAiBmBC,OAAOC,SAAWD,OAAOC,SAASC,OAAS,oBAjB9D,QAmBYC,IAAMC,MAAMf,EAAKgB,SAnB7B,6CAHsB,sBACtBhC,GAAQ,GACRqB,EAAEY,iBAFoB,mCA0BtBC,GA6ByBC,CAAad,IAAlC,UACI,sBAAKF,UAAU,2BAAf,UACI,sBAAKiB,MAAM,iBAAX,UACI,wBAAOC,IAAI,gBAAgBD,MAAM,0BAAjC,kBAAgE,sBAAMjB,UAAU,iBAAhB,kBAChE,qBAAKiB,MAAM,yCAAX,SACI,uBAAOE,UAAQ,EAACC,MAAOrC,EAAMsC,SAAU,SAAAnB,GAAC,OAAIlB,EAAQkB,EAAEoB,OAAOF,QAAQG,KAAK,OAAON,MAAM,eAAe1C,GAAG,uBAGjH,sBAAK0C,MAAM,iBAAX,UACI,uBAAOA,MAAM,0BAA0BC,IAAI,8BAA3C,sBACA,qBAAKD,MAAM,yCAAX,SACI,0BAAUG,MAAOnC,EAASoC,SAAU,SAAAnB,GAAC,OAAIhB,EAAWgB,EAAEoB,OAAOF,QAAQH,MAAM,eAAe1C,GAAG,8BAA8BiD,KAAK,cAI5I,sBAAKP,MAAM,qDAAX,UACI,yBAAQQ,QAAS,kBAAMjB,OAAOC,SAASiB,UAAUH,KAAK,SAASN,MAAM,gDAArE,mBAA2H,mBACvHA,MAAM,mBAAmB,cAAY,YACzC,yBAAQM,KAAK,SAASN,MAAM,iDAA5B,iBAAiF,mBAC7EA,MAAM,sBAAsB,cAAY","file":"static/js/94.7334f682.chunk.js","sourcesContent":["import React from 'react'\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport { url } from 'src/helpers/helpers';\nimport { useParams } from 'react-router-dom'\n\nexport default function Edit() {\n    const { id } = useParams();\n    const { user,setLoad } = React.useContext(userContext);\n    const [name, setName] = React.useState('');\n    const [address, setAddress] = React.useState('');\n\n    const handleSubmit = e => {\n        setLoad(true)\n        e.preventDefault();\n        async function submitData() {\n            const formData = new FormData();\n            formData.append('name', name);     \n            formData.append('address', address);\n            \n            const response = await fetch(url + 'updatewarehouse/' + id, {\n                method: 'POST',\n                headers: {\n                    'Authorization': user?.token\n                },\n                body: formData\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    return window.location = window.location.origin + '/#/warehouseList'\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        submitData();\n\n\n    }\n\n    React.useEffect(() => {\n        setLoad(true)\n        async function fetchData() {\n            const response = await fetch(url + 'warehouseById/' + id, {\n                method: 'GET',\n                headers: {\n                    'Authorization': user.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                const warehouse_detail = data.warehouse_detail;\n                setName(warehouse_detail.name);\n                setAddress(warehouse_detail.address);\n            }\n        }\n        fetchData();\n    }, [id])\n\n    return (\n        <div className=\"container create-page-main-section\">\n            <ToastContainer />\n            <form onSubmit={e => handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Name:<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={name} onChange={e => setName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-2 col-form-label\" for=\"exampleFormControlTextarea1\">Address:</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <textarea value={address} onChange={e => setAddress(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button onClick={() => window.location.reload()} type=\"button\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}