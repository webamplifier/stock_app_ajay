{"version":3,"sources":["screens/Reports/DetailCustomerReport.js"],"names":["DetailCustomerReport","React","useContext","userContext","user","setLoad","useState","customerDetailList","setCustomerDetailList","Date","from_Date","setFromDate","to_Date","setToDate","currentCustomer","setCurrentCustomer","totalAmount","settotalAmount","dueAmount","setDueAmount","paymentlist","setPaymentList","allCustomers","setAllCustomers","index","index1","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","client_list","map","item","value","id","label","name","normal","star","vinyl","one_way","backlit","premium","card12_18","card_12_18","sticker12_18","sticker_12_18","due_amount","toast","error","message","fetchCustomers","class","for","className","onChange","e","target","type","required","options","onClick","submit","body","formData","parseFloat","total_amount","toFixed","customer_detail","console","log","payment_list","FormData","append","JSON","stringify","catch","err","handleSubmit","html","document","getElementById","innerHTML","myWindow","window","open","write","close","onload","focus","print","exportPDF","scope","formatDate","sale_date","split","sale_items","item1","item_name","material_name","width","height","sqFt","sale_price","qty","total","length","date","amount"],"mappings":"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","file":"static/js/90.534d86e0.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { userContext } from '../../context/UserContext';\nimport { formatDate } from '../../helpers/helpers';\nexport default function DetailCustomerReport() {\n\n    const { user, setLoad } = React.useContext(userContext);\n    const [customerDetailList, setCustomerDetailList] = React.useState([]);\n    const [from_Date, setFromDate] = React.useState(new Date());\n    const [to_Date, setToDate] = React.useState(new Date());\n    const [currentCustomer, setCurrentCustomer] = React.useState('');\n    const [totalAmount, settotalAmount] = React.useState(0);\n    const [dueAmount, setDueAmount] = React.useState(0);\n    const [paymentlist, setPaymentList] = React.useState([]);\n    const [allCustomers, setAllCustomers] = React.useState([]);\n    let index = 0;\n    let index1 = 0;\n    React.useEffect(() => {\n        setLoad(true)\n        async function fetchCustomers() {\n            const response = await fetch(url + 'clientlist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllCustomers(data?.client_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name,\n                            normal: item.normal,\n                            star: item.star,\n                            vinyl: item.vinyl,\n                            one_way: item.one_way,\n                            backlit: item.backlit,\n                            premium: item.premium,\n                            card12_18: item.card_12_18,\n                            sticker12_18: item.sticker_12_18,\n                            due_amount: item.due_amount\n                        }\n                    }))\n                }\n                else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchCustomers();\n    }, [])\n\n    function handleSubmit() {\n        if (to_Date && from_Date && currentCustomer) {\n            setLoad(true)\n            const formData = new FormData();\n            formData.append('to', to_Date);\n            formData.append('from', from_Date);\n            formData.append('customer', JSON.stringify(currentCustomer));\n            async function submit() {\n                const response = await fetch(url + 'detailCustomerReport', {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': user?.token\n                    },\n                    body: formData\n                });\n\n                if (response.ok === true) {\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200) {\n                        settotalAmount(parseFloat(data.total_amount).toFixed(2));\n                        setCustomerDetailList(data.customer_detail);\n                        setDueAmount(data.due_amount);\n                        console.log(data.payment_list);\n                        setPaymentList(data.payment_list);\n                    } else {\n                        toast.error(data.message)\n                    }\n                } else {\n                    toast.error('Oops something went wrong!')\n                }\n            }\n\n            submit().catch(err => toast.error('Internal server error!. Please try again later'))\n        } else {\n            toast.error('Please fill the to and from date')\n        }\n    }\n\n    function exportPDF() {\n        const html = document.getElementById('export-table').innerHTML;\n        var myWindow = window.open('', 'Receipt');\n        myWindow.document.write('<html><head><title>Receipt</title>');\n        myWindow.document.write('<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\" integrity=\"sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn\" crossorigin=\"anonymous\">')\n        myWindow.document.write(\"</head><body>\");\n        myWindow.document.write(html);\n        myWindow.document.write('</body></html>');\n        myWindow.document.close();\n\n        myWindow.onload = function () {\n            myWindow.focus();\n            myWindow.print();\n        }\n    }\n\n    return (\n        <section>\n            <ToastContainer />\n            <div class=\"d-flex\">\n                <form class=\"col-md-10 m-0 p-0\">\n                    <div class=\"form-row m-0 p-0 create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"date\">From<span className='required-label'>*</span></label>\n                            <input value={from_Date} onChange={e => setFromDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"date\">To<span className='required-label'>*</span></label>\n                            <input value={to_Date} onChange={e => setToDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"input-customer\">Customer<span className='required-label'>*</span></label>\n                            <Select options={allCustomers} value={currentCustomer} onChange={setCurrentCustomer} />\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <button type=\"button\" class=\"font-weight-bold my-4 py-2 px-4 btn btn-success\" onClick={() => handleSubmit()}>Submit</button>\n                        </div>\n                    </div>\n                </form>\n                <div class=\"col-md-2\">\n                    <button onClick={() => exportPDF()} class=\"font-weight-bold my-4 px-3 py-2 btn btn-success\">Export as PDF</button>\n                </div>\n            </div>\n            {/* table code */}\n            <div id=\"export-table\">\n                <h6 className='text-center font-weight-bold'>{currentCustomer?.label}</h6>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Item</th>\n                            <th scope=\"col\">Width</th>\n                            <th scope=\"col\">Height</th>\n                            <th scope=\"col\">Sq.Ft</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Qty</th>\n                            <th scope=\"col\">Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {customerDetailList.map((item) => {\n                            return (\n                                <tr>\n                                    <th scope=\"row\">{++index}</th>\n                                    <td>{formatDate(item.sale_date.split(' ')[0])}</td>\n                                    <td>\n                                        {item.sale_items.map((item1) => {\n                                            return (\n                                                <p>{item1.item_name} ({item1.material_name})</p>\n                                            )\n                                        })}\n                                    </td>\n                                    <td>\n                                        {item.sale_items.map((item1) => {\n                                            return (\n                                                <p>{item1.width}</p>\n                                            )\n                                        })}\n                                    </td>\n                                    <td>\n                                        {item.sale_items.map((item1) => {\n                                            return (\n                                                <p>{item1.height}</p>\n                                            )\n                                        })}\n                                    </td>\n                                    <td>\n                                        {item.sale_items.map((item1) => {\n                                            return (\n                                                <p>{item1.sqFt}</p>\n                                            )\n                                        })}\n                                    </td>\n                                    <td>\n                                        {item.sale_items.map((item1) => {\n                                            return (\n                                                <p>{item1.sale_price}</p>\n                                            )\n                                        })}\n                                    </td>\n                                    <td>\n                                        {item.sale_items.map((item1) => {\n                                            return (\n                                                <p>{item1.qty}</p>\n                                            )\n                                        })}\n                                    </td>\n                                    <td>\n                                        {item.sale_items.map((item1) => {\n                                            return (\n                                                <p>{parseFloat(item1.total).toFixed(2)}</p>\n                                            )\n                                        })}\n                                    </td>\n                                </tr>\n                            )\n                        }\n                        )}\n                    </tbody>\n                </table>\n                {paymentlist.length > 0 && (\n                    <>\n                        <h6 className='text-center font-weight-bold'>Payment Recieved</h6>\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Reciept Number</th>\n                                    <th scope=\"col\">Date</th>\n                                    <th scope=\"col\">Amount</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {paymentlist.map((item) => {\n                                    return (\n                                        <tr>\n                                            <th scope=\"row\">{++index1}</th>\n                                            <td>{item.id}</td>\n                                            <td>{formatDate(item.date.split(' ')[0])}</td>\n                                            <td>{item.amount}</td>\n                                        </tr>\n                                    )\n                                }\n                                )}\n                            </tbody>\n                        </table>\n                    </>\n                )}\n                <hr />\n                <h6 className='float-right mr-3'>Total Amount :- {parseFloat(totalAmount).toFixed(2)}</h6>\n                <h6 className='float-right mr-3'>Due Amount :- {parseFloat(dueAmount).toFixed(2)}</h6>\n            </div>\n        </section >\n    )\n}"],"sourceRoot":""}