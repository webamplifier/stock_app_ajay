{"version":3,"sources":["assets/images_manual/add.svg","screens/Purchase Entry/Purchase Return/edit.js"],"names":["Edit","id","useParams","history","useHistory","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","purchaseReturnDate","setPurchaseReturnDate","currentParty","setCurrentParty","currentWarehouse","setCurrentWarehouse","discountType","setDiscountType","discountValue","setDiscountValue","currentDiscountCriteria","setCurrentDiscountCriteria","currentProduct","setCurrentProduct","label","currentPaymentMethod","setCurrentPaymentMethod","finalDiscountValue","setFinalDiscountValue","finalDiscountCriteria","setFinalDiscountCriteria","purchase_return_price","setPurchaseReturnPrice","value","gst","setGST","qty","setQty","gst_list","setGSTList","remarks","setRemarks","allParty","setAllParty","allWarehouses","setAllWarehouses","allPaymentMethods","setAllPaymentMethods","allItems","setAllItems","allProducts","setAllProducts","finalAmount","remainAmount","discount_amount_final","amount_after_discount_final","paidAmount","setPaidAmount","totalValue","setTotalValue","discountAmount","setDiscountAmount","taxAmount","setTaxableAmount","currentEditItem","setCurrentEditItem","perItemAmount","tax_amount","amount_item","amount_before_discount","amount_after_discount","amount_after_tax","discount_amount","fetchProd","e","a","fetch","url","method","headers","token","response","ok","json","data","status","products","inventory_list","map","item","push","product_id","product_name","type","price","sale_unit_price","unit","product_unit","hsbn","product_hsbn","serial_no","product_serial_no","product_list","name","toast","error","message","useEffect","party_list","warehouse_list","payment_methods","header","purchase_return_header","final_discount_criteria","final_discount_value","parseFloat","bill_discount_percentage","bill_discount_amount","items","purchase_return_items","invoice_number","purchase_return_date","party_id","party_name","warehouse_id","warehouse_name","discount_type","midItems","i","length","current_item","discount_value","discount_percent","obj","product_type","item_id","tax_percent","total","current_total_fetch","taxable_amount","amount_paid","payment_type","fetchDataParty","fetchGSTList","fetchWarehouse","fetchPaymentMethods","fetchDetailPurchaseReturn","className","class","for","readOnly","options","onChange","target","checked","onClick","handleProduct","htmlFor","required","new_item_dict","new_list_edit","index","parseInt","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","scope","index_value","handleEdit","new_item","handleDelete","rows","window","location","reload","submitPurchase","body","formData","success","final","paymentMethod","taxableAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"6KAAe,QAA0B,iC,8MCQ1B,SAASA,IACpB,IAAMC,EAAOC,cAAPD,GACAE,EAAUC,cAChB,EAAyBC,IAAMC,WAAWC,KAAlCC,EAAR,EAAQA,KAAKC,EAAb,EAAaA,QACb,EAAkCJ,IAAMK,SAAS,IAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoDP,IAAMK,SAAS,IAAnE,mBAAOG,EAAP,KAA2BC,EAA3B,KACA,EAAwCT,IAAMK,SAAS,IAAvD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgDX,IAAMK,SAAS,IAA/D,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAAwCb,IAAMK,SAAS,QAAvD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA0Cf,IAAMK,SAAS,GAAzD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA8DjB,IAAMK,SAAS,WAA7E,mBAAOa,EAAP,KAAgCC,EAAhC,KACA,EAA4CnB,IAAMK,SAAS,IAA3D,mBAAOe,EAAP,KAAuBC,EAAvB,KACA,EAAwDrB,IAAMK,SAAS,CACnEiB,MAAO,SADX,mBAAOC,EAAP,KAA6BC,EAA7B,KAGA,EAAoDxB,IAAMK,SAAS,GAAnE,oBAAOoB,GAAP,MAA2BC,GAA3B,MACA,GAA0D1B,IAAMK,SAAS,WAAzE,qBAAOsB,GAAP,MAA8BC,GAA9B,MACA,GAAwD5B,IAAMK,SAAS,GAAvE,qBAAOwB,GAAP,MAA8BC,GAA9B,MACA,GAAqB9B,IAAMK,SAAS,CAChC0B,MAAO,EACPT,MAAO,IAFX,qBAAOU,GAAP,MAAWC,GAAX,MAIA,GAAsBjC,IAAMK,SAAS,GAArC,qBAAO6B,GAAP,MAAYC,GAAZ,MACA,GAA8BnC,IAAMK,SAAS,IAA7C,qBAAO+B,GAAP,MAAgBC,GAAhB,MACA,GAA8BrC,IAAMK,SAAS,IAA7C,qBAAOiC,GAAP,MAAgBC,GAAhB,MAEA,GAAgCvC,IAAMK,SAAS,IAA/C,qBAAOmC,GAAP,MAAiBC,GAAjB,MACA,GAA0CzC,IAAMK,SAAS,IAAzD,qBAAOqC,GAAP,MAAsBC,GAAtB,MACA,GAAkD3C,IAAMK,SAAS,IAAjE,qBAAOuC,GAAP,MAA0BC,GAA1B,MACA,GAAgC7C,IAAMK,SAAS,IAA/C,qBAAOyC,GAAP,MAAiBC,GAAjB,MACA,GAAqC/C,IAAMK,SAAS,IAApD,qBAAO2C,GAAP,MAAmBC,GAAnB,MAGIC,GAAc,EACdC,GAAe,EACfC,GAAwB,EAExBC,GAA8B,EAElC,GAAoCrD,IAAMK,SAAS,GAAnD,qBAAOiD,GAAP,MAAmBC,GAAnB,MACA,GAA0CvD,IAAMK,SAAS,QAAzD,qBACA,IADA,YACoCL,IAAMK,SAAS,IAAnD,qBAAOmD,GAAP,MAAmBC,GAAnB,MACA,GAA2CzD,IAAMK,SAAS,GAA1D,qBAAOqD,GAAP,MAAsBC,GAAtB,MACA,GAAqC3D,IAAMK,SAAS,GAApD,qBAAOuD,GAAP,MAAiBC,GAAjB,MAGA,GAA8C7D,IAAMK,SAAS,IAA7D,qBAAOyD,GAAP,MAAwBC,GAAxB,MAGIC,GAAgB,EAChBC,GAAa,EACbC,GAAc,EACdC,GAAyB,EACzBC,GAAwB,EACxBC,GAAiB,EACjBC,GAAkB,EAvDK,SAiQZC,GAjQY,iFAiQ3B,WAAyBC,GAAzB,mBAAAC,EAAA,6DACIrE,GAAQ,GADZ,SAE2BsE,MAAMC,IAAG,kCAA8BH,GAAK,CAC/DI,OAAQ,MACRC,QAAS,CACL,qBAAiB1E,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAM2E,SALnC,WAQwB,KANdC,EAFV,QAQiBC,GARjB,iCAS2BD,EAASE,OATpC,OAScC,EATd,OAUQ9E,GAAQ,GACY,MAAhB8E,EAAKC,QACDC,EAAS,GACVF,EAAKG,gBACNH,EAAKG,eAAeC,KAAI,SAAAC,GACtBH,EAASI,KACN,CAACzD,MAAQwD,EAAKE,WACbnE,MAAQiE,EAAKG,aACbC,KAAO,UACPC,MAAQL,EAAKM,gBACbC,KAAOP,EAAKQ,aACZC,KAAOT,EAAKU,aACZC,UAAYX,EAAKY,uBAItBjB,EAAKkB,cACJlB,EAAKkB,aAAad,KAAI,SAAAC,GACpBH,EAASI,KACN,CAACzD,MAAQwD,EAAK3F,GACb0B,MAAQiE,EAAKc,KACbV,KAAMJ,EAAKI,KACXG,KAAMP,EAAKO,KACXF,MAAOL,EAAKK,MACZI,KAAOT,EAAKS,KACZE,UAAYX,EAAKW,eAI3BjD,GAAemC,IAEfkB,IAAMC,MAAMrB,EAAKsB,SAzC7B,6CAjQ2B,sBAyD3BxG,IAAMyG,WAAU,WAAM,4CAElB,8BAAAhC,EAAA,6DACIrE,GAAQ,GADZ,SAE2BsE,MAAMC,IAAM,YAAa,CAC5CC,OAAQ,MACRC,QAAS,CACL,qBAAiB1E,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAM2E,SALnC,WASwB,KAPdC,EAFV,QASiBC,GATjB,iCAU2BD,EAASE,OAVpC,OAUcC,EAVd,OAWQ9E,GAAQ,GACY,MAAhB8E,EAAKC,OACL1C,GAAW,OAACyC,QAAD,IAACA,OAAD,EAACA,EAAMwB,WAAWpB,KAAI,SAAAC,GAC7B,MAAO,CACHxD,MAAOwD,EAAK3F,GACZ0B,MAAOiE,EAAKc,UAIpBC,IAAMC,MAAMrB,EAAKsB,SApB7B,6CAFkB,kEA4BlB,8BAAA/B,EAAA,6DACIrE,GAAQ,GADZ,SAE2BsE,MAAMC,IAAM,aAAc,CAC7CC,OAAQ,MACRC,QAAS,CACL,qBAAiB1E,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAM2E,SALnC,cAEUC,EAFV,gBAQuBA,EAASE,OARhC,OAQUC,EARV,OASI9E,GAAQ,GACRiC,GAAU,OAAC6C,QAAD,IAACA,OAAD,EAACA,EAAMlD,IAAIsD,KAAI,SAAAC,GACrB,MAAO,CACHxD,MAAOwD,EACPjE,MAAOiE,OAbnB,4CA5BkB,kEA+ClB,8BAAAd,EAAA,6DACIrE,GAAQ,GADZ,SAE2BsE,MAAMC,IAAM,gBAAiB,CAChDC,OAAQ,MACRC,QAAS,CACL,qBAAiB1E,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAM2E,SALnC,WASwB,KAPdC,EAFV,QASiBC,GATjB,iCAU2BD,EAASE,OAVpC,OAUcC,EAVd,OAWQ9E,GAAQ,GACY,MAAhB8E,EAAKC,OACLxC,GAAgB,OAACuC,QAAD,IAACA,OAAD,EAACA,EAAMyB,eAAerB,KAAI,SAAAC,GACtC,MAAO,CACHxD,MAAOwD,EAAK3F,GACZ0B,MAAOiE,EAAKc,UAIpBC,IAAMC,MAAMrB,EAAKsB,SApB7B,6CA/CkB,kEAyElB,8BAAA/B,EAAA,6DACIrE,GAAQ,GADZ,SAE2BsE,MAAMC,IAAM,oBAAqB,CACpDC,OAAQ,MACRC,QAAS,CACL,qBAAiB1E,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAM2E,SALnC,cAEUC,EAFV,gBAQuBA,EAASE,OARhC,OAQUC,EARV,OASI9E,GAAQ,GACRyC,GAAoB,OAACqC,QAAD,IAACA,OAAD,EAACA,EAAM0B,gBAAgBtB,KAAI,SAAAC,GAC3C,MAAO,CACHjE,MAAOiE,OAZnB,4CAzEkB,kEA2FlB,wDAAAd,EAAA,6DACIrE,GAAQ,GADZ,SAE2BsE,MAAMC,IAAM,yBAA2B/E,EAAI,CAC9DiF,QAAS,CACL,cAAiB1E,EAAK2E,SAJlC,WAQwB,KANdC,EAFV,QAQiBC,GARjB,iCAS2BD,EAASE,OATpC,OAWQ,GAFMC,EATd,OAUQ9E,GAAQ,GACY,MAAhB8E,EAAKC,OAAgB,CAyBrB,IAxBI0B,EAAS3B,EAAK4B,uBACdC,EAAwB,GACxBC,EAAuB,EACvBC,WAAWJ,EAAOK,0BAA0B,GAC5CH,EAA0B,UAC1BC,EAAuBH,EAAOK,0BACvBD,WAAWJ,EAAOM,sBAAsB,IAC/CJ,EAA0B,SAC1BC,EAAuBH,EAAOM,sBAE9BC,EAAQlC,EAAKmC,sBACjB9G,EAAasG,EAAOS,gBACpB7G,EAAsBoG,EAAOU,sBAC7B5G,EAAgB,CACZoB,MAAO8E,EAAOW,SACdlG,MAAOuF,EAAOY,aAElB5G,EAAoB,CAChBkB,MAAO8E,EAAOa,aACdpG,MAAOuF,EAAOc,iBAElBpD,GAAUsC,EAAOa,cACjB3G,EAAgB8F,EAAOe,eACnBC,EAAW,GACNC,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,IAC1BE,EAAeZ,EAAMU,GACrBF,EAAgB,GAChBK,EAAiB,EAEjBD,EAAaE,kBAAoBjB,WAAWe,EAAaE,kBAAoB,GAC7EN,EAAgB,UAChBK,EAAiBD,EAAaE,kBACvBF,EAAa1D,kBACpBsD,EAAgB,SAChBK,EAAiBD,EAAa1D,iBAI9B6D,EAAM,CACN5C,KAAM,CACFxD,MAAOiG,EAAavC,WACpBnE,MAAO0G,EAAatC,aACpBC,KAAMqC,EAAaI,aACnBxC,MAAOoC,EAAanG,sBACpBiE,KAAMkC,EAAajC,aACnBC,KAAMgC,EAAa/B,aACnBC,UAAW8B,EAAa7B,mBAE5BkC,QAASL,EAAapI,GACtBiC,sBAAuBmG,EAAanG,sBACpCK,IAAK8F,EAAa9F,IAClB0F,cAAeA,EACf5G,cAAeiH,EACfjG,IAAK,CACDV,MAAO0G,EAAaM,YACpBvG,MAAOiG,EAAaM,aAExBC,MAAOP,EAAaO,MACpBrE,YAAa8D,EAAaO,MAC1BlE,iBAAkB2D,EAAa3D,iBAC/BF,uBAAwB6D,EAAa7D,uBACrCF,WAAY+D,EAAa/D,WACzBK,gBAAiB0D,EAAa1D,gBAC9BF,sBAAuB4D,EAAa5D,sBACpCsD,aAAeM,EAAaN,aAC5BC,eAAiBK,EAAaL,gBAGlCE,EAASrC,KAAK2C,GAElBpF,GAAY8E,GACRW,EAAsB,EACtBlE,EAAkB,EAClBmE,EAAiB,EACrBZ,EAASvC,KAAI,SAAAC,GACTiD,EAAsBvB,WAAWuB,GAAuBvB,WAAW1B,EAAKgD,OACxEjE,EAAkB2C,WAAW3C,GAAmB2C,WAAW1B,EAAKjB,iBAChEmE,EAAiBxB,WAAWwB,GAAiBxB,WAAW1B,EAAKtB,eAEjER,GAAc+E,GACd7E,GAAkBW,GAClBT,GAAiB4E,GACjB/G,GAAsBsF,GACtBpF,GAAyBmF,GACzBxD,GAAcsD,EAAO6B,aACrBlH,EAAwB,CACpBF,MAAOuF,EAAO8B,eAElBpG,GAAWsE,EAAOvE,cAElBgE,IAAMC,MAAMrB,EAAKsB,SAtG7B,6CA3FkB,uBAAC,WAAD,wBA0BlBoC,GA1BkB,mCA6ClBC,GA7CkB,mCAuElBC,GAvEkB,mCAyFlBC,GAzFkB,mCAqMlBC,KACD,IAiDKnH,GAAwB,GAAKK,GAAM,GAAKF,KACxCkC,GAAc+C,WAAWpF,IAAyBoF,WAAW/E,IAC7D+B,GAAcgD,WAAW/C,IAAa,IAAO+C,WAAWjF,GAAID,OAE5DiC,GADAK,GAAmBH,GAAcD,GAGZ,SAAjBnD,GAA4C,SAAjBA,IAC3BqD,GAAyBE,GACO,YAA5BnD,IACAoD,GAAmB2C,WAAW9C,IAA0B,IAAO8C,WAAWjG,GAE1EgD,GADAI,GAAwBD,GAAyBG,IAIrB,WAA5BpD,IACAoD,GAAkB2C,WAAWjG,GAE7BgD,GADAI,GAAwBD,GAAyBG,MAUzDd,GAAa,IACQ,SAAjB1C,GAA4C,SAAjBA,GACG,YAA1Ba,KACAyB,GAAwBI,GAAa,IAAMyD,WAAWxF,IACvB+B,GAC/BH,GAA8BG,GAAaJ,IAGjB,WAA1BzB,KACAyB,GAAwB6D,WAAWxF,IACJ+B,GAC/BH,GAA8BG,GAAaJ,IAG/CD,IADAD,GAAcG,IACe4D,WAAW3D,KAGxCH,IADAD,GAAcM,IACeyD,WAAW3D,KAiLpD,OACI,sBAAK2F,UAAU,+CAAf,UACI,cAAC,IAAD,IACA,iCACI,sBAAKA,UAAU,wDAAf,UACI,sBAAKC,MAAM,4CAAX,UACI,sBAAKA,MAAM,sBAAX,UACI,uBAAOC,IAAI,iBAAX,yBACA,uBAAOC,UAAQ,EAACrH,MAAOzB,EAAWqF,KAAK,OAAOuD,MAAM,eAAetJ,GAAG,sBAE1E,sBAAKsJ,MAAM,sBAAX,UACI,uBAAOC,IAAI,cAAX,uBACA,cAAC,IAAD,CAAQC,UAAQ,EAACC,QAAS3G,GAAeX,MAAOnB,OAEpD,sBAAKsI,MAAM,sBAAX,UACI,uBAAOC,IAAI,OAAX,kCACA,uBAAOpH,MAAOvB,EAAoB8I,SAAU,SAAA9E,GAAC,OAAI/D,EAAsB+D,EAAE+E,OAAOxH,QAAQ4D,KAAK,OAAOuD,MAAM,eAAetJ,GAAG,YAEhI,sBAAKsJ,MAAM,sBAAX,UACI,wBAAOC,IAAI,cAAX,kBAA8B,sBAAMF,UAAU,iBAAhB,kBAC9B,cAAC,IAAD,CAAQI,QAAS7G,GAAUT,MAAOrB,OAEtC,sBAAKwI,MAAM,8BAAX,UACI,qBAAKD,UAAU,oCAAf,SACI,wBAAOE,IAAI,cAAX,0BAAsC,sBAAMF,UAAU,iBAAhB,oBAE1C,sBAAKA,UAAU,WAAf,UACI,sBAAKC,MAAM,sBAAX,UACI,uBAAOM,QAA0B,SAAjB1I,IAA2B,EAAM2I,QAAS,kBAAM1I,EAAgB,SAASmI,MAAM,mBAAmB7C,KAAK,WAAWV,KAAK,QAAQ5D,MAAM,GAAGnC,GAAG,kBAC3J,uBAAOsJ,MAAM,mBAAmBC,IAAI,gBAApC,qBAIJ,sBAAKD,MAAM,sBAAX,UACI,uBAAOM,QAA0B,SAAjB1I,IAA2B,EAAM2I,QAAS,kBAAM1I,EAAgB,SAASmI,MAAM,mBAAmB7C,KAAK,WAAWV,KAAK,QAAQ5D,MAAM,GAAGnC,GAAG,kBAC3J,uBAAOsJ,MAAM,mBAAmBC,IAAI,gBAApC,qBAIJ,sBAAKD,MAAM,sBAAX,UACI,uBAAOM,QAA0B,SAAjB1I,IAA2B,EAAM2I,QAAS,kBAAM1I,EAAgB,SAASmI,MAAM,mBAAmB7C,KAAK,WAAWV,KAAK,QAAQ5D,MAAM,GAAGnC,GAAG,kBAC3J,uBAAOsJ,MAAM,mBAAmBC,IAAI,gBAApC,qBAIJ,sBAAKD,MAAM,sBAAX,UACI,uBAAOM,QAA0B,SAAjB1I,IAA2B,EAAM2I,QAAS,kBAAM1I,EAAgB,SAASmI,MAAM,mBAAmB7C,KAAK,WAAWV,KAAK,QAAQ5D,MAAM,GAAGnC,GAAG,kBAC3J,uBAAOsJ,MAAM,mBAAmBC,IAAI,gBAApC,8BAOhB,sBAAKD,MAAM,gBAAX,UACI,sBAAKA,MAAM,sBAAX,UACI,wBAAOC,IAAI,iBAAX,iBAAgC,sBAAMF,UAAU,iBAAhB,kBAChC,cAAC,IAAD,CAAQI,QAASrG,GAAajB,MAAOX,EAAgBkI,SAAU,SAAC9E,GAAD,OA9DnE,SAACA,GACjBnD,EAAkBmD,GAClB1C,GAAuB0C,EAAEoB,OA4D+D8D,CAAclF,SAEtF,sBAAK0E,MAAM,sBAAX,UACI,wBAAOC,IAAI,iBAAX,kBAAiC,sBAAMF,UAAU,iBAAhB,kBACjC,uBAAOlH,MAAOF,GAAuByH,SAAU,SAAC9E,GAAD,OAAO1C,GAAuB0C,EAAE+E,OAAOxH,QAAQ4D,KAAK,OAAOuD,MAAM,eAAetJ,GAAG,QAEtI,sBAAKsJ,MAAM,sBAAX,UACI,wBAAOC,IAAI,iBAAX,qBAAqC/H,EAAc,YAAQA,EAAe0E,KAAvB,KAAgC,KAAK,sBAAMmD,UAAU,iBAAhB,kBACxF,uBAAOlH,MAAOG,GAAKoH,SAAU,SAAA9E,GAAC,OAAIrC,GAAOqC,EAAE+E,OAAOxH,QAAQ4D,KAAK,OAAOuD,MAAM,eAAetJ,GAAG,QAElG,sBAAKsJ,MAAM,sBAAX,UACI,wBAAOC,IAAI,iBAAX,iBAAgC,sBAAMF,UAAU,iBAAhB,kBAChC,cAAC,IAAD,CAAQI,QAASjH,GAAUL,MAAOC,GAAKsH,SAAUrH,QAEnC,SAAjBnB,GACG,sBAAKmI,UAAU,sBAAf,UACI,uBAAOU,QAAQ,GAAf,sBACA,sBAAKV,UAAU,qBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,uBAAOlH,MAAOf,EAAesI,SAAU,SAAA9E,GAAC,OAAIvD,EAAiBuD,EAAE+E,OAAOxH,QAAQmH,MAAM,eAAevD,KAAK,OAAOU,KAAK,GAAGzG,GAAG,OAE9H,qBAAKqJ,UAAU,YAAf,SACI,yBAAQlH,MAAOb,EAAyBoI,SAAU,SAAA9E,GAAC,OAAIrD,EAA2BqD,EAAE+E,OAAOxH,QAAQmH,MAAM,eAAeU,UAAQ,EAAhI,UACI,wBAAQ7H,MAAM,GAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,+BAMF,SAAjBjB,GACG,sBAAKmI,UAAU,sBAAf,UACI,uBAAOU,QAAQ,GAAf,sBACA,sBAAKV,UAAU,qBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,uBAAOlH,MAAOf,EAAesI,SAAU,SAAA9E,GAAC,OAAIvD,EAAiBuD,EAAE+E,OAAOxH,QAAQmH,MAAM,eAAevD,KAAK,OAAOU,KAAK,GAAGzG,GAAG,OAE9H,qBAAKqJ,UAAU,YAAf,SACI,yBAAQlH,MAAOb,EAAyBoI,SAAU,SAAA9E,GAAC,OAAIrD,EAA2BqD,EAAE+E,OAAOxH,QAAQmH,MAAM,eAAeU,UAAQ,EAAhI,UACI,wBAAQ7H,MAAM,GAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,+BAMpB,sBAAKmH,MAAM,0BAAX,UACI,sBAAKA,MAAM,mBAAX,UACI,wBAAOC,IAAI,iBAAX,kBAAiC,sBAAMF,UAAU,iBAAhB,kBACjC,uBAAOlH,MAAOiC,GAAeoF,UAAQ,EAACzD,KAAK,OAAOuD,MAAM,eAAetJ,GAAG,QAE9E,qBAAKsJ,MAAM,oDAAX,SACI,qBAAKD,UAAU,YAAYQ,QAAS,kBAzRvC,WACrB,GAAInJ,GAAaE,GAAsBY,GAAkBR,GAAoBF,GAAgBmB,IAAyBK,GAAK,CACvH,IAAI2H,EAAgB,CAChBtE,KAAMnE,EACNS,sBAAuBA,GACvBK,IAAKA,GACLF,IAAKA,GACL4F,cAAe1G,EACfF,gBACAuH,MAAOvE,GACPE,eACAC,0BACAG,mBACAL,cACAG,yBACAsD,aAAe9G,EAAiBmB,MAChC4F,eAAiB/G,EAAiBU,OAEtC,GAAIwC,GAAiB,CACjBC,GAAmB,IACnB,IAAI+F,EAAgB,GACpBhH,GAASwC,KAAI,SAACC,EAAMwE,GACZA,IAAUC,SAASlG,IAAiB,EACpCgG,EAActE,KAAKqE,GAEnBC,EAActE,KAAKD,MAG3B,IAAIgD,EAAQ,EACRjE,EAAgB,EAChBmE,EAAe,EACnBqB,EAAcxE,KAAI,SAAAC,GACdgD,EAAQtB,WAAWsB,GAAStB,WAAW1B,EAAKgD,OAC5CjE,EAAkB2C,WAAW3C,GAAmB2C,WAAW1B,EAAKjB,iBAChEmE,EAAiBxB,WAAWwB,GAAkBxB,WAAW1B,EAAKtB,eAElER,GAAc8E,GACd5E,GAAkBW,GAClBT,GAAiB4E,GACjB1F,GAAY+G,OACT,CACH,IAAIG,EAAa,sBAAOnH,IAAP,CAAiB+G,IAC9BtB,EAAQ,EACRE,EAAe,EACnBwB,EAAc3E,KAAI,SAAAC,GACdgD,EAAQtB,WAAWsB,GAAStB,WAAW1B,EAAKgD,OAC5CjE,GAAkB2C,WAAW3C,IAAmB2C,WAAW1B,EAAKjB,iBAChEmE,EAAiBxB,WAAWwB,GAAkBxB,WAAW1B,EAAKtB,eAElEN,GAAkBW,IAClBT,GAAiB4E,GACjBhF,GAAc8E,GAEd9E,GAAcwD,WAAWzD,IAAcyD,WAAWjD,KAClDjB,GAAYkH,GAEhB5I,EAAkB,IAClBS,GAAuB,GACvBX,EAA2B,IAC3BF,EAAiB,GACjBkB,GAAO,GACPF,GAAO,CACHF,MAAO,EACPT,MAAO,IAEX0C,GAAgB,EAChBE,GAAa,EACbC,GAAyB,EACzBC,GAAwB,EACxBE,GAAkB,EAClBL,GAAW,EACXI,GAAiB,OAEjBiC,IAAMC,MAAM,4BAgNkD2D,IAAoBC,MAAO,CAAEC,OAAQ,WAAaC,IAAKC,IAAMC,IAAI,aAKtHzH,GAASiF,OAAS,GAAK,qBAAKkB,UAAU,sBAAf,SACpB,wBAAOC,MAAM,aAAb,UACI,uBAAOA,MAAM,aAAb,SACI,+BACI,oBAAIsB,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,8CAGR,uBAAOvB,UAAU,mBAAjB,SACKnG,GAASwC,KAAI,SAACC,EAAMwE,GACjB,OACI,+BACI,+BACI,mBAAGd,UAAU,UAAb,SAAwB1D,EAAKA,KAAKjE,QAClC,kCAAKiE,EAAKoC,eAAV,UAEJ,6BAAKpC,EAAK1D,wBACV,6BAAK0D,EAAKrD,MACV,+BAAKqD,EAAKvD,IAAID,MAAd,OACA,+BAAKwD,EAAKvE,cAAV,IAA0BuE,EAAKqC,iBAC/B,6BAAKrC,EAAKgD,QACV,+BACI,mBAAG4B,MAAO,CAAEC,OAAQ,WAAaX,QAAS,kBAnLnE,SAAClE,EAAMkF,GACtB1G,GAAmB0G,GACnBpJ,EAAkBkE,EAAKA,MACvBzD,GAAuByD,EAAK1D,uBAC5BM,GAAOoD,EAAKrD,KACZD,GAAOsD,EAAKvD,KACZb,EAA2BoE,EAAKqC,eAChC3G,EAAiBsE,EAAKvE,eACtBgD,GAAgBuB,EAAKgD,MA2KmEmC,CAAWnF,EAAMwE,EAAM,IAAIb,MAAM,eAAe,cAAY,SAC5G,mBAAGO,QAAS,kBAzKnC,SAACgB,GAClB,IAAME,EAAW,GACjB7H,GAASwC,KAAI,SAACC,EAAMwE,GACZA,IAAUU,GACVE,EAASnF,KAAKD,MAGtB,IAAIgD,EAAQ,EACRjE,EAAkB,EAClBmE,EAAiB,EACrBkC,EAASrF,KAAI,SAAAC,GACTgD,EAAQtB,WAAWsB,GAAStB,WAAW1B,EAAKgD,OAC5CjE,EAAkB2C,WAAW3C,GAAmB2C,WAAW1B,EAAKjB,iBAChEmE,EAAiBxB,WAAWwB,GAAkBxB,WAAW1B,EAAKtB,eAElEN,GAAkBW,GAClBT,GAAiB4E,GACjBhF,GAAc8E,GACdxF,GAAY4H,GAuJ8CC,CAAab,IAAQI,MAAO,CAAEC,OAAQ,WAAalB,MAAM,cAAc,cAAY,yBAQjI,sBAAKD,UAAU,0DAAf,UACI,sBAAKC,MAAM,sBAAX,UACI,uBAAOC,IAAI,8BAAX,qBACA,0BAAUpH,MAAOO,GAASgH,SAAU,SAAA9E,GAAC,OAAIjC,GAAWiC,EAAE+E,OAAOxH,QAAQmH,MAAM,eAAetJ,GAAG,8BAA8BiL,KAAK,SAEpI,sBAAK5B,UAAU,WAAf,UACI,sBAAKC,MAAM,iBAAX,UACI,uBAAOC,IAAI,GAAGD,MAAM,0BAApB,yBACA,qBAAKA,MAAM,WAAX,SACI,uBAAOvD,KAAK,OAAO5D,MAAOyB,GAAY0F,MAAM,eAAetJ,GAAG,UAGpD,SAAjBkB,GAA2B,sBAAKoI,MAAM,iBAAX,UACxB,uBAAOC,IAAI,GAAGD,MAAM,0BAApB,sBACA,sBAAKA,MAAM,oBAAX,UACI,qBAAKD,UAAU,aAAf,SACI,uBAAOC,MAAM,eAAenH,MAAON,GAAoB6H,SAAU,SAAA9E,GAAC,OAAI9C,GAAsB8C,EAAE+E,OAAOxH,QAAQ4D,KAAK,OAAOU,KAAK,GAAGzG,GAAG,OAExI,qBAAKqJ,UAAU,aAAf,SACI,yBAAQlH,MAAOJ,GAAuB2H,SAAU,SAAA9E,GAAC,OAAI5C,GAAyB4C,EAAE+E,OAAOxH,QAAQmH,MAAM,eAAeU,UAAQ,EAA5H,UACI,wBAAQ7H,MAAM,GAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,+BAKE,SAAjBjB,GAA2B,sBAAKoI,MAAM,iBAAX,UACxB,uBAAOC,IAAI,GAAGD,MAAM,0BAApB,sBACA,sBAAKA,MAAM,oBAAX,UACI,qBAAKD,UAAU,aAAf,SACI,uBAAOC,MAAM,eAAevD,KAAK,OAAO5D,MAAON,GAAoB6H,SAAU,SAAA9E,GAAC,OAAI9C,GAAsB8C,EAAE+E,OAAOxH,YAErH,qBAAKkH,UAAU,aAAf,SACI,yBAAQlH,MAAOJ,GAAuB2H,SAAU,SAAA9E,GAAC,OAAI5C,GAAyB4C,EAAE+E,OAAOxH,QAAQmH,MAAM,eAAeU,UAAQ,EAA5H,UACI,wBAAQ7H,MAAM,GAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,+BAKhB,sBAAKmH,MAAM,iBAAX,UACI,uBAAOC,IAAI,GAAGD,MAAM,0BAApB,0BACA,qBAAKA,MAAM,WAAX,SACI,uBAAOE,UAAQ,EAACrH,MAAOmB,GAAayC,KAAK,OAAOuD,MAAM,eAAetJ,GAAG,UAGhF,sBAAKsJ,MAAM,iBAAX,UACI,uBAAOC,IAAI,GAAGD,MAAM,0BAApB,yBACA,qBAAKA,MAAM,WAAX,SACI,uBAAOnH,MAAOuB,GAAYqC,KAAK,OAAOuD,MAAM,eAAetJ,GAAG,UAGrE0D,GAAa,GAAK,sBAAK4F,MAAM,iBAAX,UACf,uBAAOC,IAAI,GAAGD,MAAM,0BAApB,4BACA,qBAAKA,MAAM,WAAX,SACA,cAAC,IAAD,CAAQG,QAASzG,GAAmBb,MAAOR,SAG/C,sBAAK2H,MAAM,iBAAX,UACI,uBAAOC,IAAI,GAAGD,MAAM,0BAApB,2BACA,qBAAKA,MAAM,WAAX,SACI,uBAAOvD,KAAK,OAAO5D,MAAOoB,GAAciG,UAAQ,EAACF,MAAM,eAAetJ,GAAG,mBAM7F,sBAAKsJ,MAAM,qDAAX,UACI,yBAAQvD,KAAK,SAAS8D,QAAS,kBAAMqB,OAAOC,SAASC,UAAU9B,MAAM,gDAArE,mBAA2H,mBACvHA,MAAM,mBAAmB,cAAY,YACzC,yBAAQvD,KAAK,SAAS8D,QAAS,kBA7T3B,WAChB,GAAInJ,GAAaE,GAAsBI,GAAoBF,GAAgBoC,GAASiF,OAAS,GAAKvE,GAAW,CAAC,IA+B3FyH,EA/B0F,uCA+BzG,8BAAAxG,EAAA,sEAC2BC,MAAMC,IAAM,6BAA+B/E,EAAG,CACjEgF,OAAS,OACTC,QAAU,CACN,cAAkB1E,EAAK2E,OAE3BoG,KAAOC,IANf,WAQwB,KAPdpG,EADV,QAQiBC,GARjB,gCAS2BD,EAASE,OATpC,OAScC,EATd,OAUQ9E,GAAQ,GACY,MAAhB8E,EAAKC,QACLmB,IAAM8E,QAAQlG,EAAKsB,SACnB1G,EAAQ0F,KAAK,0BAEbc,IAAMC,MAAMrB,EAAKsB,SAf7B,2CA/ByG,qDACzGpG,GAAQ,GACR,IAAIyG,EAAS,CACTvG,UAAYA,EACZE,mBAAqBA,EACrBE,aAAeA,EACfE,iBAAmBA,EACnBE,aAAeA,GAEfuK,EAAQ,CACR7H,WAAaA,GACbN,YAAcA,GACdI,WAAaA,GACbH,aAAeA,GACf1B,mBAAqBA,GACrBE,sBAAwBA,GACxBW,QAAUA,GACVgJ,cAAgB/J,EAAqBD,MACrCoC,eAAiBA,GACjB6H,cAAgB3H,IAGhB4H,EAAc,GAElBA,EAAYhG,KAAKqB,GACjB2E,EAAYhG,KAAK6F,GAEjB,IAAMF,EAAW,IAAIM,SACrBN,EAASO,OAAO,cAAcC,KAAKC,UAAUJ,IAC7CL,EAASO,OAAO,WAAWC,KAAKC,UAAU9I,KAqB1CmI,SAEA3E,IAAMC,MAAM,+BAwQ+BsF,IAAe3C,MAAM,iDAAxD,iBAA6G,mBACzGA,MAAM,sBAAsB,cAAY","file":"static/js/62.65b8f5c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\nimport plus from '../../../assets/images_manual/add.svg'\nimport Select from 'react-select';\nimport { url, formatDate } from 'src/helpers/helpers';\nimport { userContext } from '../../../context/UserContext'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useHistory, useParams } from 'react-router-dom'\n\nexport default function Edit() {\n    let { id } = useParams();\n    const history = useHistory();\n    const { user,setLoad } = React.useContext(userContext);\n    const [invoiceNo, setInvoiceNo] = React.useState('');\n    const [purchaseReturnDate, setPurchaseReturnDate] = React.useState('');\n    const [currentParty, setCurrentParty] = React.useState('');\n    const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n    const [discountType, setDiscountType] = React.useState('None');\n    const [discountValue, setDiscountValue] = React.useState(0);\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\n    const [currentProduct, setCurrentProduct] = React.useState('');\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState({\n        label: \"cash\"\n    });\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\n    const [purchase_return_price, setPurchaseReturnPrice] = React.useState(0);\n    const [gst,setGST] = React.useState({\n        value: 0,\n        label: 0\n    });\n    const [qty, setQty] = React.useState(1);\n    const [gst_list,setGSTList] = React.useState([]);\n    const [remarks, setRemarks] = React.useState('');\n\n    const [allParty, setAllParty] = React.useState([]);\n    const [allWarehouses, setAllWarehouses] = React.useState([]);\n    const [allPaymentMethods, setAllPaymentMethods] = React.useState([]);\n    const [allItems, setAllItems] = React.useState([]);\n    const [allProducts,setAllProducts] = React.useState([]);\n\n    //final related variables and states\n    let finalAmount = 0;\n    let remainAmount = 0;\n    let discount_amount_final = 0;\n    let amount_before_discount_final = 0;\n    let amount_after_discount_final = 0;\n\n    const [paidAmount, setPaidAmount] = React.useState(0);\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\n    const [totalValue, setTotalValue] = React.useState(0);\n    const [discountAmount,setDiscountAmount] = React.useState(0);\n    const [taxAmount,setTaxableAmount] = React.useState(0);\n\n    //edit related states\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\n\n    //item based variables\n    let perItemAmount = 0;\n    let tax_amount = 0;\n    let amount_item = 0;\n    let amount_before_discount = 0;\n    let amount_after_discount = 0;\n    let amount_after_tax=0;\n    let discount_amount = 0;\n\n    React.useEffect(() => {\n        \n        async function fetchDataParty() {\n            setLoad(true);\n            const response = await fetch(url + 'partylist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllParty(data?.party_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchDataParty();\n\n        async function fetchGSTList() {\n            setLoad(true);\n            const response = await fetch(url + 'getGSTList', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setGSTList(data?.gst.map(item => {\n                return {\n                    value: item,\n                    label: item\n                }\n            }))\n        }\n        fetchGSTList();\n\n        async function fetchWarehouse() {\n            setLoad(true);\n            const response = await fetch(url + 'warehouselist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllWarehouses(data?.warehouse_list.map(item => {\n                        return {\n                            value: item.id,\n                            label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchWarehouse();\n        \n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n        }\n        fetchPaymentMethods();\n\n        async function fetchDetailPurchaseReturn() {\n            setLoad(true);\n            const response = await fetch(url + 'getPurchaseReturnById/' + id, {\n                headers: {\n                    'Authorization': user.token\n                }\n            });\n\n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    let header = data.purchase_return_header;\n                    let final_discount_criteria='';\n                    let final_discount_value = 0;\n                    if (parseFloat(header.bill_discount_percentage)>0) {\n                        final_discount_criteria = 'percent';\n                        final_discount_value = header.bill_discount_percentage;\n                    } else if (parseFloat(header.bill_discount_amount)>0) {\n                        final_discount_criteria = 'amount';\n                        final_discount_value = header.bill_discount_amount\n                    }\n                    let items = data.purchase_return_items;\n                    setInvoiceNo(header.invoice_number);\n                    setPurchaseReturnDate(header.purchase_return_date);\n                    setCurrentParty({\n                        value: header.party_id,\n                        label: header.party_name\n                    });\n                    setCurrentWarehouse({\n                        value: header.warehouse_id,\n                        label: header.warehouse_name\n                    })\n                    fetchProd(header.warehouse_id);\n                    setDiscountType(header.discount_type);\n                    let midItems = [];\n                    for (let i = 0; i < items.length; i++) {\n                        let current_item = items[i]; \n                        let discount_type = '';\n                        let discount_value = 0;\n                        \n                        if (current_item.discount_percent && parseFloat(current_item.discount_percent) > 0) {\n                            discount_type = 'percent'\n                            discount_value = current_item.discount_percent\n                        } else if (current_item.discount_amount) {\n                            discount_type = 'amount';\n                            discount_value = current_item.discount_amount\n                        } else {\n                            //\n                        }\n                        let obj = {\n                            item: {\n                                value: current_item.product_id,\n                                label: current_item.product_name,\n                                type: current_item.product_type,\n                                price: current_item.purchase_return_price,\n                                unit: current_item.product_unit,\n                                hsbn: current_item.product_hsbn,\n                                serial_no: current_item.product_serial_no\n                            },\n                            item_id: current_item.id,\n                            purchase_return_price: current_item.purchase_return_price,\n                            qty: current_item.qty,\n                            discount_type: discount_type,\n                            discountValue: discount_value,\n                            gst: {\n                                label: current_item.tax_percent,\n                                value: current_item.tax_percent\n                            },\n                            total: current_item.total,\n                            amount_item: current_item.total,\n                            amount_after_tax: current_item.amount_after_tax,\n                            amount_before_discount: current_item.amount_before_discount,\n                            tax_amount: current_item.tax_amount,\n                            discount_amount: current_item.discount_amount,\n                            amount_after_discount: current_item.amount_after_discount,\n                            warehouse_id : current_item.warehouse_id,\n                            warehouse_name : current_item.warehouse_name\n                        }\n\n                        midItems.push(obj)\n                    }\n                    setAllItems(midItems);\n                    let current_total_fetch = 0;\n                    let discount_amount = 0;\n                    let taxable_amount = 0;\n                    midItems.map(item => {\n                        current_total_fetch = parseFloat(current_total_fetch) + parseFloat(item.total)\n                        discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n                        taxable_amount = parseFloat(taxable_amount)+ parseFloat(item.tax_amount);\n                    })\n                    setTotalValue(current_total_fetch);\n                    setDiscountAmount(discount_amount);\n                    setTaxableAmount(taxable_amount);\n                    setFinalDiscountValue(final_discount_value);\n                    setFinalDiscountCriteria(final_discount_criteria);\n                    setPaidAmount(header.amount_paid);\n                    setCurrentPaymentMethod({\n                        label: header.payment_type\n                    })\n                    setRemarks(header.remarks)\n                } else {\n                    toast.error(data.message);\n                }\n            }\n        }\n        fetchDetailPurchaseReturn()\n    }, [])\n\n    async function fetchProd(e) {\n        setLoad(true);    \n        const response = await fetch(url + `fetchProducts?warehouse=${e}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': user?.token\n            }\n        })\n        if (response.ok === true) {\n            const data = await response.json();\n            setLoad(false)\n            if (data.status === 200) {\n                let products=[];\n                if(data.inventory_list){\n                  data.inventory_list.map(item=>{\n                    products.push(\n                       {value : item.product_id,\n                        label : item.product_name,\n                        type : \"product\",\n                        price : item.sale_unit_price,\n                        unit : item.product_unit,\n                        hsbn : item.product_hsbn,\n                        serial_no : item.product_serial_no,\n                       }\n                  )})\n                }\n                if(data.product_list){\n                    data.product_list.map(item=>{\n                      products.push(\n                         {value : item.id,   \n                          label : item.name,\n                          type: item.type,\n                          unit: item.unit,\n                          price: item.price,\n                          hsbn : item.hsbn,\n                          serial_no : item.serial_no\n                         }\n                    )})\n                  }  \n                setAllProducts(products);\n            } else {\n                toast.error(data.message)\n            }\n        }\n    }\n\n    const calculateTotal = () => {\n        if (purchase_return_price > 0 && qty > 0 && gst) {\n            amount_item = parseFloat(purchase_return_price) * parseFloat(qty); //amount before tax\n            tax_amount = (parseFloat(amount_item)/100) * parseFloat(gst.value);\n            amount_after_tax = amount_item + tax_amount;\n            perItemAmount = amount_after_tax;\n\n            if (discountType === 'Item' || discountType === 'Both') {\n                amount_before_discount = amount_after_tax;\n                if (currentDiscountCriteria === 'percent') {\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n\n                if (currentDiscountCriteria === 'amount') {\n                    discount_amount = parseFloat(discountValue);\n                    amount_after_discount = amount_before_discount - discount_amount;\n                    perItemAmount = amount_after_discount;\n                }\n            }\n        }\n    }\n\n    calculateTotal()\n\n    const calculateFinalPrice = () => {\n        if (totalValue > 0) {\n            if (discountType === 'Bill' || discountType === 'Both') {\n                if (finalDiscountCriteria === 'percent') {\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n\n                if (finalDiscountCriteria === 'amount') {\n                    discount_amount_final = parseFloat(finalDiscountValue);\n                    amount_before_discount_final = totalValue;\n                    amount_after_discount_final = totalValue - discount_amount_final;\n                }\n                finalAmount = amount_after_discount_final;\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            } else {\n                finalAmount = totalValue\n                remainAmount = finalAmount - parseFloat(paidAmount);\n            }\n        }\n    }\n\n    calculateFinalPrice()\n\n    const handleSubmitItem = () => {\n        if (invoiceNo && purchaseReturnDate && currentProduct && currentWarehouse && currentParty && purchase_return_price && qty) {\n            let new_item_dict = {\n                item: currentProduct,\n                purchase_return_price: purchase_return_price,\n                qty: qty,\n                gst: gst,\n                discount_type: currentDiscountCriteria,\n                discountValue,\n                total: perItemAmount,\n                amount_item,\n                amount_before_discount,\n                discount_amount,\n                tax_amount,\n                amount_after_discount,\n                warehouse_id : currentWarehouse.value,\n                warehouse_name : currentWarehouse.label\n            };\n            if (currentEditItem) {\n                setCurrentEditItem('')\n                let new_list_edit = []\n                allItems.map((item, index) => {\n                    if (index === parseInt(currentEditItem)-1) {\n                        new_list_edit.push(new_item_dict)\n                    } else {\n                        new_list_edit.push(item)\n                    }\n                })\n                let total = 0;\n                let discount_amount=0;\n                let taxable_amount=0;\n                new_list_edit.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setTotalValue(total);\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setAllItems(new_list_edit);\n            } else {\n                let new_item_list = [...allItems, new_item_dict];\n                let total = 0;\n                let taxable_amount=0;\n                new_item_list.map(item=>{\n                    total = parseFloat(total) + parseFloat(item.total);\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount);\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount);\n                })\n                setDiscountAmount(discount_amount);\n                setTaxableAmount(taxable_amount);\n                setTotalValue(total);\n\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\n                setAllItems(new_item_list);\n            }\n            setCurrentProduct('');\n            setPurchaseReturnPrice(0);\n            setCurrentDiscountCriteria('');\n            setDiscountValue(0);\n            setQty(1);\n            setGST({\n                value: 0,\n                label: 0\n            });\n            perItemAmount = 0;\n            amount_item= 0;\n            amount_before_discount = 0;\n            amount_after_discount = 0;\n            discount_amount = 0;\n            tax_amount=0;\n            amount_after_tax=0;\n        } else {\n            toast.error('Fill all fields having *')\n        }\n    }\n\n    const finalSubmit = () => {\n        if (invoiceNo && purchaseReturnDate && currentWarehouse && currentParty && allItems.length > 0 && totalValue){\n            setLoad(true)\n            let header = {\n                invoiceNo : invoiceNo,\n                purchaseReturnDate : purchaseReturnDate,\n                currentParty : currentParty,\n                currentWarehouse : currentWarehouse,\n                discountType : discountType\n            }\n            let final = {\n                totalValue : totalValue,\n                finalAmount : finalAmount,\n                paidAmount : paidAmount,\n                remainAmount : remainAmount,\n                finalDiscountValue : finalDiscountValue,\n                finalDiscountCriteria : finalDiscountCriteria,\n                remarks : remarks,\n                paymentMethod : currentPaymentMethod.label,\n                discountAmount : discountAmount,\n                taxableAmount : taxAmount\n            }\n\n            let final_array = [];\n\n            final_array.push(header);\n            final_array.push(final);\n\n            const formData = new FormData();\n            formData.append('final_array',JSON.stringify(final_array));\n            formData.append('allItems',JSON.stringify(allItems));\n\n            async function submitPurchase(){\n                const response = await fetch(url + 'updatePurchaseReturnEntry/' + id,{\n                    method : 'POST',\n                    headers : {\n                        'Authorization' : user.token\n                    },\n                    body : formData\n                });\n                if (response.ok === true){\n                    const data = await response.json();\n                    setLoad(false)\n                    if (data.status === 200){\n                        toast.success(data.message);\n                        history.push('/purchaseReturnReport')\n                    }else{\n                        toast.error(data.message);\n                    }\n                }\n            }\n            submitPurchase()\n        }else{\n            toast.error('Please fill the data with *');\n        }\n    }\n\n    const handleEdit = (item, index_value) => {\n        setCurrentEditItem(index_value);\n        setCurrentProduct(item.item);\n        setPurchaseReturnPrice(item.purchase_return_price);\n        setQty(item.qty);\n        setGST(item.gst);\n        setCurrentDiscountCriteria(item.discount_type);\n        setDiscountValue(item.discountValue);\n        perItemAmount = item.total;\n    }\n\n    const handleDelete = (index_value) => {\n        const new_item = [];\n        allItems.map((item, index) => {\n            if (index !== index_value) {\n                new_item.push(item)\n            }\n        })\n        let total = 0;\n        let discount_amount = 0;\n        let taxable_amount = 0;\n        new_item.map(item => {\n            total = parseFloat(total) + parseFloat(item.total);\n            discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\n            taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount)\n        })\n        setDiscountAmount(discount_amount);\n        setTaxableAmount(taxable_amount);\n        setTotalValue(total);\n        setAllItems(new_item);\n    }\n    const handleProduct=(e)=>{\n        setCurrentProduct(e);\n        setPurchaseReturnPrice(e.price);\n    }\n\n    return (\n        <div className=\"container full-size-create-page-main-section\">\n            <ToastContainer />\n            <form>\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice-number\">Invoice No.</label>\n                            <input readOnly value={invoiceNo} type=\"text\" class=\"form-control\" id=\"invoice-number\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Warehouse</label>\n                            <Select readOnly options={allWarehouses} value={currentWarehouse} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"date\">Purchase Return Date</label>\n                            <input value={purchaseReturnDate} onChange={e => setPurchaseReturnDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"input-party\">Party<span className='required-label'>*</span></label>\n                            <Select options={allParty} value={currentParty} />\n                        </div>\n                        <div class=\"form-group my-md-3 col-md-4\">\n                            <div className=\"text-center mb-2 font-weight-bold\">\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\n                            </div>\n                            <div className='row px-3'>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                        None\n                                    </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Item' && true} onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\n                                        Item\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Bill' && true} onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Bill\n                                </label>\n                                </div>\n                                <div class=\"form-check col-sm-3\">\n                                    <input checked={discountType === 'Both' && true} onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\n                                        Both\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>    \n                    <div class=\"my-4 form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\n                            <Select options={allProducts} value={currentProduct} onChange={(e)=>handleProduct(e)} />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Price<span className='required-label'>*</span></label>\n                            <input value={purchase_return_price} onChange={(e) => setPurchaseReturnPrice(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">Quantity{currentProduct ? ` (${currentProduct.unit})` :null}<span className='required-label'>*</span></label>\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"invoice-number\">GST:<span className='required-label'>*</span></label>\n                            <Select options={gst_list} value={gst} onChange={setGST} />\n                        </div>\n                        {discountType === 'Item' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {discountType === 'Both' &&\n                            <div className='form-group col-md-4'>\n                                <label htmlFor=\"\">Discount</label>\n                                <div className='m-0 p-0 col-12 row'>\n                                    <div className=\"px-0 col-5\">\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"p-0 col-7\">\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div class=\"form-group col-md-4 row\">\n                            <div class=\"form-group col-9\">\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\n                            </div>\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    {allItems.length > 0 && <div className='my-table-responsive'>\n                        <table class=\"table mt-4\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Item</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">GST</th>\n                                    <th scope=\"col\">Discount</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className='table-borderless'>\n                                {allItems.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>\n                                                <p className='p-0 m-0'>{item.item.label}</p>\n                                                <p>({item.warehouse_name})</p>\n                                            </td>\n                                            <td>{item.purchase_return_price}</td>\n                                            <td>{item.qty}</td>\n                                            <td>{item.gst.value}%</td>\n                                            <td>{item.discountValue} {item.discount_type}</td>\n                                            <td>{item.total}</td>\n                                            <td>\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\n                        <div class=\"form-group col-md-5\">\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\n                        </div>\n                        <div className='col-md-6'>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={totalValue} class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {discountType === 'Bill' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            {discountType === 'Both' && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\n                                <div class=\"pr-0 col-md-8 row\">\n                                    <div className=\"pr-0 col-5\">\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\n                                    </div>\n                                    <div className=\"px-0 col-7\">\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\n                                            <option value=\"\">Select Type</option>\n                                            <option value='percent'>Percent</option>\n                                            <option value='amount'>Amount</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input value={paidAmount} type=\"text\" class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                            {paidAmount > 0 && <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\n                                <div class=\"col-md-8\">\n                                <Select options={allPaymentMethods} value={currentPaymentMethod}/>\n                                </div>\n                            </div>}\n                            <div class=\"form-group row\">\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"sourceRoot":""}