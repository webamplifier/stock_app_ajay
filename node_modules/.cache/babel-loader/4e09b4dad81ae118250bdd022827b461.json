{"ast":null,"code":"import _asyncToGenerator from \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/src/context/fetchContext.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport React from 'react';\nimport { url } from '../helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar fetchContext = /*#__PURE__*/React.createContext();\n\nfunction FetchContext(props) {\n  _s();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      allCountries = _React$useState2[0],\n      setAllCountries = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      allStates = _React$useState4[0],\n      setAllStates = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      allCities = _React$useState6[0],\n      setAllCities = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      allBusinessTypes = _React$useState8[0],\n      setAllBusinessTypes = _React$useState8[1];\n\n  React.useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url + 'fetchCountriesStatesCities');\n\n              case 2:\n                response = _context.sent;\n\n                if (!(response.ok === true)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context.sent;\n                setAllCountries(data.countries_data.map(function (item) {\n                  return {\n                    value: item.id,\n                    label: item.name\n                  };\n                }));\n                setAllStates(data.states_data.map(function (item) {\n                  return {\n                    value: item.id,\n                    label: item.name,\n                    company_id: item.country_id\n                  };\n                }));\n                setAllCities(data.cities_data.map(function (item) {\n                  return {\n                    value: item.id,\n                    label: item.name,\n                    state_id: item.state_id\n                  };\n                }));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n\n    function fetchBusinessType() {\n      return _fetchBusinessType.apply(this, arguments);\n    }\n\n    function _fetchBusinessType() {\n      _fetchBusinessType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(url + 'fetchBusinessTypes');\n\n              case 2:\n                response = _context2.sent;\n\n                if (!(response.ok === true)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context2.sent;\n                setAllBusinessTypes(data.business_type_data.map(function (item) {\n                  return {\n                    value: item.id,\n                    label: item.name\n                  };\n                }));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchBusinessType.apply(this, arguments);\n    }\n\n    fetchBusinessType();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(fetchContext.Provider, {\n    value: {\n      allCountries: allCountries,\n      allStates: allStates,\n      allCities: allCities,\n      allBusinessTypes: allBusinessTypes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FetchContext, \"DJKknc0rUoPymXfUhwZKO6U+zBs=\");\n\n_c = FetchContext;\nexport { fetchContext, FetchContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchContext\");","map":{"version":3,"sources":["/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/src/context/fetchContext.js"],"names":["React","url","fetchContext","createContext","FetchContext","props","useState","allCountries","setAllCountries","allStates","setAllStates","allCities","setAllCities","allBusinessTypes","setAllBusinessTypes","useEffect","fetchData","fetch","response","ok","json","data","countries_data","map","item","value","id","label","name","states_data","company_id","country_id","cities_data","state_id","fetchBusinessType","business_type_data","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {url} from '../helpers/helpers'\n\nconst fetchContext = React.createContext();\n\nfunction FetchContext(props){\n    const [allCountries,setAllCountries] = React.useState([]);\n    const [allStates,setAllStates] = React.useState([]);\n    const [allCities,setAllCities] = React.useState([]);\n    const [allBusinessTypes,setAllBusinessTypes] = React.useState([]);\n\n    React.useEffect(()=>{\n        async function fetchData(){\n            const response = await fetch(url + 'fetchCountriesStatesCities');\n\n            if (response.ok === true){\n                const data = await response.json();\n\n                setAllCountries(data.countries_data.map(item=>{\n                    return {\n                        value : item.id,\n                        label : item.name\n                    }\n                }));\n                setAllStates(data.states_data.map(item=>{\n                    return {\n                        value : item.id,\n                        label : item.name,\n                        company_id : item.country_id\n                    }\n                }));\n                setAllCities(data.cities_data.map(item=>{\n                    return {\n                        value : item.id,\n                        label : item.name,\n                        state_id : item.state_id\n                    }\n                }))\n            }\n        }\n        fetchData();\n\n        async function fetchBusinessType(){\n            const response = await fetch(url + 'fetchBusinessTypes');\n\n            if (response.ok === true){\n                const data = await response.json();\n\n                setAllBusinessTypes(data.business_type_data.map(item=>{\n                    return {\n                        value : item.id,\n                        label : item.name\n                    }\n                }));\n            }\n        }\n\n        fetchBusinessType();\n\n    },[])\n\n    return(\n        <fetchContext.Provider value={{allCountries,allStates,allCities,allBusinessTypes}}>\n            {props.children}\n        </fetchContext.Provider>\n    )\n}\n\nexport {fetchContext,FetchContext}"]},"metadata":{},"sourceType":"module"}