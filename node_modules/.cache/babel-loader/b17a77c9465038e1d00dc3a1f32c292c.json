{"ast":null,"code":"import _asyncToGenerator from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/src/screens/Expense/Edit.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/regenerator/index.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { userContext } from '../../context/UserContext';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useContext = React.useContext(userContext),\n      user = _React$useContext.user,\n      setLoad = _React$useContext.setLoad;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expense_date = _React$useState2[0],\n      setExpenseDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      name = _React$useState4[0],\n      setName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      allemployees = _React$useState6[0],\n      setAllEmployees = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      currentEmployee = _React$useState8[0],\n      setCurrentEmployee = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      allPaymentMethods = _React$useState10[0],\n      setAllPaymentMethods = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      currentPaymentMethod = _React$useState12[0],\n      setCurrentPaymentMethod = _React$useState12[1];\n\n  var _React$useState13 = React.useState(''),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      item = _React$useState14[0],\n      setItem = _React$useState14[1];\n\n  var _React$useState15 = React.useState(0),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      paid_amount = _React$useState16[0],\n      setPaidAmount = _React$useState16[1];\n\n  var _React$useState17 = React.useState(''),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      remarks = _React$useState18[0],\n      setRemarks = _React$useState18[1];\n\n  var _React$useState19 = React.useState(''),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      condition = _React$useState20[0],\n      setCondition = _React$useState20[1];\n\n  React.useEffect(function () {\n    function fetchPaymentMethods() {\n      return _fetchPaymentMethods.apply(this, arguments);\n    }\n\n    function _fetchPaymentMethods() {\n      _fetchPaymentMethods = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoad(true);\n                _context.next = 3;\n                return fetch(url + 'getPaymentMethods', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context.sent;\n                setLoad(false);\n                setAllPaymentMethods(data === null || data === void 0 ? void 0 : data.payment_methods.map(function (item) {\n                  return {\n                    label: item\n                  };\n                }));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchPaymentMethods.apply(this, arguments);\n    }\n\n    fetchPaymentMethods();\n\n    function fetchEmployees() {\n      return _fetchEmployees.apply(this, arguments);\n    }\n\n    function _fetchEmployees() {\n      _fetchEmployees = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoad(true);\n                _context2.next = 3;\n                return fetch(url + 'employeelist', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context2.sent;\n\n                if (!(response.ok === true)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context2.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  setAllEmployees(data === null || data === void 0 ? void 0 : data.employee_list.map(function (item) {\n                    return {\n                      value: item.id,\n                      label: item.name\n                    };\n                  }));\n                } else {\n                  toast.error(data.message);\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchEmployees.apply(this, arguments);\n    }\n\n    fetchEmployees();\n\n    function fetchExpenseData() {\n      return _fetchExpenseData.apply(this, arguments);\n    }\n\n    function _fetchExpenseData() {\n      _fetchExpenseData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var response, data, expense_detail;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setLoad(true);\n                _context3.next = 3;\n                return fetch(url + 'expenseById/' + id, {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context3.sent;\n\n                if (!(response.ok === true)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _context3.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context3.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  expense_detail = data.expense_detail;\n\n                  if (expense_detail.condition === 'salary') {\n                    setCondition(expense_detail.condition);\n                    setCurrentEmployee({\n                      value: expense_detail.employee_id,\n                      label: expense_detail.name\n                    });\n                    setCurrentPaymentMethod({\n                      label: expense_detail.payment_method\n                    });\n                    setPaidAmount(expense_detail.paid_amount);\n                    setItem(expense_detail.item_name);\n                    setExpenseDate(expense_detail.expense_date);\n                    setRemarks(expense_detail.remarks);\n                  } else {\n                    setCondition(expense_detail.condition);\n                    setName(expense_detail.name);\n                    setPaidAmount(expense_detail.paid_amount);\n                    setCurrentPaymentMethod({\n                      label: expense_detail.payment_method\n                    });\n                    setItem(expense_detail.item_name);\n                    setExpenseDate(expense_detail.expense_date);\n                    setRemarks(expense_detail.remarks);\n                  }\n                } else {\n                  toast.error(data.message);\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _fetchExpenseData.apply(this, arguments);\n    }\n\n    fetchExpenseData();\n  }, []);\n\n  var handleChange = function handleChange(e) {\n    setCondition(e.target.value);\n\n    if (e.target.value === \"salary\") {\n      setItem(\"salary\");\n    }\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    setLoad(true);\n    e.preventDefault();\n\n    function submitData() {\n      return _submitData.apply(this, arguments);\n    }\n\n    function _submitData() {\n      _submitData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var formData, response, data;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(paid_amount && item && condition)) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                formData = new FormData();\n\n                if (condition === 'salary') {\n                  formData.append('expense_date', expense_date);\n                  formData.append('condition', condition);\n                  formData.append('name', currentEmployee.label);\n                  formData.append('employee_id', currentEmployee.value);\n                  formData.append('paid_amount', paid_amount);\n                  formData.append('payment_method', currentPaymentMethod.label);\n                  formData.append('item', item);\n                  formData.append('remarks', remarks);\n                } else {\n                  formData.append('expense_date', expense_date);\n                  formData.append('condition', condition);\n                  formData.append('name', name);\n                  formData.append('payment_method', currentPaymentMethod.label);\n                  formData.append('paid_amount', paid_amount);\n                  formData.append('item', item);\n                  formData.append('remarks', remarks);\n                }\n\n                _context4.next = 5;\n                return fetch(url + 'updateexpense/' + id, {\n                  method: 'POST',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  },\n                  body: formData\n                });\n\n              case 5:\n                response = _context4.sent;\n\n                if (!(response.ok === true)) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                _context4.next = 9;\n                return response.json();\n\n              case 9:\n                data = _context4.sent;\n                setLoad(false);\n\n                if (!(data.status === 200)) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", window.location = window.location.origin + '/#/expenseReport');\n\n              case 15:\n                toast.error(data.message);\n\n              case 16:\n                _context4.next = 19;\n                break;\n\n              case 18:\n                toast.error('Please fill the data with *');\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return _submitData.apply(this, arguments);\n    }\n\n    submitData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container create-page-main-section\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: function onSubmit(e) {\n        return handleSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-sm-5 create-form-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputDate\",\n            class: \"col-sm-2 col-form-label\",\n            children: \"Expense Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex align-items-sm-center col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: expense_date,\n              onChange: function onChange(e) {\n                return setExpenseDate(e.target.value);\n              },\n              type: \"date\",\n              class: \"form-control\",\n              id: \"inputDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputname\",\n            class: \"col-sm-2 col-form-label\",\n            children: [\"Condition\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-label\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 89\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex align-items-sm-center col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: condition,\n              onChange: function onChange(e) {\n                return handleChange(e);\n              },\n              class: \"form-control\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Condition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"expense\",\n                children: \"Expense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"salary\",\n                children: \"Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), condition === 'expense' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputname\",\n            class: \"col-sm-2 col-form-label\",\n            children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-label\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex align-items-sm-center col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              value: name,\n              onChange: function onChange(e) {\n                return setName(e.target.value);\n              },\n              type: \"text\",\n              class: \"form-control\",\n              id: \"inputname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 22\n        }, this) : null, condition === 'salary' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputname\",\n            class: \"col-sm-2 col-form-label\",\n            children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-label\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: allemployees,\n              value: currentEmployee,\n              onChange: setCurrentEmployee\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 22\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputItem\",\n            class: \"col-sm-2 col-form-label\",\n            children: [\"Item\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-label\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 84\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex align-items-sm-center col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              value: item,\n              onChange: function onChange(e) {\n                return setItem(e.target.value);\n              },\n              type: \"text\",\n              class: \"form-control\",\n              id: \"inputItem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputItem\",\n            class: \"col-sm-2 col-form-label\",\n            children: [\"Payment Method\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-label\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 94\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm-10\",\n            children: currentPaymentMethod.label === \"cash\" ? /*#__PURE__*/_jsxDEV(Select, {\n              options: allPaymentMethods,\n              value: currentPaymentMethod,\n              onChange: setCurrentPaymentMethod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 66\n            }, this) : /*#__PURE__*/_jsxDEV(Select, {\n              options: allPaymentMethods,\n              value: currentPaymentMethod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputPrice\",\n            class: \"col-sm-2 col-form-label\",\n            children: [\"Paid Amount\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-label\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 92\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex align-items-sm-center col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              value: paid_amount,\n              onChange: function onChange(e) {\n                return setPaidAmount(e.target.value);\n              },\n              type: \"text\",\n              class: \"form-control\",\n              id: \"inputPrice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"col-sm-2 col-form-label\",\n            for: \"exampleFormControlTextarea1\",\n            children: \"Remarks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex align-items-sm-center col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: remarks,\n              onChange: function onChange(e) {\n                return setRemarks(e.target.value);\n              },\n              class: \"form-control\",\n              id: \"exampleFormControlTextarea1\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"d-flex justify-content-center create-catagory-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          class: \"font-weight-bold m-3 py-2 px-4 btn btn-danger\",\n          onClick: function onClick() {\n            return window.location.reload();\n          },\n          children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"px-2 fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 144\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"font-weight-bold m-3 py-2 px-4 btn btn-success\",\n          children: [\"Save\", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"px-2 fa fa-floppy-o\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 102\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Edit, \"Zo6tk/BPPeSWhEMyv5S7D4R4ris=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/src/screens/Expense/Edit.js"],"names":["React","Select","url","userContext","toast","ToastContainer","useParams","Edit","id","useContext","user","setLoad","useState","expense_date","setExpenseDate","name","setName","allemployees","setAllEmployees","currentEmployee","setCurrentEmployee","allPaymentMethods","setAllPaymentMethods","currentPaymentMethod","setCurrentPaymentMethod","item","setItem","paid_amount","setPaidAmount","remarks","setRemarks","condition","setCondition","useEffect","fetchPaymentMethods","fetch","method","headers","token","response","json","data","payment_methods","map","label","fetchEmployees","ok","status","employee_list","value","error","message","fetchExpenseData","expense_detail","employee_id","payment_method","item_name","handleChange","e","target","handleSubmit","preventDefault","submitData","formData","FormData","append","body","window","location","origin","reload"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport {userContext} from '../../context/UserContext'\nimport { toast,ToastContainer } from 'react-toastify';\nimport {useParams} from 'react-router-dom';\n\nexport default function Edit() {\n    const {id} = useParams();\n    const {user,setLoad} = React.useContext(userContext);    \n    const [expense_date, setExpenseDate] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [allemployees, setAllEmployees] = React.useState('');\n    const [currentEmployee, setCurrentEmployee] = React.useState('');\n    const [allPaymentMethods, setAllPaymentMethods] = React.useState([]);\n    const [currentPaymentMethod, setCurrentPaymentMethod] = React.useState('');\n    const [item,setItem] = React.useState('');\n    const [paid_amount,setPaidAmount] = React.useState(0);\n    const [remarks,setRemarks] = React.useState('');\n    const [condition, setCondition] = React.useState('');\n    \n    React.useEffect(()=>{\n        async function fetchPaymentMethods() {\n            setLoad(true);\n            const response = await fetch(url + 'getPaymentMethods', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n            const data = await response.json();\n            setLoad(false);\n            setAllPaymentMethods(data?.payment_methods.map(item => {\n                return {\n                    label: item\n                }\n            }))\n        }\n        fetchPaymentMethods();\n        \n        async function fetchEmployees(){\n            setLoad(true);\n            const response = await fetch(url + 'employeelist', {\n                method: 'GET',\n                headers: {\n                    'Authorization': user?.token\n                }\n            })\n    \n            if (response.ok === true) {\n                const data = await response.json();\n                setLoad(false)\n                if (data.status === 200) {\n                    setAllEmployees(data?.employee_list.map(item => {\n                        return {\n                           value: item.id, \n                           label: item.name\n                        }\n                    }))\n                } else {\n                    toast.error(data.message)\n                }\n            }\n        }\n           fetchEmployees();\n        \n        async function fetchExpenseData(){\n            setLoad(true);\n            const response = await fetch(url + 'expenseById/' + id,{\n                method : 'GET',\n                headers : {\n                    'Authorization' : user?.token\n                }\n            })\n            if (response.ok === true){\n                const data = await response.json();\n                setLoad(false);\n                if (data.status === 200){\n                    let expense_detail = data.expense_detail;\n                    if(expense_detail.condition==='salary'){\n                        setCondition(expense_detail.condition);\n                        setCurrentEmployee({\n                            value: expense_detail.employee_id,\n                            label: expense_detail.name\n                        });\n                        setCurrentPaymentMethod({\n                            label: expense_detail.payment_method\n                        })\n                        setPaidAmount(expense_detail.paid_amount);\n                        setItem(expense_detail.item_name);\n                        setExpenseDate(expense_detail.expense_date);\n                        setRemarks(expense_detail.remarks);\n                    }\n                    else{\n                        setCondition(expense_detail.condition);\n                        setName(expense_detail.name)\n                        setPaidAmount(expense_detail.paid_amount);\n                        setCurrentPaymentMethod({\n                            label: expense_detail.payment_method\n                        })\n                        setItem(expense_detail.item_name);\n                        setExpenseDate(expense_detail.expense_date);\n                        setRemarks(expense_detail.remarks);\n                    }\n                }else{\n                    toast.error(data.message)\n                }\n            }\n        }\n        fetchExpenseData();\n    },[])\n    \n    const handleChange = e =>{\n        setCondition(e.target.value);\n        if(e.target.value === \"salary\"){\n            setItem(\"salary\");\n        }\n    }\n    \n    const handleSubmit = e => {\n        setLoad(true)\n        e.preventDefault();\n        \n        async function submitData(){\n            if( paid_amount && item && condition)\n           {  \n            const formData = new FormData();\n            if(condition==='salary'){\n                formData.append('expense_date', expense_date);\n                formData.append('condition', condition);\n                formData.append('name', currentEmployee.label);\n                formData.append('employee_id', currentEmployee.value);\n                formData.append('paid_amount', paid_amount);\n                formData.append('payment_method', currentPaymentMethod.label);\n                formData.append('item', item);\n                formData.append('remarks', remarks);\n                }\n                else{\n                formData.append('expense_date', expense_date);\n                formData.append('condition', condition);\n                formData.append('name', name);\n                formData.append('payment_method', currentPaymentMethod.label);\n                formData.append('paid_amount', paid_amount);\n                formData.append('item', item);\n                formData.append('remarks', remarks);\n                }\n            const response = await fetch(url + 'updateexpense/' + id,{\n                method : 'POST',\n                headers : {\n                    'Authorization' : user?.token\n                },\n                body : formData\n            })\n\n            if (response.ok === true){\n                const data = await response.json();\n                setLoad(false);\n                if (data.status === 200){\n                    return window.location = window.location.origin + '/#/expenseReport';\n                }else{\n                    toast.error(data.message)\n                }\n            }\n        }\n        else{\n            toast.error('Please fill the data with *');\n         }\n        } \n        submitData();\n    }\n\n    return (\n        <div className=\"container create-page-main-section\">\n            <ToastContainer />\n            <form onSubmit={e=>handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div class=\"form-group row\">\n                        <label for=\"inputDate\" class=\"col-sm-2 col-form-label\">Expense Date</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input value={expense_date} onChange={e=>setExpenseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"inputDate\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputname\" class=\"col-sm-2 col-form-label\">Condition<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                        <select value={condition} onChange={e => handleChange(e)} class=\"form-control\" required>\n                                    <option value=\"\">Select Condition</option>\n                                    <option value='expense'>Expense</option>\n                                    <option value='salary'>Salary</option>\n                        </select>\n                        </div>\n                    </div>\n                    {condition ==='expense'?\n                     <div class=\"form-group row\">\n                     <label for=\"inputname\" class=\"col-sm-2 col-form-label\">To:<span className='required-label'>*</span></label>\n                     <div class=\"d-flex align-items-sm-center col-sm-10\">\n                         <input required value={name} onChange={e=>setName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputname\" />\n                     </div>\n                 </div> : null}\n                    {condition ==='salary'?\n                     <div class=\"form-group row\">\n                     <label for=\"inputname\" class=\"col-sm-2 col-form-label\">To:<span className='required-label'>*</span></label>\n                     <div class=\"col-sm-10\">\n                        <Select options={allemployees} value={currentEmployee} onChange={setCurrentEmployee} />\n                    </div>\n                 </div> : null}\n                    <div class=\"form-group row\">\n                        <label for=\"inputItem\" class=\"col-sm-2 col-form-label\">Item<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={item} onChange={e=>setItem(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputItem\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputItem\" class=\"col-sm-2 col-form-label\">Payment Method<span className='required-label'>*</span></label>\n                        <div class=\"col-sm-10\">\n                        {currentPaymentMethod.label === \"cash\" ? <Select options={allPaymentMethods} value={currentPaymentMethod} onChange={setCurrentPaymentMethod}/>\n                                                              : <Select options={allPaymentMethods} value={currentPaymentMethod} />}  \n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPrice\" class=\"col-sm-2 col-form-label\">Paid Amount<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={paid_amount} onChange={e=>setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPrice\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-2 col-form-label\" for=\"exampleFormControlTextarea1\">Remarks:</label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button type=\"reset\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\" onClick={() => window.location.reload()} >Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}