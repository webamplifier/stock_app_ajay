{"ast":null,"code":"import _asyncToGenerator from \"/Volumes/Disk SSD 1/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Volumes/Disk SSD 1/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Volumes/Disk SSD 1/erp2.0/erp-2.0/frontend/src/views/dashboard/Dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Volumes/Disk SSD 1/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/regenerator/index.js\";\nimport { CChartDoughnut } from '@coreui/react-chartjs';\nimport React, { lazy } from 'react';\nimport ChartBarSimple from '../charts/ChartBarSimple.js';\nimport { userContext } from '../../context/UserContext';\nimport { url } from 'src/helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar WidgetsDropdown = /*#__PURE__*/lazy(_c = function _c() {\n  return import('../widgets/WidgetsDropdown.js');\n});\n_c2 = WidgetsDropdown;\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  var _React$useContext = React.useContext(userContext),\n      user = _React$useContext.user,\n      setLoad = _React$useContext.setLoad;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pie_data = _React$useState2[0],\n      setTotalData = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      date_array = _React$useState4[0],\n      setDateArray = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      purchase_record = _React$useState6[0],\n      setPurchaseRecord = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      sales_record = _React$useState8[0],\n      setSalesRecord = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      expense_record = _React$useState10[0],\n      setExpenseRecord = _React$useState10[1];\n\n  React.useEffect(function () {\n    function fetchPieData() {\n      return _fetchPieData.apply(this, arguments);\n    }\n\n    function _fetchPieData() {\n      _fetchPieData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, data, total_record;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoad(true);\n                _context.next = 3;\n                return fetch(url + 'get-total-profile-record', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if (!(response.ok === true)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  total_record = [];\n                  total_record.push(parseFloat(data.sales_record));\n                  total_record.push(parseFloat(data.purchase_record));\n                  total_record.push(parseFloat(data.expense_record));\n                  setTotalData(total_record);\n                } else {\n                  alert(data.message);\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchPieData.apply(this, arguments);\n    }\n\n    fetchPieData();\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoad(true);\n                _context2.next = 3;\n                return fetch(url + 'fetchLastWeekSales', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context2.sent;\n\n                if (!(response.ok === true)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context2.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  setDateArray(data.date_array);\n                  setPurchaseRecord(data.purchase_record);\n                  setSalesRecord(data.sale_record);\n                  setExpenseRecord(data.expense_record);\n                } else {\n                  alert(data.message);\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(CChartDoughnut, {\n          datasets: [{\n            backgroundColor: ['#41B883', '#E46651', '#00D8FF'],\n            data: pie_data\n          }],\n          labels: ['Sales', 'Purchase', 'Expense'],\n          options: {\n            tooltips: {\n              enabled: true\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(WidgetsDropdown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ChartBarSimple, {\n      style: {\n        height: \"400px\",\n        marginTop: 40\n      },\n      backgroundColor: \"#41B883\",\n      dataPoints: sales_record,\n      date_array: date_array,\n      label: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ChartBarSimple, {\n      style: {\n        height: \"400px\",\n        marginTop: 40\n      },\n      backgroundColor: \"#E46651\",\n      dataPoints: purchase_record,\n      date_array: date_array,\n      label: \"Purchase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ChartBarSimple, {\n      style: {\n        height: \"400px\",\n        marginTop: 40\n      },\n      backgroundColor: \"#00D8FF\",\n      dataPoints: expense_record,\n      date_array: date_array,\n      label: \"Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"D4s1eu8RJLGbHTm0OLg5FgvARD4=\");\n\n_c3 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"WidgetsDropdown$lazy\");\n$RefreshReg$(_c2, \"WidgetsDropdown\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"sources":["/Volumes/Disk SSD 1/erp2.0/erp-2.0/frontend/src/views/dashboard/Dashboard.js"],"names":["CChartDoughnut","React","lazy","ChartBarSimple","userContext","url","WidgetsDropdown","Dashboard","useContext","user","setLoad","useState","pie_data","setTotalData","date_array","setDateArray","purchase_record","setPurchaseRecord","sales_record","setSalesRecord","expense_record","setExpenseRecord","useEffect","fetchPieData","fetch","method","headers","token","response","ok","json","data","status","total_record","push","parseFloat","alert","message","fetchData","sale_record","backgroundColor","tooltips","enabled","height","marginTop"],"mappings":"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","sourcesContent":["import { CChartDoughnut } from '@coreui/react-chartjs';\nimport React, { lazy } from 'react';\nimport ChartBarSimple from '../charts/ChartBarSimple.js';\nimport { userContext } from '../../context/UserContext';\nimport { url } from 'src/helpers/helpers';\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\n\nconst Dashboard = () => {\n  const { user,setLoad } = React.useContext(userContext);\n  const [pie_data,setTotalData] = React.useState([]);\n  const [date_array,setDateArray] = React.useState([]);\n  const [purchase_record,setPurchaseRecord] = React.useState([]);\n  const [sales_record, setSalesRecord] = React.useState([]);\n  const [expense_record, setExpenseRecord] = React.useState([]);\n  \n  React.useEffect(()=>{\n    \n    async function fetchPieData(){\n      setLoad(true);\n      const response = await fetch(url + 'get-total-profile-record', {\n        method: 'GET',\n        headers: {\n            'Authorization': user?.token\n        }\n    })\n\n    if (response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n           let total_record=[];\n           total_record.push(parseFloat(data.sales_record));\n           total_record.push(parseFloat(data.purchase_record));\n           total_record.push(parseFloat(data.expense_record));\n           setTotalData(total_record);\n        } else {\n            alert(data.message);\n        }\n    }\n    }\n    fetchPieData();\n    \n    async function fetchData() {\n      setLoad(true);\n      const response = await fetch(url + 'fetchLastWeekSales', {\n          method: 'GET',\n          headers: {\n              'Authorization': user?.token\n          }\n      })\n\n      if (response.ok === true) {\n          const data = await response.json();\n          setLoad(false)\n          if (data.status === 200) {\n              setDateArray(data.date_array);\n              setPurchaseRecord(data.purchase_record);\n              setSalesRecord(data.sale_record);\n              setExpenseRecord(data.expense_record);\n          } else {\n              alert(data.message);\n          }\n      }\n  }\n\n  fetchData();\n  },[])\n  return (\n    <>\n      <div className='row'>\n        <div className='col-md-6'>\n          <CChartDoughnut datasets={[\n            {\n              backgroundColor: [\n                '#41B883',\n                '#E46651',\n                '#00D8FF',\n              ],\n              data: pie_data\n            }\n          ]}\n            labels={['Sales', 'Purchase', 'Expense']}\n            options={{\n              tooltips: {\n                enabled: true\n              }\n            }} />\n        </div>\n\n        <div className='col-md-6'>\n        <WidgetsDropdown />\n        </div>\n      </div>\n      <ChartBarSimple style={{ height: \"400px\", marginTop: 40 }} backgroundColor='#41B883' dataPoints={sales_record} date_array={date_array} label=\"Sales\" />\n      <ChartBarSimple style={{ height: \"400px\", marginTop: 40 }} backgroundColor='#E46651' dataPoints={purchase_record} date_array={date_array} label=\"Purchase\" />\n      <ChartBarSimple style={{ height: \"400px\", marginTop: 40 }} backgroundColor='#00D8FF' dataPoints={expense_record} date_array={date_array} label=\"Expense\" />\n\n    </>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}