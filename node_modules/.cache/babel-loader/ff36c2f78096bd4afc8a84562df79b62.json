{"ast":null,"code":"import _objectSpread from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"backgroundColor\", \"pointHoverBackgroundColor\", \"dataPoints\", \"label\", \"pointed\", \"date_array\"];\n\nvar _jsxFileName = \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/src/views/charts/ChartBarSimple.js\",\n    _this = this;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getColor } from '@coreui/utils';\nimport { CChartBar } from '@coreui/react-chartjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChartBarSimple = function ChartBarSimple(props) {\n  var backgroundColor = props.backgroundColor,\n      pointHoverBackgroundColor = props.pointHoverBackgroundColor,\n      dataPoints = props.dataPoints,\n      label = props.label,\n      pointed = props.pointed,\n      date_array = props.date_array,\n      attributes = _objectWithoutProperties(props, _excluded);\n\n  var defaultDatasets = function () {\n    return [{\n      data: dataPoints,\n      backgroundColor: getColor(backgroundColor),\n      pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n      label: label,\n      barPercentage: 0.5,\n      categoryPercentage: 1\n    }];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: true\n      },\n      scales: {\n        xAxes: [{\n          display: true\n        }],\n        yAxes: [{\n          display: true\n        }]\n      }\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/_jsxDEV(CChartBar, _objectSpread(_objectSpread({}, attributes), {}, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: date_array\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ChartBarSimple;\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\nexport default ChartBarSimple;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBarSimple\");","map":{"version":3,"sources":["/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/src/views/charts/ChartBarSimple.js"],"names":["React","PropTypes","getColor","CChartBar","ChartBarSimple","props","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","date_array","attributes","defaultDatasets","data","barPercentage","categoryPercentage","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","propTypes","tag","oneOfType","func","string","className","array","bool","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAE9B,MACEC,eADF,GAQID,KARJ,CACEC,eADF;AAAA,MAEEC,yBAFF,GAQIF,KARJ,CAEEE,yBAFF;AAAA,MAGEC,UAHF,GAQIH,KARJ,CAGEG,UAHF;AAAA,MAIEC,KAJF,GAQIJ,KARJ,CAIEI,KAJF;AAAA,MAKEC,OALF,GAQIL,KARJ,CAKEK,OALF;AAAA,MAMEC,UANF,GAQIN,KARJ,CAMEM,UANF;AAAA,MAOKC,UAPL,4BAQIP,KARJ;;AAUA,MAAMQ,eAAe,GAAI,YAAM;AAC7B,WAAO,CACL;AACEC,MAAAA,IAAI,EAAEN,UADR;AAEEF,MAAAA,eAAe,EAAEJ,QAAQ,CAACI,eAAD,CAF3B;AAGEC,MAAAA,yBAAyB,EAAEL,QAAQ,CAACK,yBAAD,CAHrC;AAIEE,MAAAA,KAAK,EAAEA,KAJT;AAKEM,MAAAA,aAAa,EAAE,GALjB;AAMEC,MAAAA,kBAAkB,EAAE;AANtB,KADK,CAAP;AAUD,GAXuB,EAAxB;;AAaA,MAAMC,cAAc,GAAI,YAAM;AAC5B,WAAO;AACLC,MAAAA,mBAAmB,EAAE,KADhB;AAELC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH,OAFH;AAKLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAAC;AACNF,UAAAA,OAAO,EAAE;AADH,SAAD,CADD;AAING,QAAAA,KAAK,EAAE,CAAC;AACNH,UAAAA,OAAO,EAAE;AADH,SAAD;AAJD;AALH,KAAP;AAcD,GAfsB,EAAvB,CAzB8B,CA0C9B;;;AACA,sBACE,QAAC,SAAD,kCACMR,UADN;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,IAAA,OAAO,EAAEI,cAHX;AAIE,IAAA,MAAM,EAAEN;AAJV;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAnDD;;KAAMP,c;AAqDNA,cAAc,CAACoB,SAAf,GAA2B;AACzBC,EAAAA,GAAG,EAAExB,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC0B,IAAX,EAAiB1B,SAAS,CAAC2B,MAA3B,CAApB,CADoB;AAEzBC,EAAAA,SAAS,EAAE5B,SAAS,CAAC2B,MAFI;AAGzB;AACAtB,EAAAA,eAAe,EAAEL,SAAS,CAAC2B,MAJF;AAKzBrB,EAAAA,yBAAyB,EAAEN,SAAS,CAAC2B,MALZ;AAMzBpB,EAAAA,UAAU,EAAEP,SAAS,CAAC6B,KANG;AAOzBrB,EAAAA,KAAK,EAAER,SAAS,CAAC2B,MAPQ;AAQzBlB,EAAAA,OAAO,EAAET,SAAS,CAAC8B;AARM,CAA3B;AAWA3B,cAAc,CAAC4B,YAAf,GAA8B;AAC5B1B,EAAAA,eAAe,EAAE,gBADW;AAE5BE,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAFgB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAA9B;AAMA,eAAeL,cAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from '@coreui/utils'\nimport { CChartBar } from '@coreui/react-chartjs'\n\nconst ChartBarSimple = props => {\n\n  const {\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    date_array,\n    ...attributes\n  } = props\n\n  const defaultDatasets = (() => {\n    return [\n      {\n        data: dataPoints,\n        backgroundColor: getColor(backgroundColor),\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n        label: label,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n      }\n    ]\n  })()\n\n  const defaultOptions = (() => {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: true\n      },\n      scales: {\n        xAxes: [{\n          display: true\n        }],\n        yAxes: [{\n          display: true\n        }]\n      }\n    }\n  })()\n\n  // render\n  return (\n    <CChartBar\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={date_array}\n    />\n  )\n}\n\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartBarSimple\n"]},"metadata":{},"sourceType":"module"}