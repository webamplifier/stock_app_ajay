{"ast":null,"code":"import _slicedToArray from\"/Users/alihussainkabri/Downloads/projects/old projects/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useHistory,useLocation}from'react-router-dom';import{CBadge,CCard,CCardBody,CCardHeader,CCol,CDataTable,CRow,CPagination}from'@coreui/react';import usersData from'./UsersData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getBadge=function getBadge(status){switch(status){case'Active':return'success';case'Inactive':return'secondary';case'Pending':return'warning';case'Banned':return'danger';default:return'primary';}};var Users=function Users(){var history=useHistory();var queryPage=useLocation().search.match(/page=([0-9]+)/,'');var currentPage=Number(queryPage&&queryPage[1]?queryPage[1]:1);var _useState=useState(currentPage),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var pageChange=function pageChange(newPage){currentPage!==newPage&&history.push(\"/users?page=\".concat(newPage));};useEffect(function(){currentPage!==page&&setPage(currentPage);},[currentPage,page]);return/*#__PURE__*/_jsx(CRow,{children:/*#__PURE__*/_jsx(CCol,{xl:6,children:/*#__PURE__*/_jsxs(CCard,{children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[\"Users\",/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\" example\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsx(CDataTable,{items:usersData,fields:[{key:'name',_classes:'font-weight-bold'},'registered','role','status'],hover:true,striped:true,itemsPerPage:5,activePage:page,clickableRows:true,onRowClick:function onRowClick(item){return history.push(\"/users/\".concat(item.id));},scopedSlots:{'status':function status(item){return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(CBadge,{color:getBadge(item.status),children:item.status})});}}}),/*#__PURE__*/_jsx(CPagination,{activePage:page,onActivePageChange:pageChange,pages:5,doubleArrows:false,align:\"center\"})]})]})})});};export default Users;","map":{"version":3,"sources":["/Users/alihussainkabri/Downloads/projects/old projects/erp2.0/erp-2.0/frontend/src/views/users/Users.js"],"names":["React","useState","useEffect","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CPagination","usersData","getBadge","status","Users","history","queryPage","search","match","currentPage","Number","page","setPage","pageChange","newPage","push","key","_classes","item","id"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,kBAAxC,CACA,OACEC,MADF,CAEEC,KAFF,CAGEC,SAHF,CAIEC,WAJF,CAKEC,IALF,CAMEC,UANF,CAOEC,IAPF,CAQEC,WARF,KASO,eATP,CAWA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,MAAM,CAAI,CACzB,OAAQA,MAAR,EACE,IAAK,QAAL,CAAe,MAAO,SAAP,CACf,IAAK,UAAL,CAAiB,MAAO,WAAP,CACjB,IAAK,SAAL,CAAgB,MAAO,SAAP,CAChB,IAAK,QAAL,CAAe,MAAO,QAAP,CACf,QAAS,MAAO,SAAP,CALX,CAOD,CARD,CAUA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAMC,CAAAA,OAAO,CAAGd,UAAU,EAA1B,CACA,GAAMe,CAAAA,SAAS,CAAGd,WAAW,GAAGe,MAAd,CAAqBC,KAArB,CAA2B,eAA3B,CAA4C,EAA5C,CAAlB,CACA,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACJ,SAAS,EAAIA,SAAS,CAAC,CAAD,CAAtB,CAA4BA,SAAS,CAAC,CAAD,CAArC,CAA2C,CAA5C,CAA1B,CACA,cAAwBjB,QAAQ,CAACoB,WAAD,CAAhC,wCAAOE,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,OAAO,CAAI,CAC5BL,WAAW,GAAKK,OAAhB,EAA2BT,OAAO,CAACU,IAAR,uBAA4BD,OAA5B,EAA3B,CACD,CAFD,CAIAxB,SAAS,CAAC,UAAM,CACdmB,WAAW,GAAKE,IAAhB,EAAwBC,OAAO,CAACH,WAAD,CAA/B,CACD,CAFQ,CAEN,CAACA,WAAD,CAAcE,IAAd,CAFM,CAAT,CAIA,mBACE,KAAC,IAAD,wBACE,KAAC,IAAD,EAAM,EAAE,CAAE,CAAV,uBACE,MAAC,KAAD,yBACE,MAAC,WAAD,iCAEE,cAAO,SAAS,CAAC,YAAjB,sBAFF,GADF,cAKE,MAAC,SAAD,yBACA,KAAC,UAAD,EACE,KAAK,CAAEV,SADT,CAEE,MAAM,CAAE,CACN,CAAEe,GAAG,CAAE,MAAP,CAAeC,QAAQ,CAAE,kBAAzB,CADM,CAEN,YAFM,CAEQ,MAFR,CAEgB,QAFhB,CAFV,CAME,KAAK,KANP,CAOE,OAAO,KAPT,CAQE,YAAY,CAAE,CARhB,CASE,UAAU,CAAEN,IATd,CAUE,aAAa,KAVf,CAWE,UAAU,CAAE,oBAACO,IAAD,QAAUb,CAAAA,OAAO,CAACU,IAAR,kBAAuBG,IAAI,CAACC,EAA5B,EAAV,EAXd,CAYE,WAAW,CAAI,CACb,SACE,gBAACD,IAAD,qBACE,iCACE,KAAC,MAAD,EAAQ,KAAK,CAAEhB,QAAQ,CAACgB,IAAI,CAACf,MAAN,CAAvB,UACGe,IAAI,CAACf,MADR,EADF,EADF,EAFW,CAZjB,EADA,cAwBA,KAAC,WAAD,EACE,UAAU,CAAEQ,IADd,CAEE,kBAAkB,CAAEE,UAFtB,CAGE,KAAK,CAAE,CAHT,CAIE,YAAY,CAAE,KAJhB,CAKE,KAAK,CAAC,QALR,EAxBA,GALF,GADF,EADF,EADF,CA4CD,CA1DD,CA4DA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination\n} from '@coreui/react'\n\nimport usersData from './UsersData'\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\n\nconst Users = () => {\n  const history = useHistory()\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n  const [page, setPage] = useState(currentPage)\n\n  const pageChange = newPage => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\n  }\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage)\n  }, [currentPage, page])\n\n  return (\n    <CRow>\n      <CCol xl={6}>\n        <CCard>\n          <CCardHeader>\n            Users\n            <small className=\"text-muted\"> example</small>\n          </CCardHeader>\n          <CCardBody>\n          <CDataTable\n            items={usersData}\n            fields={[\n              { key: 'name', _classes: 'font-weight-bold' },\n              'registered', 'role', 'status'\n            ]}\n            hover\n            striped\n            itemsPerPage={5}\n            activePage={page}\n            clickableRows\n            onRowClick={(item) => history.push(`/users/${item.id}`)}\n            scopedSlots = {{\n              'status':\n                (item)=>(\n                  <td>\n                    <CBadge color={getBadge(item.status)}>\n                      {item.status}\n                    </CBadge>\n                  </td>\n                )\n            }}\n          />\n          <CPagination\n            activePage={page}\n            onActivePageChange={pageChange}\n            pages={5}\n            doubleArrows={false} \n            align=\"center\"\n          />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}