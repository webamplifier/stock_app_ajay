{"ast":null,"code":"import _asyncToGenerator from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/src/views/widgets/WidgetsDropdown.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/node_modules/@babel/runtime/regenerator/index.js\";\nimport React from 'react';\nimport { CWidgetDropdown, CRow, CCol, CDropdown, CDropdownMenu, CDropdownItem, CDropdownToggle } from '@coreui/react';\nimport { userContext } from '../../context/UserContext';\nimport { url } from 'src/helpers/helpers';\nimport CIcon from '@coreui/icons-react';\nimport ChartLineSimple from '../charts/ChartLineSimple';\nimport ChartBarSimple from '../charts/ChartBarSimple';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar WidgetsDropdown = function WidgetsDropdown() {\n  _s();\n\n  var _React$useContext = React.useContext(userContext),\n      user = _React$useContext.user,\n      setLoad = _React$useContext.setLoad;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      customer_count = _React$useState2[0],\n      setCustomerCount = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      party_count = _React$useState4[0],\n      setPartyCount = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      category_count = _React$useState6[0],\n      setCategoryCount = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      product_count = _React$useState8[0],\n      setProductCount = _React$useState8[1];\n\n  React.useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoad(true);\n                _context.next = 3;\n                return fetch(url + 'fetchTotalCount', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if (!(response.ok === true)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  setCustomerCount(data.customer_count);\n                  setPartyCount(data.party_count);\n                  setCategoryCount(data.category_count);\n                  setProductCount(data.product_count);\n                } else {\n                  alert(data.message);\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CRow, {\n    children: [/*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"6\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-primary\",\n        header: \"Customers\",\n        text: customer_count.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"6\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-primary\",\n        header: \"Products\",\n        text: product_count.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"6\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-primary\",\n        header: \"Parties\",\n        text: party_count.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"6\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-primary\",\n        header: \"Categories\",\n        text: category_count.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(WidgetsDropdown, \"TbO49L3tu1f1Mpg6JkcpHJw4uqE=\");\n\n_c = WidgetsDropdown;\nexport default WidgetsDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetsDropdown\");","map":{"version":3,"sources":["/Volumes/Disk SSD/erp2.0/erp-2.0/frontend/src/views/widgets/WidgetsDropdown.js"],"names":["React","CWidgetDropdown","CRow","CCol","CDropdown","CDropdownMenu","CDropdownItem","CDropdownToggle","userContext","url","CIcon","ChartLineSimple","ChartBarSimple","WidgetsDropdown","useContext","user","setLoad","useState","customer_count","setCustomerCount","party_count","setPartyCount","category_count","setCategoryCount","product_count","setProductCount","useEffect","fetchData","fetch","method","headers","token","response","ok","json","data","status","alert","message","toString"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,eAPF,QAQO,eARP;AASA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,GAAT,QAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAE5B,0BAAyBb,KAAK,CAACc,UAAN,CAAiBN,WAAjB,CAAzB;AAAA,MAAQO,IAAR,qBAAQA,IAAR;AAAA,MAAaC,OAAb,qBAAaA,OAAb;;AACA,wBAA0ChB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAA1C;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAsBC,gBAAtB;;AACA,yBAAqCnB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAArC;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,aAApB;;AACA,yBAA2CrB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAA3C;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,gBAAvB;;AACA,yBAAyCvB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAAzC;AAAA;AAAA,MAAOO,aAAP;AAAA,MAAsBC,eAAtB;;AAEAzB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,YAAI;AAAA,aACHC,SADG;AAAA;AAAA;;AAAA;AAAA,4EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEX,gBAAAA,OAAO,CAAC,IAAD,CAAP;AADF;AAAA,uBAEyBY,KAAK,CAACnB,GAAG,GAAG,iBAAP,EAA0B;AAClDoB,kBAAAA,MAAM,EAAE,KAD0C;AAElDC,kBAAAA,OAAO,EAAE;AACL,qCAAiBf,IAAjB,aAAiBA,IAAjB,uBAAiBA,IAAI,CAAEgB;AADlB;AAFyC,iBAA1B,CAF9B;;AAAA;AAEQC,gBAAAA,QAFR;;AAAA,sBASMA,QAAQ,CAACC,EAAT,KAAgB,IATtB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAUyBD,QAAQ,CAACE,IAAT,EAVzB;;AAAA;AAUYC,gBAAAA,IAVZ;AAWMnB,gBAAAA,OAAO,CAAC,KAAD,CAAP;;AACA,oBAAImB,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACrBjB,kBAAAA,gBAAgB,CAACgB,IAAI,CAACjB,cAAN,CAAhB;AACAG,kBAAAA,aAAa,CAACc,IAAI,CAACf,WAAN,CAAb;AACAG,kBAAAA,gBAAgB,CAACY,IAAI,CAACb,cAAN,CAAhB;AACAG,kBAAAA,eAAe,CAACU,IAAI,CAACX,aAAN,CAAf;AACH,iBALD,MAKO;AACHa,kBAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACH;;AAnBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADkB;AAAA;AAAA;;AAuBpBX,IAAAA,SAAS;AACR,GAxBD,EAwBE,EAxBF;AA0BA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,MAAM,EAAC,WAFT;AAGE,QAAA,IAAI,EAAGT,cAAc,CAACqB,QAAf;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eASE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,MAAM,EAAC,UAFT;AAGE,QAAA,IAAI,EAAEf,aAAa,CAACe,QAAd;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aATF,eAiBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,MAAM,EAAC,SAFT;AAGE,QAAA,IAAI,EAAEnB,WAAW,CAACmB,QAAZ;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAjBF,eAyBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,MAAM,EAAC,YAFT;AAGE,QAAA,IAAI,EAAEjB,cAAc,CAACiB,QAAf;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAoCD,CAtED;;GAAM1B,e;;KAAAA,e;AAwEN,eAAeA,eAAf","sourcesContent":["import React from 'react'\nimport {\n  CWidgetDropdown,\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle\n} from '@coreui/react'\nimport { userContext } from '../../context/UserContext';\nimport { url } from 'src/helpers/helpers';\nimport CIcon from '@coreui/icons-react'\nimport ChartLineSimple from '../charts/ChartLineSimple'\nimport ChartBarSimple from '../charts/ChartBarSimple'\n\nconst WidgetsDropdown = () => {\n  \n  const { user,setLoad } = React.useContext(userContext);\n  const [customer_count,setCustomerCount] = React.useState(0);\n  const [party_count, setPartyCount] = React.useState(0);\n  const [category_count, setCategoryCount] = React.useState(0);\n  const [product_count, setProductCount] = React.useState(0);\n  \n  React.useEffect(()=>{\n    async function fetchData() {\n      setLoad(true);\n      const response = await fetch(url + 'fetchTotalCount', {\n          method: 'GET',\n          headers: {\n              'Authorization': user?.token\n          }\n      })\n\n      if (response.ok === true) {\n          const data = await response.json();\n          setLoad(false);\n          if (data.status === 200) {\n              setCustomerCount(data.customer_count);\n              setPartyCount(data.party_count);\n              setCategoryCount(data.category_count);\n              setProductCount(data.product_count);\n          } else {\n              alert(data.message);\n          }\n      }\n  }\n  fetchData();\n  },[])\n\n  return (\n    <CRow>\n      <CCol sm=\"6\" lg=\"6\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"Customers\"\n          text= {customer_count.toString()}\n        >\n        </CWidgetDropdown>\n      </CCol>\n      <CCol sm=\"6\" lg=\"6\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"Products\"\n          text={product_count.toString()}\n        >\n        </CWidgetDropdown>\n      </CCol>\n      <CCol sm=\"6\" lg=\"6\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"Parties\"\n          text={party_count.toString()}\n        >\n        </CWidgetDropdown>\n      </CCol>\n      <CCol sm=\"6\" lg=\"6\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"Categories\"\n          text={category_count.toString()}\n        >\n        </CWidgetDropdown>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"]},"metadata":{},"sourceType":"module"}