{"ast":null,"code":"import _asyncToGenerator from \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/src/screens/Reports/InventoryReport.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { Fragment } from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { userContext } from '../../context/UserContext';\nimport InventoryAdjustModal from 'src/components/InventoryAdjustModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showModal = _React$useState4[0],\n      setShowModal = _React$useState4[1];\n\n  var _React$useContext = React.useContext(userContext),\n      user = _React$useContext.user,\n      setLoad = _React$useContext.setLoad;\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inventoryList = _React$useState6[0],\n      setInventoryList = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      adjustAmount = _React$useState8[0],\n      setAdjustAmount = _React$useState8[1];\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      total = _React$useState10[0],\n      setTotal = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      allWarehouses = _React$useState12[0],\n      setAllWarehouses = _React$useState12[1];\n\n  var _React$useState13 = React.useState(''),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      currentWarehouse = _React$useState14[0],\n      setCurrentWarehouse = _React$useState14[1];\n\n  var _React$useState15 = React.useState([]),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      allProducts = _React$useState16[0],\n      setAllProducts = _React$useState16[1];\n\n  var _React$useState17 = React.useState(''),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      currentProduct = _React$useState18[0],\n      setCurrentProduct = _React$useState18[1];\n\n  var showModalFunc = function showModalFunc(id) {\n    setId(id);\n    setShowModal(true);\n  };\n\n  var submitAdjust = function submitAdjust() {\n    setLoad(true);\n    var formData = new FormData();\n    formData.append('new_qty', adjustAmount);\n\n    function editData() {\n      return _editData.apply(this, arguments);\n    }\n\n    function _editData() {\n      _editData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var respone, data, _fetchData;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(url + 'updateInventory/' + id, {\n                  method: 'POST',\n                  headers: {\n                    'Authorization': user.token\n                  },\n                  body: formData\n                });\n\n              case 2:\n                respone = _context2.sent;\n\n                if (!(respone.ok === true)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 6;\n                return respone.json();\n\n              case 6:\n                data = _context2.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  _fetchData = /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                      var response, _data;\n\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return fetch(url + 'fetchInventoryReport', {\n                                method: 'GET',\n                                headers: {\n                                  'Authorization': user === null || user === void 0 ? void 0 : user.token\n                                }\n                              });\n\n                            case 2:\n                              response = _context.sent;\n\n                              if (!(response.ok === true)) {\n                                _context.next = 8;\n                                break;\n                              }\n\n                              _context.next = 6;\n                              return response.json();\n\n                            case 6:\n                              _data = _context.sent;\n\n                              if (_data.status === 200) {\n                                setInventoryList(_data.list.map(function (item, index) {\n                                  return {\n                                    '#': index + 1,\n                                    'id': item.id,\n                                    'product_name': item.product_name,\n                                    'warehouse_name': item.warehouse_name,\n                                    'sale_unit_price': item.sale_unit_price,\n                                    'total_qty': item.total_qty\n                                  };\n                                }));\n                                setTotal(parseInt(_data.total_records));\n                              } else {\n                                toast.error(_data.message);\n                              }\n\n                            case 8:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function _fetchData() {\n                      return _ref.apply(this, arguments);\n                    };\n                  }();\n\n                  setId('');\n                  setAdjustAmount('');\n                  setShowModal(false);\n\n                  _fetchData();\n                } else {\n                  toast.error(data.message);\n                }\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _editData.apply(this, arguments);\n    }\n\n    editData();\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var string = \"\";\n\n    if (currentWarehouse && currentProduct) {\n      string = \"product=\".concat(currentProduct.label, \"&warehouse=\").concat(currentWarehouse.label);\n    } else if (currentWarehouse) {\n      string = \"warehouse=\".concat(currentWarehouse.label);\n    } else if (currentProduct) {\n      string = \"product=\".concat(currentProduct.label);\n    }\n\n    setLoad(true);\n\n    function submit() {\n      return _submit.apply(this, arguments);\n    }\n\n    function _submit() {\n      _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(url + \"fetchInventoryReport?\".concat(string), {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 2:\n                response = _context3.sent;\n\n                if (!(response.ok === true)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context3.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  setInventoryList(data.list.map(function (item, index) {\n                    return {\n                      '#': index + 1,\n                      'id': item.id,\n                      'product_name': item.product_name,\n                      'warehouse_name': item.warehouse_name,\n                      'sale_unit_price': item.sale_unit_price,\n                      'total_qty': item.total_qty\n                    };\n                  }));\n                  setTotal(parseInt(data.total_records));\n                } else {\n                  toast.error(data.message);\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 11:\n                toast.error('Oops something went wrong!');\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _submit.apply(this, arguments);\n    }\n\n    submit().catch(function (err) {\n      return toast.error('Internal server error!. Please try again later');\n    });\n  }\n\n  React.useEffect(function () {\n    setLoad(true);\n\n    function fetchWarehouse() {\n      return _fetchWarehouse.apply(this, arguments);\n    }\n\n    function _fetchWarehouse() {\n      _fetchWarehouse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                setLoad(true);\n                _context4.next = 3;\n                return fetch(url + 'warehouselist', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context4.sent;\n\n                if (!(response.ok === true)) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context4.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  setAllWarehouses(data === null || data === void 0 ? void 0 : data.warehouse_list.map(function (item) {\n                    return {\n                      value: item.id,\n                      label: item.name\n                    };\n                  }));\n                } else {\n                  toast.error(data.message);\n                }\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return _fetchWarehouse.apply(this, arguments);\n    }\n\n    fetchWarehouse();\n\n    function fetchProd() {\n      return _fetchProd.apply(this, arguments);\n    }\n\n    function _fetchProd() {\n      _fetchProd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response, data, _data$product_list;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                setLoad(true);\n                _context5.next = 3;\n                return fetch(url + 'fetchInventoryProducts', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 3:\n                response = _context5.sent;\n\n                if (!(response.ok === true)) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                _context5.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context5.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  setAllProducts(data === null || data === void 0 ? void 0 : (_data$product_list = data.product_list) === null || _data$product_list === void 0 ? void 0 : _data$product_list.map(function (item) {\n                    return {\n                      value: item.product_id,\n                      label: item.product_name\n                    };\n                  }));\n                } else {\n                  toast.error(data.message);\n                }\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n      return _fetchProd.apply(this, arguments);\n    }\n\n    fetchProd();\n\n    function fetchData() {\n      return _fetchData2.apply(this, arguments);\n    }\n\n    function _fetchData2() {\n      _fetchData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return fetch(url + 'fetchInventoryReport', {\n                  method: 'GET',\n                  headers: {\n                    'Authorization': user === null || user === void 0 ? void 0 : user.token\n                  }\n                });\n\n              case 2:\n                response = _context6.sent;\n\n                if (!(response.ok === true)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                _context6.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context6.sent;\n                setLoad(false);\n\n                if (data.status === 200) {\n                  setInventoryList(data.list.map(function (item, index) {\n                    return {\n                      '#': index + 1,\n                      'id': item.id,\n                      'product_name': item.product_name,\n                      'warehouse_name': item.warehouse_name,\n                      'sale_unit_price': item.sale_unit_price,\n                      'total_qty': item.total_qty\n                    };\n                  }));\n                  setTotal(parseInt(data.total_records));\n                }\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n      return _fetchData2.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  var columns = [{\n    key: \"#\",\n    text: \"#\",\n    className: \"#\",\n    sortable: false\n  }, {\n    key: \"product_name\",\n    text: \"Product\",\n    className: \"product_name\",\n    sortable: true\n  }, {\n    key: \"warehouse_name\",\n    text: \"Warehouse\",\n    className: \"warehouse_name\",\n    sortable: true\n  }, {\n    key: \"sale_unit_price\",\n    text: \"Price\",\n    className: \"sale_unit_price\",\n    sortable: true\n  }, {\n    key: \"total_qty\",\n    text: \"Available Qty\",\n    className: \"total_qty\",\n    sortable: true\n  }, {\n    key: \"action\",\n    text: \"Action\",\n    className: \"action\",\n    width: 100,\n    sortable: false,\n    cell: function cell(record) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            return showModalFunc(record.id);\n          },\n          class: \"fa fa-pencil mr-1\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, _this);\n    }\n  }];\n  var config = {\n    page_size: 10,\n    length_menu: [10, 20, 50],\n    button: {\n      excel: false,\n      print: false,\n      extra: false\n    }\n  };\n\n  function fetchData(_x) {\n    return _fetchData3.apply(this, arguments);\n  }\n\n  function _fetchData3() {\n    _fetchData3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(query) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setLoad(true);\n              _context7.next = 3;\n              return fetch(url + query, {\n                method: 'GET',\n                headers: {\n                  'Authorization': user === null || user === void 0 ? void 0 : user.token\n                }\n              });\n\n            case 3:\n              response = _context7.sent;\n\n              if (!(response.ok === true)) {\n                _context7.next = 10;\n                break;\n              }\n\n              _context7.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context7.sent;\n              setLoad(false);\n\n              if (data.status === 200) {\n                setInventoryList(data.list.map(function (item, index) {\n                  return {\n                    '#': index + 1,\n                    'id': item.id,\n                    'product_name': item.product_name,\n                    'warehouse_name': item.warehouse_name,\n                    'sale_unit_price': item.sale_unit_price,\n                    'total_qty': item.total_qty\n                  };\n                }));\n                setTotal(parseInt(data.total_records));\n              } else {\n                toast.error(data.message);\n              }\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _fetchData3.apply(this, arguments);\n  }\n\n  var handleChange = function handleChange(e) {\n    var string = \"\";\n\n    if (currentWarehouse && currentProduct) {\n      string = \"&product=\".concat(currentProduct.label, \"&warehouse=\").concat(currentWarehouse.label);\n    } else if (currentWarehouse) {\n      string = \"&warehouse=\".concat(currentWarehouse.label);\n    } else if (currentProduct) {\n      string = \"&product=\".concat(currentProduct.label);\n    }\n\n    var query = \"fetchInventoryReport?page_number=\".concat(e.page_number, \"&page_size=\").concat(e.page_size, \"&filter_value=\").concat(e.filter_value).concat(string);\n\n    if (e.sort_order) {\n      var sort = JSON.stringify(e.sort_order);\n      query = \"fetchInventoryReport?page_number=\".concat(e.page_number, \"&page_size=\").concat(e.page_size, \"&filter_value=\").concat(e.filter_value, \"&sort_order=\").concat(sort).concat(string);\n    }\n\n    fetchData(query);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InventoryAdjustModal, {\n      header: \"Adjust Inventory\",\n      Label: \"New Quantity\",\n      showModal: showModal,\n      setShowModal: setShowModal,\n      adjutAmount: adjustAmount,\n      setAdjustAmount: setAdjustAmount,\n      submitAdjust: submitAdjust\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: function onSubmit(e) {\n        return handleSubmit(e);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-row create-purchase-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"date\",\n            children: \"Warehouse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: allWarehouses,\n            value: currentWarehouse,\n            onChange: setCurrentWarehouse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"date\",\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: allProducts,\n            value: currentProduct,\n            onChange: setCurrentProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group col-md-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"Submit\",\n            class: \"font-weight-bold my-4 py-2 px-4 btn btn-success\",\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactDatatable, {\n      config: config,\n      records: inventoryList,\n      columns: columns,\n      total_record: total,\n      onChange: function onChange(e) {\n        return handleChange(e);\n      },\n      dynamic: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"YHBxNo1LaZWNvF7jA6vTHhI6API=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/alihussainkabri/Downloads/projects/mwbbazar/stock-app/src/screens/Reports/InventoryReport.js"],"names":["React","Fragment","ReactDatatable","Select","url","toast","ToastContainer","userContext","InventoryAdjustModal","Index","useState","id","setId","showModal","setShowModal","useContext","user","setLoad","inventoryList","setInventoryList","adjustAmount","setAdjustAmount","total","setTotal","allWarehouses","setAllWarehouses","currentWarehouse","setCurrentWarehouse","allProducts","setAllProducts","currentProduct","setCurrentProduct","showModalFunc","submitAdjust","formData","FormData","append","editData","fetch","method","headers","token","body","respone","ok","json","data","status","fetchData","response","list","map","item","index","product_name","warehouse_name","sale_unit_price","total_qty","parseInt","total_records","error","message","handleSubmit","e","preventDefault","string","label","submit","catch","err","useEffect","fetchWarehouse","warehouse_list","value","name","fetchProd","product_list","product_id","columns","key","text","className","sortable","width","cell","record","cursor","config","page_size","length_menu","button","excel","print","extra","query","handleChange","page_number","filter_value","sort_order","sort","JSON","stringify"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport Select from 'react-select';\nimport { url } from 'src/helpers/helpers';\nimport { toast, ToastContainer } from 'react-toastify'\nimport { userContext } from '../../context/UserContext'\nimport InventoryAdjustModal from 'src/components/InventoryAdjustModal';\n\nexport default function Index() {\n  const [id, setId] = React.useState(null);\n  const [showModal, setShowModal] = React.useState(false)\n  const { user,setLoad } = React.useContext(userContext);\n  const [inventoryList, setInventoryList] = React.useState([]);\n  const [adjustAmount,setAdjustAmount] = React.useState(0);\n  const [total,setTotal] = React.useState(0); \n  const [allWarehouses, setAllWarehouses] = React.useState([]);\n  const [currentWarehouse, setCurrentWarehouse] = React.useState('');\n  const [allProducts,setAllProducts] = React.useState([]);\n  const [currentProduct, setCurrentProduct] = React.useState('');\n\nconst showModalFunc = (id) => {\n    setId(id);\n    setShowModal(true);\n}\n\nconst submitAdjust = () => {\n    setLoad(true)\n    const formData = new FormData();\n    formData.append('new_qty',adjustAmount);\n    async function editData(){\n        \n        const respone = await fetch(url + 'updateInventory/' + id,{\n            method : 'POST',\n            headers : {\n                'Authorization' : user.token,\n            },\n            body : formData\n        })\n\n        if (respone.ok === true){\n            const data = await respone.json();\n            setLoad(false)\n            if (data.status === 200){\n                setId('');\n                setAdjustAmount('');\n                setShowModal(false);\n                async function fetchData() {\n                    const response = await fetch(url + 'fetchInventoryReport', {\n                        method: 'GET',\n                        headers: {\n                            'Authorization': user?.token\n                        }\n                    })\n        \n                    if (response.ok === true) {\n                        const data = await response.json();\n        \n                        if (data.status === 200) {\n                            setInventoryList(data.list.map((item, index) => {\n                                return {\n                                  '#': index + 1,\n                                  'id': item.id,\n                                  'product_name': item.product_name,\n                                  'warehouse_name': item.warehouse_name,\n                                  'sale_unit_price': item.sale_unit_price,\n                                  'total_qty': item.total_qty,\n                                }\n                              }));\n                              setTotal(parseInt(data.total_records));\n                        } else {\n                            toast.error(data.message);\n                        }\n                    }\n                }\n                fetchData();\n            }else{\n                toast.error(data.message)\n            }\n        }\n    }\n    editData();\n}\n\nfunction handleSubmit(e){\n   e.preventDefault(); \n   let string=\"\";\n    if(currentWarehouse && currentProduct){\n       string=`product=${currentProduct.label}&warehouse=${currentWarehouse.label}`;\n    }\n    else if(currentWarehouse){\n       string=`warehouse=${currentWarehouse.label}`; \n    }\n    else if(currentProduct){\n        string=`product=${currentProduct.label}`;\n    }    \n      setLoad(true);\n      async function submit(){\n          const response = await fetch(url + `fetchInventoryReport?${string}`,{\n              method : 'GET',\n              headers : {\n                  'Authorization' : user?.token\n              }\n          });\n           \n          if (response.ok === true){\n              const data = await response.json();\n              setLoad(false);\n              if (data.status === 200){\n                setInventoryList(data.list.map((item, index) => {\n                  return {\n                    '#': index + 1,\n                    'id': item.id,\n                    'product_name': item.product_name,\n                    'warehouse_name': item.warehouse_name,\n                    'sale_unit_price': item.sale_unit_price,\n                    'total_qty': item.total_qty,\n                  }\n                }));\n                setTotal(parseInt(data.total_records));\n              }else{\n                  toast.error(data.message)\n              }\n          }else{\n              toast.error('Oops something went wrong!')\n          }\n      }\n      submit().catch(err=>toast.error('Internal server error!. Please try again later'))\n }\n\n  React.useEffect(() => {\n    setLoad(true)\n\n    async function fetchWarehouse() {\n      setLoad(true);\n      const response = await fetch(url + 'warehouselist', {\n          method: 'GET',\n          headers: {\n              'Authorization': user?.token\n          }\n      })\n\n      if (response.ok === true) {\n          const data = await response.json();\n          setLoad(false)\n          if (data.status === 200) {\n              setAllWarehouses(data?.warehouse_list.map(item => {\n                  return {\n                      value: item.id,\n                      label: item.name\n                  }\n              }))\n          } else {\n              toast.error(data.message)\n          }\n        }\n      }\n    fetchWarehouse();\n\n    async function fetchProd() {\n      setLoad(true);\n      const response = await fetch(url + 'fetchInventoryProducts', {\n          method: 'GET',\n          headers: {\n              'Authorization': user?.token\n          }\n      })\n\n      if (response.ok === true) {\n          const data = await response.json();\n          setLoad(false)\n          if (data.status === 200) {\n              setAllProducts(data?.product_list?.map(item=>{\n                  return {\n                      value : item.product_id,\n                      label : item.product_name,\n                  }\n              }))\n          } else {\n              toast.error(data.message)\n          }\n        }\n      }\n      fetchProd();\n\n    async function fetchData() {\n      const response = await fetch(url + 'fetchInventoryReport', {\n        method: 'GET',\n        headers: {\n          'Authorization': user?.token\n        }\n      })\n      if(response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n            setInventoryList(data.list.map((item, index) => {\n                return {\n                  '#': index + 1,\n                  'id': item.id,\n                  'product_name': item.product_name,\n                  'warehouse_name': item.warehouse_name,\n                  'sale_unit_price': item.sale_unit_price,\n                  'total_qty': item.total_qty,\n                }\n              }));\n              setTotal(parseInt(data.total_records));\n        }\n      }\n    }\n    fetchData();\n  }, [])\n  \n  const columns = [\n    {\n        key: \"#\",\n        text: \"#\",\n        className: \"#\",\n        sortable: false,\n    },\n    {\n        key: \"product_name\",\n        text: \"Product\",\n        className: \"product_name\",\n        sortable: true\n    },\n    {\n        key: \"warehouse_name\",\n        text: \"Warehouse\",\n        className: \"warehouse_name\",\n        sortable: true\n    },\n    {\n        key: \"sale_unit_price\",\n        text: \"Price\",\n        className: \"sale_unit_price\",\n        sortable: true\n    },\n    {\n        key: \"total_qty\",\n        text: \"Available Qty\",\n        className: \"total_qty\",\n        sortable: true\n    },\n    {\n        key: \"action\",\n        text: \"Action\",\n        className: \"action\",\n        width: 100,\n        sortable: false,\n        cell: record => { \n            return (\n                <Fragment>     \n                    <i style={{cursor:'pointer'}} \n                       onClick={()=>showModalFunc(record.id)} \n                       class=\"fa fa-pencil mr-1\" aria-hidden=\"true\">\n                    </i>\n                </Fragment>\n            );\n        }\n    }\n];\n\nconst config = {\n    page_size: 10,\n    length_menu: [ 10, 20, 50 ],\n    button: {\n        excel: false,\n        print: false,\n        extra: false,\n    }\n}\n  async function fetchData(query) {\n    setLoad(true);\n    const response = await fetch(url + query, {\n        method: 'GET',\n        headers: {\n            'Authorization': user?.token\n        }\n    })\n    if (response.ok === true) {\n        const data = await response.json();\n        setLoad(false)\n        if (data.status === 200) {\n          setInventoryList(data.list.map((item, index) => {\n            return {\n              '#': index + 1,\n              'id': item.id,\n              'product_name': item.product_name,\n              'warehouse_name': item.warehouse_name,\n              'sale_unit_price': item.sale_unit_price,\n              'total_qty': item.total_qty,\n            }\n          }));\n          setTotal(parseInt(data.total_records));\n        } else {\n            toast.error(data.message);\n        }\n    }\n}\nconst handleChange=(e)=>{\n    let string=\"\";\n    \n    if(currentWarehouse && currentProduct){\n       string=`&product=${currentProduct.label}&warehouse=${currentWarehouse.label}`;\n    }\n    else if(currentWarehouse){\n       string=`&warehouse=${currentWarehouse.label}`; \n    }\n    else if(currentProduct){\n        string=`&product=${currentProduct.label}`;\n    }\n\n  let query=`fetchInventoryReport?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}${string}`;\n  if(e.sort_order){\n      let sort = JSON.stringify(e.sort_order);\n      query=`fetchInventoryReport?page_number=${e.page_number}&page_size=${e.page_size}&filter_value=${e.filter_value}&sort_order=${sort}${string}`;\n  }\n  fetchData(query);\n}\n\n  return (\n    <section>\n      <ToastContainer />\n      <InventoryAdjustModal header=\"Adjust Inventory\" Label = \"New Quantity\" showModal={showModal} setShowModal={setShowModal} adjutAmount={adjustAmount} setAdjustAmount={setAdjustAmount} submitAdjust={submitAdjust} />\n            <form onSubmit={(e)=>handleSubmit(e)}>\n            <div class=\"form-row create-purchase-header\">\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">Warehouse</label>\n            <Select options={allWarehouses} value={currentWarehouse} onChange={setCurrentWarehouse} />\n            </div>\n            <div class=\"form-group col-md-3\">\n            <label for=\"date\">Product</label>\n            <Select options={allProducts} value={currentProduct} onChange={setCurrentProduct} />\n            </div>\n            <div class=\"form-group col-md-3\">\n            <button type=\"Submit\" class=\"font-weight-bold my-4 py-2 px-4 btn btn-success\">Filter</button>\n            </div>\n            </div>\n            </form>\n      <ReactDatatable\n          config={config}\n          records={inventoryList}\n          columns={columns}\n          total_record={total}\n          onChange={(e)=>handleChange(e)}\n          dynamic={true}\n        />\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}